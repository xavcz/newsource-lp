{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAKA,MAAM,CAAC,OAAO,GAAG,ymBAAymB,CAAA;;AAE1nB,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,UAAS,KAAK,EAAE;AAC5C,MAAI,KAAK,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAC,CAAA;AACzC,MAAI,KAAK,CAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,QAAQ,EAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA,AAAC,CAAA,KAC9E,IAAI,KAAK,CAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,SAAS,CAAA,KACrC,IAAI,KAAK,CAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,SAAS,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,KAChE,IAAI,KAAK,CAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,OAAO,CAAA,KACnC,IAAI,KAAK,CAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAA,KACpC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,MAAM,CAAA,KAClC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,YAAY,CAAA,KACxC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,YAAY,CAAA;AAC7C,SAAO,KAAK,CAAA;CACb,CAAA","file":"index-compiled.js","sourcesContent":["// Copyright 2014, 2015 Simon Lydell\n// X11 (“MIT”) Licensed. (See LICENSE.)\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nmodule.exports = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|((?:0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?))|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]{1,6}\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-*\\/%&|^]|<{1,2}|>{1,3}|!=?|={1,2})=?|[?:~]|[;,.[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nmodule.exports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0]}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n"]}