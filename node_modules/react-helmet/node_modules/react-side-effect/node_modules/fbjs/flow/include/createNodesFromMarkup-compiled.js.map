{"version":3,"sources":["createNodesFromMarkup.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAcA,IAAI,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;;AAE3D,IAAI,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC3D,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;;;;AAKrC,IAAI,SAAS,GACX,oBAAoB,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;;;;;AAKxE,IAAI,eAAe,GAAG,YAAY,CAAC;;;;;;;;AAQnC,SAAS,WAAW,CAAC,MAAM,EAAE;AAC3B,MAAI,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAClD,SAAO,aAAa,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;CACxD;;;;;;;;;;;;AAYD,SAAS,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE;AACnD,MAAI,IAAI,GAAG,SAAS,CAAC;AACrB,WAAS,CAAC,CAAC,CAAC,SAAS,EAAE,6CAA6C,CAAC,CAAC;AACtE,MAAI,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;;AAEnC,MAAI,IAAI,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC/C,MAAI,IAAI,EAAE;AACR,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;AAE5C,QAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACxB,WAAO,SAAS,EAAE,EAAE;AAClB,UAAI,GAAG,IAAI,CAAC,SAAS,CAAC;KACvB;GACF,MAAM;AACL,QAAI,CAAC,SAAS,GAAG,MAAM,CAAC;GACzB;;AAED,MAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAClD,MAAI,OAAO,CAAC,MAAM,EAAE;AAClB,aAAS,CACP,YAAY,EACZ,mEAAmE,CACpE,CAAC;AACF,wBAAoB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;GACrD;;AAED,MAAI,KAAK,GAAG,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClD,SAAO,IAAI,CAAC,SAAS,EAAE;AACrB,QAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GAClC;AACD,SAAO,KAAK,CAAC;CACd;;AAED,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC","file":"createNodesFromMarkup-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('ExecutionEnvironment');\n\nvar createArrayFromMixed = require('createArrayFromMixed');\nvar getMarkupWrap = require('getMarkupWrap');\nvar invariant = require('invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized');\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    invariant(\n      handleScript,\n      'createNodesFromMarkup(...): Unexpected <script> element rendered.'\n    );\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n"]}