{"version":3,"sources":["containsNode.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;;;;;;AAWzC,SAAS,YAAY,CAAC,EAAE,EAAE,GAAG,EAAE;AAC7B,MAAI,MAAM,GAAG,IAAI,CAAC;;AAElB,WAAS,EAAE,OAAO,MAAM,EAAE;AACxB,QAAI,SAAS,GAAG,EAAE;QACd,SAAS,GAAG,GAAG,CAAC;AACpB,UAAM,GAAG,KAAK,CAAC;;AAEf,QAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE;AAC5B,aAAO,KAAK,CAAC;KACd,MAAM,IAAI,SAAS,KAAK,SAAS,EAAE;AAClC,aAAO,IAAI,CAAC;KACb,MAAM,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;AAChC,aAAO,KAAK,CAAC;KACd,MAAM,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;AAChC,QAAE,GAAG,SAAS,CAAC;AACf,SAAG,GAAG,SAAS,CAAC,UAAU,CAAC;AAC3B,YAAM,GAAG,IAAI,CAAC;AACd,eAAS,SAAS,CAAC;KACpB,MAAM,IAAI,SAAS,CAAC,QAAQ,EAAE;AAC7B,aAAO,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACtC,MAAM,IAAI,SAAS,CAAC,uBAAuB,EAAE;AAC5C,aAAO,CAAC,EAAE,SAAS,CAAC,uBAAuB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAA,AAAC,CAAC;KAC9D,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;CACF;;AAED,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"containsNode-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\n'use strict';\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(_x, _x2) {\n  var _again = true;\n\n  _function: while (_again) {\n    var outerNode = _x,\n        innerNode = _x2;\n    _again = false;\n\n    if (!outerNode || !innerNode) {\n      return false;\n    } else if (outerNode === innerNode) {\n      return true;\n    } else if (isTextNode(outerNode)) {\n      return false;\n    } else if (isTextNode(innerNode)) {\n      _x = outerNode;\n      _x2 = innerNode.parentNode;\n      _again = true;\n      continue _function;\n    } else if (outerNode.contains) {\n      return outerNode.contains(innerNode);\n    } else if (outerNode.compareDocumentPosition) {\n      return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n    } else {\n      return false;\n    }\n  }\n}\n\nmodule.exports = containsNode;"]}