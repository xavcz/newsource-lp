{"version":3,"sources":["getUnboundedScrollPosition.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,YAAY,CAAC;;;;;;;;;;;;AAYb,SAAS,0BAA0B,CAAC,UAAU,EAAE;AAC9C,MAAI,UAAU,KAAK,MAAM,EAAE;AACzB,WAAO;AACL,OAAC,EAAE,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,UAAU;AAC5D,OAAC,EAAE,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,SAAS;KAC5D,CAAC;GACH;AACD,SAAO;AACL,KAAC,EAAE,UAAU,CAAC,UAAU;AACxB,KAAC,EAAE,UAAU,CAAC,SAAS;GACxB,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,0BAA0B,CAAC","file":"getUnboundedScrollPosition-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;"]}