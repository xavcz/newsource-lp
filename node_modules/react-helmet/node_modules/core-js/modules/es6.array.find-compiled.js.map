{"version":3,"sources":["es6.array.find.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,KAAK,GAAK,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACxC,GAAG,GAAO,MAAM;IAChB,MAAM,GAAI,IAAI,CAAC;;AAEnB,IAAG,GAAG,IAAI,EAAE,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,YAAU;AAAE,QAAM,GAAG,KAAK,CAAC;CAAE,CAAC,CAAC;AAC1D,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,MAAM,EAAE,OAAO,EAAE;AAC/C,MAAI,EAAE,SAAS,IAAI,CAAC,UAAU,0BAAwB;AACpD,WAAO,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;GACjF;CACF,CAAC,CAAC;AACH,OAAO,CAAC,uBAAuB,CAAC,CAAC,GAAG,CAAC,CAAC","file":"es6.array.find-compiled.js","sourcesContent":["'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(5)\n  , KEY     = 'find'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);"]}