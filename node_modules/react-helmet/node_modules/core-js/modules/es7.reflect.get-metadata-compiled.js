'use strict';

var metadata = require('./_metadata'),
    anObject = require('./_an-object'),
    getPrototypeOf = require('./_').getProto,
    ordinaryHasOwnMetadata = metadata.has,
    ordinaryGetOwnMetadata = metadata.get,
    toMetaKey = metadata.key;

var ordinaryGetMetadata = function ordinaryGetMetadata(_x, _x2, _x3) {
  var _again = true;

  _function: while (_again) {
    var MetadataKey = _x,
        O = _x2,
        P = _x3;
    _again = false;

    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
    var parent = getPrototypeOf(O);
    if (parent !== null) {
      _x = MetadataKey;
      _x2 = parent;
      _x3 = P;
      _again = true;
      hasOwn = parent = undefined;
      continue _function;
    } else {
      return undefined;
    }
  }
};

metadata.exp({ getMetadata: function getMetadata(metadataKey, target /*, targetKey */) {
    return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  } });

//# sourceMappingURL=es7.reflect.get-metadata-compiled.js.map