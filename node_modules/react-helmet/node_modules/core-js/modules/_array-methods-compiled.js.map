{"version":3,"sources":["_array-methods.js"],"names":[],"mappings":";;;;;;;;;AAOA,IAAI,GAAG,GAAQ,OAAO,CAAC,QAAQ,CAAC;IAC5B,OAAO,GAAI,OAAO,CAAC,YAAY,CAAC;IAChC,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC;IAClC,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC;IAClC,GAAG,GAAQ,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAClD,MAAM,CAAC,OAAO,GAAG,UAAS,IAAI,EAAE,OAAO,EAAC;AACtC,MAAI,MAAM,GAAU,IAAI,IAAI,CAAC;MACzB,SAAS,GAAO,IAAI,IAAI,CAAC;MACzB,OAAO,GAAS,IAAI,IAAI,CAAC;MACzB,QAAQ,GAAQ,IAAI,IAAI,CAAC;MACzB,aAAa,GAAG,IAAI,IAAI,CAAC;MACzB,QAAQ,GAAQ,IAAI,IAAI,CAAC,IAAI,aAAa;MAC1C,MAAM,GAAU,OAAO,IAAI,GAAG,CAAC;AACnC,SAAO,UAAS,KAAK,EAAE,UAAU,EAAE,IAAI,EAAC;AACtC,QAAI,CAAC,GAAQ,QAAQ,CAAC,KAAK,CAAC;QACxB,IAAI,GAAK,OAAO,CAAC,CAAC,CAAC;QACnB,CAAC,GAAQ,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACjC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9B,KAAK,GAAI,CAAC;QACV,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,SAAS;QAClF,GAAG;QAAE,GAAG,CAAC;AACb,WAAK,MAAM,GAAG,KAAK,EAAE,KAAK,EAAE,EAAC,IAAG,QAAQ,IAAI,KAAK,IAAI,IAAI,EAAC;AACxD,SAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AAClB,SAAG,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACvB,UAAG,IAAI,EAAC;AACN,YAAG,MAAM,EAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;aACzB,IAAG,GAAG,EAAC,QAAO,IAAI;AACrB,iBAAK,CAAC;AAAE,qBAAO,IAAI,CAAC;AACpB,iBAAK,CAAC;AAAE,qBAAO,GAAG,CAAC;AACnB,iBAAK,CAAC;AAAE,qBAAO,KAAK,CAAC;AACrB,iBAAK,CAAC;AAAE,oBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;WAC1B,MAAM,IAAG,QAAQ,EAAC,OAAO,KAAK,CAAC;OACjC;KACF;AACD,WAAO,aAAa,GAAG,CAAC,CAAC,GAAG,OAAO,IAAI,QAAQ,GAAG,QAAQ,GAAG,MAAM,CAAC;GACrE,CAAC;CACH,CAAC","file":"_array-methods-compiled.js","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};"]}