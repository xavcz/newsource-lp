{"version":3,"sources":["_object-assign.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,CAAC,GAAU,OAAO,CAAC,KAAK,CAAC;IACzB,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC;IAClC,OAAO,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC;;;AAGrC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,YAAU;AAC7C,MAAI,CAAC,GAAG,MAAM,CAAC,MAAM;MACjB,CAAC,GAAG,EAAE;MACN,CAAC,GAAG,EAAE;MACN,CAAC,GAAG,MAAM,EAAE;MACZ,CAAC,GAAG,sBAAsB,CAAC;AAC/B,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACT,GAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC,EAAC;AAAE,KAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;GAAE,CAAC,CAAC;AAC9C,SAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;CAChE,CAAC,GAAG,SAAS,MAAM,CAAC,MAAM,EAAE,MAAM,EAAC;;AAClC,MAAI,CAAC,GAAO,QAAQ,CAAC,MAAM,CAAC;MACxB,IAAI,GAAI,SAAS,CAAC,MAAM;MACxB,KAAK,GAAG,CAAC;MACT,OAAO,GAAM,CAAC,CAAC,OAAO;MACtB,UAAU,GAAG,CAAC,CAAC,UAAU;MACzB,MAAM,GAAO,CAAC,CAAC,MAAM,CAAC;AAC1B,SAAM,IAAI,GAAG,KAAK,EAAC;AACjB,QAAI,CAAC,GAAQ,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;QACpC,IAAI,GAAK,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;QACnE,MAAM,GAAG,IAAI,CAAC,MAAM;QACpB,CAAC,GAAQ,CAAC;QACV,GAAG,CAAC;AACR,WAAM,MAAM,GAAG,CAAC,EAAC,IAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;GACrE;AACD,SAAO,CAAC,CAAC;CACV,GAAG,MAAM,CAAC,MAAM,CAAC","file":"_object-assign-compiled.js","sourcesContent":["'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./_')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./_fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;"]}