{"version":3,"sources":["_string-trim.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;IAC/B,KAAK,GAAK,OAAO,CAAC,UAAU,CAAC;IAC7B,MAAM,GAAI,wBAAkE,GAC1E,yBAAgF;IAClF,KAAK,GAAK,GAAG,GAAG,MAAM,GAAG,GAAG;IAC5B,GAAG,GAAO,IAAc;IACxB,KAAK,GAAK,MAAM,CAAC,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;IAC3C,KAAK,GAAK,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;;AAE3C,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,GAAG,EAAE,IAAI,EAAE,KAAK,EAAC;AACvC,MAAI,GAAG,GAAK,EAAE,CAAC;AACf,MAAI,KAAK,GAAG,KAAK,CAAC,YAAU;AAC1B,WAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;GAC7C,CAAC,CAAC;AACH,MAAI,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACrD,MAAG,KAAK,EAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AACzB,SAAO,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;CACvD,CAAC;;;;;AAKF,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,UAAS,MAAM,EAAE,IAAI,EAAC;AAC/C,QAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACjC,MAAG,IAAI,GAAG,CAAC,EAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC/C,MAAG,IAAI,GAAG,CAAC,EAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC/C,SAAO,MAAM,CAAC;CACf,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"_string-trim-compiled.js","sourcesContent":["var $export = require('./_export')\n  , defined = require('./_defined')\n  , fails   = require('./_fails')\n  , spaces  = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n      '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF'\n  , space   = '[' + spaces + ']'\n  , non     = '\\u200b\\u0085'\n  , ltrim   = RegExp('^' + space + space + '*')\n  , rtrim   = RegExp(space + space + '*$');\n\nvar exporter = function(KEY, exec, ALIAS){\n  var exp   = {};\n  var FORCE = fails(function(){\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if(ALIAS)exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function(string, TYPE){\n  string = String(defined(string));\n  if(TYPE & 1)string = string.replace(ltrim, '');\n  if(TYPE & 2)string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;"]}