{"version":3,"sources":["es6.array.iterator.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,gBAAgB,GAAG,OAAO,CAAC,uBAAuB,CAAC;IACnD,IAAI,GAAe,OAAO,CAAC,cAAc,CAAC;IAC1C,SAAS,GAAU,OAAO,CAAC,cAAc,CAAC;IAC1C,SAAS,GAAU,OAAO,CAAC,eAAe,CAAC,CAAC;;;;;;AAMhD,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,UAAS,QAAQ,EAAE,IAAI,EAAC;AACjF,MAAI,CAAC,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC9B,MAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACZ,MAAI,CAAC,EAAE,GAAG,IAAI,CAAC;;CAEhB,EAAE,YAAU;AACX,MAAI,CAAC,GAAO,IAAI,CAAC,EAAE;MACf,IAAI,GAAI,IAAI,CAAC,EAAE;MACf,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AACtB,MAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,MAAM,EAAC;AACzB,QAAI,CAAC,EAAE,GAAG,SAAS,CAAC;AACpB,WAAO,IAAI,CAAC,CAAC,CAAC,CAAC;GAChB;AACD,MAAG,IAAI,IAAI,MAAM,EAAG,OAAO,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC1C,MAAG,IAAI,IAAI,QAAQ,EAAC,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7C,SAAO,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACnC,EAAE,QAAQ,CAAC,CAAC;;;AAGb,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;;AAEtC,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACzB,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC3B,gBAAgB,CAAC,SAAS,CAAC,CAAC","file":"es6.array.iterator-compiled.js","sourcesContent":["'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');"]}