{"version":3,"sources":["karma.config.js"],"names":[],"mappings":";;;;AAEA,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AAC/B,UAAM,CAAC,GAAG,CAAC;;AAEP,gBAAQ,EAAE,EAAE;;;AAGZ,gCAAwB,EAAE,KAAK;;AAE/B,cAAM,EAAE;AACJ,iBAAK,EAAE;AACH,wBAAQ,EAAE,MAAM;aACnB;SACJ;;;AAGD,kBAAU,EAAE,CACR,gBAAgB,EAChB,YAAY,EACZ,OAAO,CACV;;AAED,aAAK,EAAE,CACH,eAAe,CAClB;;AAED,qBAAa,EAAE;;AAEX,2BAAe,EAAE,CACb,SAAS,EACT,WAAW,CACd;SACJ;;AAED,wBAAgB,EAAE;AACd,eAAG,EAAE,wBAAwB;AAC7B,qBAAS,EAAE,CAAC;AACR,oBAAI,EAAE,MAAM;AACZ,sBAAM,EAAE,MAAM;aACjB,EAAE;AACC,oBAAI,EAAE,MAAM;AACZ,sBAAM,EAAE,GAAG;AACX,oBAAI,EAAE,UAAU;aACnB,EAAE;AACC,oBAAI,EAAE,MAAM;AACZ,sBAAM,EAAE,GAAG;AACX,oBAAI,EAAE,WAAW;aACpB,CAAC;SACL;;AAED,eAAO,EAAE;AACL,mBAAO,EAAE,mBAAmB;AAC5B,kBAAM,EAAE;AACJ,0BAAU,EAAE,CAAC;AACT,wBAAI,EAAE,aAAa;;AAEnB,2BAAO,EAAE,mCAAmC;AAC5C,0BAAM,EAAE,6BAA6B;iBACxC,CAAC;aACL;AACD,mBAAO,EAAE;AACL,0BAAU,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC;aACrC;AACD,iBAAK,EAAE,IAAI;SACd;;AAED,qBAAa,EAAE;AACX,kBAAM,EAAE,IAAI;SACf;;;;AAID,iBAAS,EAAE,CACP,UAAU,EACV,MAAM,CACT;;;AAGD,YAAI,EAAE,IAAI;;;AAGV,cAAM,EAAE,IAAI;;;;AAIZ,gBAAQ,EAAE,MAAM,CAAC,QAAQ;;;AAGzB,iBAAS,EAAE,IAAI;;;;;;;;;;AAUf,gBAAQ,EAAE,CACN,QAAQ,EACR,WAAW,CACd;;;AAGD,sBAAc,EAAE,KAAK;;;;AAIrB,iBAAS,EAAE,IAAI;KAClB,CAAC,CAAC;CACN,CAAC","file":"karma.config-compiled.js","sourcesContent":["// Karma configuration\n\nmodule.exports = function (config) {\n    config.set({\n        // ... normal karma configuration\n        basePath: \"\",\n\n        // How long will Karma wait for a message from a browser before disconnecting from it (in ms).\n        browserNoActivityTimeout: 60000,\n\n        client: {\n            mocha: {\n                reporter: \"html\"\n            }\n        },\n\n        // frameworks to use\n        frameworks: [\n            \"phantomjs-shim\",\n            \"chai-sinon\",\n            \"mocha\"\n        ],\n\n        files: [\n            \"lib/test/*.js\"\n        ],\n\n        preprocessors: {\n            // add webpack as preprocessor\n            \"lib/test/*.js\": [\n                \"webpack\",\n                \"sourcemap\"\n            ]\n        },\n\n        coverageReporter: {\n            dir: \"build/reports/coverage\",\n            reporters: [{\n                type: \"html\",\n                subdir: \"html\"\n            }, {\n                type: \"text\",\n                subdir: \".\",\n                file: \"text.txt\"\n            }, {\n                type: \"lcov\",\n                subdir: \".\",\n                file: \"lcov.info\"\n            }]\n        },\n\n        webpack: {\n            devtool: \"inline-source-map\",\n            module: {\n                preLoaders: [{\n                    test: /(\\.js(x)?)$/,\n                    // exclude this dirs from coverage\n                    exclude: /(node_modules|bower_components)\\//,\n                    loader: \"isparta-instrumenter-loader\"\n                }]\n            },\n            resolve: {\n                extensions: [\"\", \".web.js\", \".js\"]\n            },\n            watch: true\n        },\n\n        webpackServer: {\n            noInfo: true\n        },\n\n        // test results reporter to use\n        // possible values: \"dots\", \"progress\", \"junit\", \"growl\", \"coverage\"\n        reporters: [\n            \"coverage\",\n            \"spec\"\n        ],\n\n        // web server port\n        port: 9876,\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n        // Start these browsers, currently available:\n        // - Chrome\n        // - ChromeCanary\n        // - Firefox\n        // - Opera (has to be installed with `npm install karma-opera-launcher`)\n        // - Safari (only Mac; has to be installed with `npm install karma-safari-launcher`)\n        // - PhantomJS\n        // - IE (only Windows; has to be installed with `npm install karma-ie-launcher`)\n        browsers: [\n            \"Chrome\",\n            \"PhantomJS\"\n        ],\n\n        // If browser does not capture in given timeout [ms], kill it\n        captureTimeout: 60000,\n\n        // Continuous Integration mode\n        // if true, it capture browsers, run tests and exit\n        singleRun: true\n    });\n};\n"]}