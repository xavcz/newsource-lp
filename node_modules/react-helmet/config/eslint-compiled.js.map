{"version":3,"sources":["eslint.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACrC,QAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;QAC/B,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;QAC5B,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;QAC7B,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;QAC/B,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC;QAC3B,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;QAC/B,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,QAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY;AAC5B,eAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,SAAS,CAAC,CACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CACtC,IAAI,CAAC,MAAM,EAAE,CAAC,CACd,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CACrB,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE;AACzB,gBAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAA,CAAE,MAAM,EAAE;;AAEtC,uBAAO,KAAK,CAAC;aAChB;;AAED,gBAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;AAClD,oBAAI,IAAI,CAAC,OAAO,EAAE;AACd,2BAAO,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;iBACpE;aACJ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEd,gBAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,GAAG,MAAM,CAAC;;AAE7F,gBAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;AAC9B,2BAAW,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aAC/C;;AAED,mBAAO,WAAW,CAAC;SACtB,CAAC,CAAC,CAAC;KACX,CAAC,CAAC;CACN,CAAC","file":"eslint-compiled.js","sourcesContent":["module.exports = function (gulp, config) {\n    var eslint = require(\"gulp-eslint\"),\n        gutil = require(\"gulp-util\"),\n        debug = require(\"gulp-debug\"),\n        cached = require(\"gulp-cached\"),\n        gulpif = require(\"gulp-if\"),\n        notify = require(\"gulp-notify\"),\n        chalk = require(\"chalk\");\n\n    gulp.task(\"eslint\", function () {\n        return gulp.src(config.files || \"**/*.js\")\n            .pipe(cached(\"eslint\"))\n            .pipe(gulpif(gutil.env.debug, debug()))\n            .pipe(eslint())\n            .pipe(eslint.format())\n            .pipe(notify(function (file) {\n                if (!(file.eslint.messages || []).length) {\n                    // Don't show something if success\n                    return false;\n                }\n\n                var errors = file.eslint.messages.map(function (data) {\n                    if (data.message) {\n                        return \"(\" + data.line + \":\" + data.column + \") \" + data.message;\n                    }\n                }).join(\"\\n\");\n\n                var errorString = file.relative + \" (\" + file.eslint.messages.length + \" errors)\\n\" + errors;\n\n                if (process.platform === \"win32\") {\n                    errorString = chalk.stripColor(errorString);\n                }\n\n                return errorString;\n            }));\n    });\n};\n"]}