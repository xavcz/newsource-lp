{"version":3,"sources":["browserify.js"],"names":[],"mappings":"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","file":"browserify-compiled.js","sourcesContent":["var require = function (file, cwd) {\n    var resolved = require.resolve(file, cwd || '/');\n    var mod = require.modules[resolved];\n    if (!mod) throw new Error(\n        'Failed to resolve module ' + file + ', tried ' + resolved\n    );\n    var res = mod._cached ? mod._cached : mod();\n    return res;\n}\n\nrequire.paths = [];\nrequire.modules = {};\nrequire.extensions = [\".js\",\".coffee\"];\n\nrequire._core = {\n    'assert': true,\n    'events': true,\n    'fs': true,\n    'path': true,\n    'vm': true\n};\n\nrequire.resolve = (function () {\n    return function (x, cwd) {\n        if (!cwd) cwd = '/';\n        \n        if (require._core[x]) return x;\n        var path = require.modules.path();\n        cwd = path.resolve('/', cwd);\n        var y = cwd || '/';\n        \n        if (x.match(/^(?:\\.\\.?\\/|\\/)/)) {\n            var m = loadAsFileSync(path.resolve(y, x))\n                || loadAsDirectorySync(path.resolve(y, x));\n            if (m) return m;\n        }\n        \n        var n = loadNodeModulesSync(x, y);\n        if (n) return n;\n        \n        throw new Error(\"Cannot find module '\" + x + \"'\");\n        \n        function loadAsFileSync (x) {\n            if (require.modules[x]) {\n                return x;\n            }\n            \n            for (var i = 0; i < require.extensions.length; i++) {\n                var ext = require.extensions[i];\n                if (require.modules[x + ext]) return x + ext;\n            }\n        }\n        \n        function loadAsDirectorySync (x) {\n            x = x.replace(/\\/+$/, '');\n            var pkgfile = x + '/package.json';\n            if (require.modules[pkgfile]) {\n                var pkg = require.modules[pkgfile]();\n                var b = pkg.browserify;\n                if (typeof b === 'object' && b.main) {\n                    var m = loadAsFileSync(path.resolve(x, b.main));\n                    if (m) return m;\n                }\n                else if (typeof b === 'string') {\n                    var m = loadAsFileSync(path.resolve(x, b));\n                    if (m) return m;\n                }\n                else if (pkg.main) {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                }\n            }\n            \n            return loadAsFileSync(x + '/index');\n        }\n        \n        function loadNodeModulesSync (x, start) {\n            var dirs = nodeModulesPathsSync(start);\n            for (var i = 0; i < dirs.length; i++) {\n                var dir = dirs[i];\n                var m = loadAsFileSync(dir + '/' + x);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir + '/' + x);\n                if (n) return n;\n            }\n            \n            var m = loadAsFileSync(x);\n            if (m) return m;\n        }\n        \n        function nodeModulesPathsSync (start) {\n            var parts;\n            if (start === '/') parts = [ '' ];\n            else parts = path.normalize(start).split('/');\n            \n            var dirs = [];\n            for (var i = parts.length - 1; i >= 0; i--) {\n                if (parts[i] === 'node_modules') continue;\n                var dir = parts.slice(0, i + 1).join('/') + '/node_modules';\n                dirs.push(dir);\n            }\n            \n            return dirs;\n        }\n    };\n})();\n\nrequire.alias = function (from, to) {\n    var path = require.modules.path();\n    var res = null;\n    try {\n        res = require.resolve(from + '/package.json', '/');\n    }\n    catch (err) {\n        res = require.resolve(from, '/');\n    }\n    var basedir = path.dirname(res);\n    \n    var keys = (Object.keys || function (obj) {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    })(require.modules);\n    \n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (key.slice(0, basedir.length + 1) === basedir + '/') {\n            var f = key.slice(basedir.length);\n            require.modules[to + f] = require.modules[basedir + f];\n        }\n        else if (key === basedir) {\n            require.modules[to] = require.modules[basedir];\n        }\n    }\n};\n\nrequire.define = function (filename, fn) {\n    var dirname = require._core[filename]\n        ? ''\n        : require.modules.path().dirname(filename)\n    ;\n    \n    var require_ = function (file) {\n        return require(file, dirname)\n    };\n    require_.resolve = function (name) {\n        return require.resolve(name, dirname);\n    };\n    require_.modules = require.modules;\n    require_.define = require.define;\n    var module_ = { exports : {} };\n    \n    require.modules[filename] = function () {\n        require.modules[filename]._cached = module_.exports;\n        fn.call(\n            module_.exports,\n            require_,\n            module_,\n            module_.exports,\n            dirname,\n            filename\n        );\n        require.modules[filename]._cached = module_.exports;\n        return module_.exports;\n    };\n};\n\nif (typeof process === 'undefined') process = {};\n\nif (!process.nextTick) process.nextTick = (function () {\n    var queue = [];\n    var canPost = typeof window !== 'undefined'\n        && window.postMessage && window.addEventListener\n    ;\n    \n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            if (ev.source === window && ev.data === 'browserify-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n    }\n    \n    return function (fn) {\n        if (canPost) {\n            queue.push(fn);\n            window.postMessage('browserify-tick', '*');\n        }\n        else setTimeout(fn, 0);\n    };\n})();\n\nif (!process.title) process.title = 'browser';\n\nif (!process.binding) process.binding = function (name) {\n    if (name === 'evals') return require('vm')\n    else throw new Error('No such module')\n};\n\nif (!process.cwd) process.cwd = function () { return '.' };\n\nif (!process.env) process.env = {};\nif (!process.argv) process.argv = [];\n\nrequire.define(\"path\", Function(\n    [ 'require', 'module', 'exports', '__dirname', '__filename' ],\n    \"function filter (xs, fn) {\\n    var res = [];\\n    for (var i = 0; i < xs.length; i++) {\\n        if (fn(xs[i], i, xs)) res.push(xs[i]);\\n    }\\n    return res;\\n}\\n\\n// resolves . and .. elements in a path array with directory names there\\n// must be no slashes, empty elements, or device names (c:\\\\) in the array\\n// (so also no leading and trailing slashes - it does not distinguish\\n// relative and absolute paths)\\nfunction normalizeArray(parts, allowAboveRoot) {\\n  // if the path tries to go above the root, `up` ends up > 0\\n  var up = 0;\\n  for (var i = parts.length; i >= 0; i--) {\\n    var last = parts[i];\\n    if (last == '.') {\\n      parts.splice(i, 1);\\n    } else if (last === '..') {\\n      parts.splice(i, 1);\\n      up++;\\n    } else if (up) {\\n      parts.splice(i, 1);\\n      up--;\\n    }\\n  }\\n\\n  // if the path is allowed to go above the root, restore leading ..s\\n  if (allowAboveRoot) {\\n    for (; up--; up) {\\n      parts.unshift('..');\\n    }\\n  }\\n\\n  return parts;\\n}\\n\\n// Regex to split a filename into [*, dir, basename, ext]\\n// posix version\\nvar splitPathRe = /^(.+\\\\/(?!$)|\\\\/)?((?:.+?)?(\\\\.[^.]*)?)$/;\\n\\n// path.resolve([from ...], to)\\n// posix version\\nexports.resolve = function() {\\nvar resolvedPath = '',\\n    resolvedAbsolute = false;\\n\\nfor (var i = arguments.length; i >= -1 && !resolvedAbsolute; i--) {\\n  var path = (i >= 0)\\n      ? arguments[i]\\n      : process.cwd();\\n\\n  // Skip empty and invalid entries\\n  if (typeof path !== 'string' || !path) {\\n    continue;\\n  }\\n\\n  resolvedPath = path + '/' + resolvedPath;\\n  resolvedAbsolute = path.charAt(0) === '/';\\n}\\n\\n// At this point the path should be resolved to a full absolute path, but\\n// handle relative paths to be safe (might happen when process.cwd() fails)\\n\\n// Normalize the path\\nresolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\\n    return !!p;\\n  }), !resolvedAbsolute).join('/');\\n\\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\\n};\\n\\n// path.normalize(path)\\n// posix version\\nexports.normalize = function(path) {\\nvar isAbsolute = path.charAt(0) === '/',\\n    trailingSlash = path.slice(-1) === '/';\\n\\n// Normalize the path\\npath = normalizeArray(filter(path.split('/'), function(p) {\\n    return !!p;\\n  }), !isAbsolute).join('/');\\n\\n  if (!path && !isAbsolute) {\\n    path = '.';\\n  }\\n  if (path && trailingSlash) {\\n    path += '/';\\n  }\\n  \\n  return (isAbsolute ? '/' : '') + path;\\n};\\n\\n\\n// posix version\\nexports.join = function() {\\n  var paths = Array.prototype.slice.call(arguments, 0);\\n  return exports.normalize(filter(paths, function(p, index) {\\n    return p && typeof p === 'string';\\n  }).join('/'));\\n};\\n\\n\\nexports.dirname = function(path) {\\n  var dir = splitPathRe.exec(path)[1] || '';\\n  var isWindows = false;\\n  if (!dir) {\\n    // No dirname\\n    return '.';\\n  } else if (dir.length === 1 ||\\n      (isWindows && dir.length <= 3 && dir.charAt(1) === ':')) {\\n    // It is just a slash or a drive letter with a slash\\n    return dir;\\n  } else {\\n    // It is a full dirname, strip trailing slash\\n    return dir.substring(0, dir.length - 1);\\n  }\\n};\\n\\n\\nexports.basename = function(path, ext) {\\n  var f = splitPathRe.exec(path)[2] || '';\\n  // TODO: make this comparison case-insensitive on windows?\\n  if (ext && f.substr(-1 * ext.length) === ext) {\\n    f = f.substr(0, f.length - ext.length);\\n  }\\n  return f;\\n};\\n\\n\\nexports.extname = function(path) {\\n  return splitPathRe.exec(path)[3] || '';\\n};\\n\\n//@ sourceURL=path\"\n));\n\nrequire.define(\"timers\", Function(\n    [ 'require', 'module', 'exports', '__dirname', '__filename' ],\n    \"module.exports = require(\\\"timers-browserify\\\")\\n//@ sourceURL=timers\"\n));\n\nrequire.define(\"/node_modules/timers-browserify/package.json\", Function(\n    [ 'require', 'module', 'exports', '__dirname', '__filename' ],\n    \"module.exports = {\\\"main\\\":\\\"main.js\\\"}\\n//@ sourceURL=/node_modules/timers-browserify/package.json\"\n));\n\nrequire.define(\"/node_modules/timers-browserify/main.js\", Function(\n    [ 'require', 'module', 'exports', '__dirname', '__filename' ],\n    \"// DOM APIs, for completeness\\n\\nexports.setTimeout = setTimeout;\\nexports.clearTimeout = clearTimeout;\\nexports.setInterval = setInterval;\\nexports.clearInterval = clearInterval;\\n\\n// TODO: Change to more effiecient list approach used in Node.js\\n// For now, we just implement the APIs using the primitives above.\\n\\nexports.enroll = function(item, delay) {\\n  item._timeoutID = setTimeout(item._onTimeout, delay);\\n};\\n\\nexports.unenroll = function(item) {\\n  clearTimeout(item._timeoutID);\\n};\\n\\nexports.active = function(item) {\\n  // our naive impl doesn't care (correctness is still preserved)\\n};\\n\\n//@ sourceURL=/node_modules/timers-browserify/main.js\"\n));\n\nrequire.define(\"/main.js\", Function(\n    [ 'require', 'module', 'exports', '__dirname', '__filename' ],\n    \"var timers = require('timers');\\n\\nvar obj = {\\n  _onTimeout: function() {\\n    console.log('Timer ran for: ' + (new Date().getTime() - obj.now) + ' ms');\\n  },\\n  start: function() {\\n    console.log('Timer should run for 100 ms');\\n    this.now = new Date().getTime();\\n    timers.enroll(this, 100);\\n  }\\n};\\n\\nobj.start();\\n\\n//@ sourceURL=/main.js\"\n));\nrequire(\"/main.js\");\n"]}