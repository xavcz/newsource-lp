{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var Transform = require('stream').Transform\nvar inherits = require('inherits')\nvar StringDecoder = require('string_decoder').StringDecoder\nmodule.exports = CipherBase\ninherits(CipherBase, Transform)\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  this._decoder = null\n  this._encoding = null\n}\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, inputEnc)\n  }\n  var outData = this._update(data)\n  if (this.hashMode) {\n    return this\n  }\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\n\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this._final())\n  } catch (e) {\n    err = e\n  } finally {\n    done(err)\n  }\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this._final() || new Buffer('')\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, final) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n  if (this._encoding !== enc) {\n    throw new Error('can\\'t switch encodings')\n  }\n  var out = this._decoder.write(value)\n  if (final) {\n    out += this._decoder.end()\n  }\n  return out\n}\n"]}