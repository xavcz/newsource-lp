{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = new Buffer(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'PUBLIC KEY':\n      ndata = asn1.PublicKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen)\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n"]}