{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AACjC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE1B,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAC/C,UAAM,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;CACnC;;AAED,IAAI,CAAC,8BAA8B,EAAE,UAAU,MAAM,EAAE;AACnD,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;AACtB,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AACvB,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AACvB,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;AACtB,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;AAC/B,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;AACrC,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;AACjC,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;;AAEzB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,oBAAoB,EAAE,UAAU,MAAM,EAAE;AACzC,WAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;;AAEvB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,qBAAqB,EAAE,UAAU,MAAM,EAAE;AAC1C,WAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;;AAEzB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,qBAAqB,EAAE,UAAU,MAAM,EAAE;AAC1C,WAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;;AAEzB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,qBAAqB,EAAE,UAAU,MAAM,EAAE;AAC1C,WAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;;AAErB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,sBAAsB,EAAE,UAAU,MAAM,EAAE;AAC3C,WAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;;AAE3B,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,uBAAuB,EAAE,UAAU,MAAM,EAAE;AAC5C,WAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;AAEpB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,oBAAoB,EAAE,UAAU,MAAM,EAAE;AACzC,WAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;;AAEvB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA;;AAEF,IAAI,CAAC,wBAAwB,EAAE,UAAU,MAAM,EAAE;AAC7C,WAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;;AAExB,UAAM,CAAC,GAAG,EAAE,CAAA;CACf,CAAC,CAAA","file":"index-compiled.js","sourcesContent":["var console = require(\"../index\")\nvar test = require(\"tape\")\n\nif (typeof window !== \"undefined\" && !window.JSON) {\n    window.JSON = require(\"jsonify\")\n}\n\ntest(\"console has expected methods\", function (assert) {\n    assert.ok(console.log)\n    assert.ok(console.info)\n    assert.ok(console.warn)\n    assert.ok(console.dir)\n    assert.ok(console.time, \"time\")\n    assert.ok(console.timeEnd, \"timeEnd\")\n    assert.ok(console.trace, \"trace\")\n    assert.ok(console.assert)\n\n    assert.end()\n})\n\ntest(\"invoke console.log\", function (assert) {\n    console.log(\"test-log\")\n\n    assert.end()\n})\n\ntest(\"invoke console.info\", function (assert) {\n    console.info(\"test-info\")\n\n    assert.end()\n})\n\ntest(\"invoke console.warn\", function (assert) {\n    console.warn(\"test-warn\")\n    \n    assert.end()\n})\n\ntest(\"invoke console.time\", function (assert) {\n    console.time(\"label\")\n\n    assert.end()\n})\n\ntest(\"invoke console.trace\", function (assert) {\n    console.trace(\"test-trace\")\n\n    assert.end()\n})\n\ntest(\"invoke console.assert\", function (assert) {\n    console.assert(true)\n\n    assert.end()\n})\n\ntest(\"invoke console.dir\", function (assert) {\n    console.dir(\"test-dir\")\n\n    assert.end()\n})\n\ntest(\"invoke console.timeEnd\", function (assert) {\n    console.timeEnd(\"label\")\n\n    assert.end()\n})\n"]}