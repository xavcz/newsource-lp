{"version":3,"sources":["_stream_writable.js"],"names":[],"mappings":"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","file":"_stream_writable-compiled.js","sourcesContent":["// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function (){try {\nObject.defineProperty(WritableState.prototype, 'buffer', {\n  get: internalUtil.deprecate(function() {\n    return this.getBuffer();\n  }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +\n     'instead.')\n});\n}catch(_){}}());\n\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = nop;\n\n  if (state.ended)\n    writeAfterEnd(this, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.bufferedRequest)\n      clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',\n'ucs2', 'ucs-2','utf16le', 'utf-16le', 'raw']\n.indexOf((encoding + '').toLowerCase()) > -1))\n    throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync)\n    processNextTick(cb, er);\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      processNextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var buffer = [];\n    var cbs = [];\n    while (entry) {\n      cbs.push(entry.callback);\n      buffer.push(entry);\n      entry = entry.next;\n    }\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    doWrite(stream, state, true, state.length, buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null)\n      state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined)\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.length === 0 &&\n          state.bufferedRequest === null &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      processNextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n"]}