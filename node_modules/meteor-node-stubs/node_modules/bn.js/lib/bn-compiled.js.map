{"version":3,"sources":["bn.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,cAAY,CAAC;;;AAGb,WAAS,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE;AACzB,QAAI,CAAC,GAAG,EAAE,MAAM,IAAI,KAAK,CAAC,GAAG,IAAI,kBAAkB,CAAC,CAAC;GACtD;;;;AAID,WAAS,QAAQ,CAAE,IAAI,EAAE,SAAS,EAAE;AAClC,QAAI,CAAC,MAAM,GAAG,SAAS,CAAC;AACxB,QAAI,QAAQ,GAAG,SAAX,QAAQ,GAAe,EAAE,CAAC;AAC9B,YAAQ,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;AACzC,QAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,QAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;GACnC;;;;AAID,WAAS,EAAE,CAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;;AAEjC,QAAI,MAAM,KAAK,IAAI,IACjB,OAAO,MAAM,KAAK,QAAQ,IAC1B,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAC7B,aAAO,MAAM,CAAC;KACf;;AAED,QAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;;AAGhB,QAAI,CAAC,GAAG,GAAG,IAAI,CAAC;;AAEhB,QAAI,MAAM,KAAK,IAAI,EAAE;AACnB,UAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;AAClC,cAAM,GAAG,IAAI,CAAC;AACd,YAAI,GAAG,EAAE,CAAC;OACX;;AAED,UAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;KACrD;GACF;AACD,MAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC9B,UAAM,CAAC,OAAO,GAAG,EAAE,CAAC;GACrB,MAAM;AACL,WAAO,CAAC,EAAE,GAAG,EAAE,CAAC;GACjB;;AAED,IAAE,CAAC,EAAE,GAAG,EAAE,CAAC;AACX,IAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;;AAEjB,MAAI,MAAM,CAAC;AACX,MAAI;AACF,UAAM,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC;GACxC,CAAC,OAAO,CAAC,EAAE,EACX;;AAED,IAAE,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE;AAClC,QAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC;AACrC,WAAO,KAAK,CAAC;GACd,CAAC;;AAEF,IAAE,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE;AAClC,QAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC;AACrC,WAAO,KAAK,CAAC;GACd,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,IAAI,CAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;AACxD,QAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC9B,aAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;KAC/C;;AAED,QAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC9B,aAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;KAC9C;;AAED,QAAI,IAAI,KAAK,KAAK,EAAE;AAClB,UAAI,GAAG,EAAE,CAAC;KACX;AACD,UAAM,CAAC,IAAI,MAAM,IAAI,GAAG,CAAC,CAAA,AAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;;AAEvD,UAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC/C,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrB,WAAK,EAAE,CAAC;KACT;;AAED,QAAI,IAAI,KAAK,EAAE,EAAE;AACf,UAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC/B,MAAM;AACL,UAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KACtC;;AAED,QAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrB,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KACnB;;AAED,QAAI,CAAC,KAAK,EAAE,CAAC;;AAEb,QAAI,MAAM,KAAK,IAAI,EAAE,OAAO;;AAE5B,QAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;GAC/C,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;AACrE,QAAI,MAAM,GAAG,CAAC,EAAE;AACd,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,YAAM,GAAG,CAAC,MAAM,CAAC;KAClB;AACD,QAAI,MAAM,GAAG,SAAS,EAAE;AACtB,UAAI,CAAC,KAAK,GAAG,CAAE,MAAM,GAAG,SAAS,CAAE,CAAC;AACpC,UAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACjB,MAAM,IAAI,MAAM,GAAG,gBAAgB,EAAE;AACpC,UAAI,CAAC,KAAK,GAAG,CACX,MAAM,GAAG,SAAS,EAClB,AAAC,MAAM,GAAG,SAAS,GAAI,SAAS,CACjC,CAAC;AACF,UAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACjB,MAAM;AACL,YAAM,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC;AAClC,UAAI,CAAC,KAAK,GAAG,CACX,MAAM,GAAG,SAAS,EAClB,AAAC,MAAM,GAAG,SAAS,GAAI,SAAS,EAChC,CAAC,CACF,CAAC;AACF,UAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACjB;;AAED,QAAI,MAAM,KAAK,IAAI,EAAE,OAAO;;;AAG5B,QAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;GAC/C,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;;AAEnE,UAAM,CAAC,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC;AAC1C,QAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AACtB,UAAI,CAAC,KAAK,GAAG,CAAE,CAAC,CAAE,CAAC;AACnB,UAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC3C,QAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACnB;;AAED,QAAI,CAAC,EAAE,CAAC,CAAC;AACT,QAAI,GAAG,GAAG,CAAC,CAAC;AACZ,QAAI,MAAM,KAAK,IAAI,EAAE;AACnB,WAAK,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AACjD,SAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC,GAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,AAAC,CAAC;AAC7D,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,AAAC,CAAC,IAAI,GAAG,GAAI,SAAS,CAAC;AACxC,YAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AAAC,CAAC,KAAM,EAAE,GAAG,GAAG,AAAC,GAAI,SAAS,CAAC;AACnD,WAAG,IAAI,EAAE,CAAC;AACV,YAAI,GAAG,IAAI,EAAE,EAAE;AACb,aAAG,IAAI,EAAE,CAAC;AACV,WAAC,EAAE,CAAC;SACL;OACF;KACF,MAAM,IAAI,MAAM,KAAK,IAAI,EAAE;AAC1B,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC5C,SAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC,GAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,AAAC,CAAC;AAC7D,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,AAAC,CAAC,IAAI,GAAG,GAAI,SAAS,CAAC;AACxC,YAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AAAC,CAAC,KAAM,EAAE,GAAG,GAAG,AAAC,GAAI,SAAS,CAAC;AACnD,WAAG,IAAI,EAAE,CAAC;AACV,YAAI,GAAG,IAAI,EAAE,EAAE;AACb,aAAG,IAAI,EAAE,CAAC;AACV,WAAC,EAAE,CAAC;SACL;OACF;KACF;AACD,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,WAAS,QAAQ,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;AAClC,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpC,SAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,UAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;;AAE/B,OAAC,KAAK,CAAC,CAAC;;;AAGR,UAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE;AACtB,SAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;;;OAGnB,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE;AAC7B,WAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;;;SAGnB,MAAM;AACL,aAAC,IAAI,CAAC,GAAG,GAAG,CAAC;WACd;KACF;AACD,WAAO,CAAC,CAAC;GACV;;AAED,IAAE,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,KAAK,EAAE;;AAE1D,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA,GAAI,CAAC,CAAC,CAAC;AACrD,QAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACnB;;AAED,QAAI,CAAC,EAAE,CAAC,CAAC;;AAET,QAAI,GAAG,GAAG,CAAC,CAAC;AACZ,SAAK,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;AACrD,OAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,AAAC,CAAC,IAAI,GAAG,GAAI,SAAS,CAAC;AACxC,UAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAM,EAAE,GAAG,GAAG,AAAC,GAAG,QAAQ,CAAC;AACjD,SAAG,IAAI,EAAE,CAAC;AACV,UAAI,GAAG,IAAI,EAAE,EAAE;AACb,WAAG,IAAI,EAAE,CAAC;AACV,SAAC,EAAE,CAAC;OACL;KACF;AACD,QAAI,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;AACnB,OAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,AAAC,CAAC,IAAI,GAAG,GAAI,SAAS,CAAC;AACxC,UAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAM,EAAE,GAAG,GAAG,AAAC,GAAG,QAAQ,CAAC;KAClD;AACD,QAAI,CAAC,KAAK,EAAE,CAAC;GACd,CAAC;;AAEF,WAAS,SAAS,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACxC,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpC,SAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,UAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;;AAE/B,OAAC,IAAI,GAAG,CAAC;;;AAGT,UAAI,CAAC,IAAI,EAAE,EAAE;AACX,SAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;;;OAGnB,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE;AAClB,WAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;;;SAGnB,MAAM;AACL,aAAC,IAAI,CAAC,CAAC;WACR;KACF;AACD,WAAO,CAAC,CAAC;GACV;;AAED,IAAE,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;;AAElE,QAAI,CAAC,KAAK,GAAG,CAAE,CAAC,CAAE,CAAC;AACnB,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;;AAGhB,SAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,SAAS,EAAE,OAAO,IAAI,IAAI,EAAE;AACxE,aAAO,EAAE,CAAC;KACX;AACD,WAAO,EAAE,CAAC;AACV,WAAO,GAAG,AAAC,OAAO,GAAG,IAAI,GAAI,CAAC,CAAC;;AAE/B,QAAI,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAClC,QAAI,GAAG,GAAG,KAAK,GAAG,OAAO,CAAC;AAC1B,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;;AAE/C,QAAI,IAAI,GAAG,CAAC,CAAC;AACb,SAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,OAAO,EAAE;AACzC,UAAI,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC;;AAE/C,UAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACpB,UAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,SAAS,EAAE;AACpC,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;OACvB,MAAM;AACL,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;OACnB;KACF;;AAED,QAAI,GAAG,KAAK,CAAC,EAAE;AACb,UAAI,GAAG,GAAG,CAAC,CAAC;AACZ,UAAI,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;AAEjD,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACxB,WAAG,IAAI,IAAI,CAAC;OACb;;AAED,UAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,SAAS,EAAE;AACpC,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;OACvB,MAAM;AACL,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;OACnB;KACF;GACF,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,IAAI,EAAE;AACvC,QAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC/B;AACD,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,QAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9B,QAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,GAAI;AACrC,QAAI,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AACrB,QAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,WAAO,CAAC,CAAC;GACV,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,IAAI,EAAE;AAC7C,WAAO,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE;AACzB,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;KAC/B;AACD,WAAO,IAAI,CAAC;GACb,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,GAAI;AACrC,WAAO,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAC3D,UAAI,CAAC,MAAM,EAAE,CAAC;KACf;AACD,WAAO,IAAI,CAAC,SAAS,EAAE,CAAC;GACzB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,GAAI;;AAE7C,QAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC5C,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KACnB;AACD,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;AACzC,WAAO,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,OAAO,CAAA,GAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;GACnE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCF,MAAI,KAAK,GAAG,CACV,EAAE,EACF,GAAG,EACH,IAAI,EACJ,KAAK,EACL,MAAM,EACN,OAAO,EACP,QAAQ,EACR,SAAS,EACT,UAAU,EACV,WAAW,EACX,YAAY,EACZ,aAAa,EACb,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,oBAAoB,EACpB,qBAAqB,EACrB,sBAAsB,EACtB,uBAAuB,EACvB,wBAAwB,EACxB,yBAAyB,EACzB,0BAA0B,EAC1B,2BAA2B,CAC5B,CAAC;;AAEF,MAAI,UAAU,GAAG,CACf,CAAC,EAAE,CAAC,EACJ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACxB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACpB,CAAC;;AAEF,MAAI,UAAU,GAAG,CACf,CAAC,EAAE,CAAC,EACJ,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EACnE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAClE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EACjE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CACrE,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,IAAI,EAAE,OAAO,EAAE;AACxD,QAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,WAAO,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;;AAE3B,QAAI,GAAG,CAAC;AACR,QAAI,IAAI,KAAK,EAAE,IAAI,IAAI,KAAK,KAAK,EAAE;AACjC,SAAG,GAAG,EAAE,CAAC;AACT,UAAI,GAAG,GAAG,CAAC,CAAC;AACZ,UAAI,KAAK,GAAG,CAAC,CAAC;AACd,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,YAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,YAAI,IAAI,GAAG,CAAC,CAAC,AAAC,CAAC,IAAI,GAAG,GAAI,KAAK,CAAA,GAAI,QAAQ,CAAA,CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC1D,aAAK,GAAG,AAAC,CAAC,KAAM,EAAE,GAAG,GAAG,AAAC,GAAI,QAAQ,CAAC;AACtC,YAAI,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACxC,aAAG,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;SAC3C,MAAM;AACL,aAAG,GAAG,IAAI,GAAG,GAAG,CAAC;SAClB;AACD,WAAG,IAAI,CAAC,CAAC;AACT,YAAI,GAAG,IAAI,EAAE,EAAE;AACb,aAAG,IAAI,EAAE,CAAC;AACV,WAAC,EAAE,CAAC;SACL;OACF;AACD,UAAI,KAAK,KAAK,CAAC,EAAE;AACf,WAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;OAChC;AACD,aAAO,GAAG,CAAC,MAAM,GAAG,OAAO,KAAK,CAAC,EAAE;AACjC,WAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;AACD,UAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACvB,WAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;AACD,aAAO,GAAG,CAAC;KACZ;;AAED,QAAI,IAAI,MAAM,IAAI,GAAG,CAAC,CAAA,AAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE;;AAElD,UAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;;AAEjC,UAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACjC,SAAG,GAAG,EAAE,CAAC;AACT,UAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,OAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;AACf,aAAO,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;AAClB,YAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzC,SAAC,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;AAEvB,YAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;AACf,aAAG,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;SAC7C,MAAM;AACL,aAAG,GAAG,CAAC,GAAG,GAAG,CAAC;SACf;OACF;AACD,UAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACjB,WAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;AACD,aAAO,GAAG,CAAC,MAAM,GAAG,OAAO,KAAK,CAAC,EAAE;AACjC,WAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;AACD,UAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACvB,WAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;AACD,aAAO,GAAG,CAAC;KACZ;;AAED,UAAM,CAAC,KAAK,EAAE,iCAAiC,CAAC,CAAC;GAClD,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAI;AAC3C,QAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAC9B,QAAI,GAAG,CAAC;AACR,QAAI,MAAM,IAAI,EAAE,EAAE;AAChB,SAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACrB,MAAM,IAAI,MAAM,IAAI,EAAE,EAAE;AACvB,SAAG,GAAG,AAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,GAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACnD,MAAM,IAAI,MAAM,KAAK,EAAE,EAAE;;AAExB,SAAG,GAAG,gBAAgB,GAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,AAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACtE,MAAM;AACL,YAAM,CAAC,KAAK,EAAE,4CAA4C,CAAC,CAAC;KAC7D;AACD,WAAO,AAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,GAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAC3C,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;AACvC,WAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;GAC1B,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,MAAM,EAAE,MAAM,EAAE;AACzD,UAAM,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC;AACtC,WAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;GACjD,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,MAAM,EAAE,MAAM,EAAE;AACvD,WAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;GAChD,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;AAC1E,QAAI,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AACnC,QAAI,SAAS,GAAG,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AAClD,UAAM,CAAC,UAAU,IAAI,SAAS,EAAE,uCAAuC,CAAC,CAAC;AACzE,UAAM,CAAC,SAAS,GAAG,CAAC,EAAE,6BAA6B,CAAC,CAAC;;AAErD,QAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAI,YAAY,GAAG,MAAM,KAAK,IAAI,CAAC;AACnC,QAAI,GAAG,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC;;AAEnC,QAAI,CAAC,EAAE,CAAC,CAAC;AACT,QAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,QAAI,CAAC,YAAY,EAAE;;AAEjB,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;AAC3C,WAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACZ;;AAED,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;AAC5B,SAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEZ,WAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;OAC5B;KACF,MAAM;AACL,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;AAC5B,SAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClB,SAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEZ,WAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACZ;;AAED,aAAO,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;AACzB,WAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACZ;KACF;;AAED,WAAO,GAAG,CAAC;GACZ,CAAC;;AAEF,MAAI,IAAI,CAAC,KAAK,EAAE;AACd,MAAE,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,CAAC,EAAE;AAChD,aAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC3B,CAAC;GACH,MAAM;AACL,MAAE,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,CAAC,EAAE;AAChD,UAAI,CAAC,GAAG,CAAC,CAAC;AACV,UAAI,CAAC,GAAG,CAAC,CAAC;AACV,UAAI,CAAC,IAAI,MAAM,EAAE;AACf,SAAC,IAAI,EAAE,CAAC;AACR,SAAC,MAAM,EAAE,CAAC;OACX;AACD,UAAI,CAAC,IAAI,IAAI,EAAE;AACb,SAAC,IAAI,CAAC,CAAC;AACP,SAAC,MAAM,CAAC,CAAC;OACV;AACD,UAAI,CAAC,IAAI,GAAG,EAAE;AACZ,SAAC,IAAI,CAAC,CAAC;AACP,SAAC,MAAM,CAAC,CAAC;OACV;AACD,UAAI,CAAC,IAAI,IAAI,EAAE;AACb,SAAC,IAAI,CAAC,CAAC;AACP,SAAC,MAAM,CAAC,CAAC;OACV;AACD,aAAO,CAAC,GAAG,CAAC,CAAC;KACd,CAAC;GACH;;AAED,IAAE,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,CAAC,EAAE;;AAE9C,QAAI,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC;;AAEvB,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAI,CAAC,CAAC,GAAG,MAAM,CAAA,KAAM,CAAC,EAAE;AACtB,OAAC,IAAI,EAAE,CAAC;AACR,OAAC,MAAM,EAAE,CAAC;KACX;AACD,QAAI,CAAC,CAAC,GAAG,IAAI,CAAA,KAAM,CAAC,EAAE;AACpB,OAAC,IAAI,CAAC,CAAC;AACP,OAAC,MAAM,CAAC,CAAC;KACV;AACD,QAAI,CAAC,CAAC,GAAG,GAAG,CAAA,KAAM,CAAC,EAAE;AACnB,OAAC,IAAI,CAAC,CAAC;AACP,OAAC,MAAM,CAAC,CAAC;KACV;AACD,QAAI,CAAC,CAAC,GAAG,GAAG,CAAA,KAAM,CAAC,EAAE;AACnB,OAAC,IAAI,CAAC,CAAC;AACP,OAAC,MAAM,CAAC,CAAC;KACV;AACD,QAAI,CAAC,CAAC,GAAG,GAAG,CAAA,KAAM,CAAC,EAAE;AACnB,OAAC,EAAE,CAAC;KACL;AACD,WAAO,CAAC,CAAC;GACV,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,GAAI;AAC7C,QAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACpC,QAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5B,WAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA,GAAI,EAAE,GAAG,EAAE,CAAC;GACpC,CAAC;;AAEF,WAAS,UAAU,CAAE,GAAG,EAAE;AACxB,QAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;;AAEnC,SAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;AACvC,UAAI,GAAG,GAAG,AAAC,GAAG,GAAG,EAAE,GAAI,CAAC,CAAC;AACzB,UAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;;AAEpB,OAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAI,CAAC,IAAI,IAAI,CAAC,KAAM,IAAI,CAAC;KAClD;;AAED,WAAO,CAAC,CAAC;GACV;;;AAGD,IAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAI;AAC3C,QAAI,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC;;AAE5B,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,OAAC,IAAI,CAAC,CAAC;AACP,UAAI,CAAC,KAAK,EAAE,EAAE,MAAM;KACrB;AACD,WAAO,CAAC,CAAC;GACV,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,GAAI;AAC/C,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;GACxC,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,KAAK,EAAE;AAC5C,QAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACvB,aAAO,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzC;AACD,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,KAAK,EAAE;AAChD,QAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;AACzB,aAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KACzC;AACD,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,GAAI;AACrC,WAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;GAC5B,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,GAAI;AACjC,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;GAC5B,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,GAAI;AACnC,QAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;AAClB,UAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;KACpB;;AAED,WAAO,IAAI,CAAC;GACb,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACtC,WAAO,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;AAC/B,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;KAC/B;;AAED,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC9C;;AAED,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;AACpC,UAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA,KAAM,CAAC,CAAC,CAAC;AAC7C,WAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACvB,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,CAAE,GAAG,EAAE;AAClC,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;GAC9B,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;AACpC,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC/B,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;;AAExC,QAAI,CAAC,CAAC;AACN,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;AAC5B,OAAC,GAAG,GAAG,CAAC;KACT,MAAM;AACL,OAAC,GAAG,IAAI,CAAC;KACV;;AAED,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC9C;;AAED,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;;AAEvB,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACtC,UAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA,KAAM,CAAC,CAAC,CAAC;AAC7C,WAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACxB,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;AACpC,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC/B,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACtC,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GAChC,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;;AAExC,QAAI,CAAC,CAAC;AACN,QAAI,CAAC,CAAC;AACN,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;AAC5B,OAAC,GAAG,IAAI,CAAC;AACT,OAAC,GAAG,GAAG,CAAC;KACT,MAAM;AACL,OAAC,GAAG,GAAG,CAAC;AACR,OAAC,GAAG,IAAI,CAAC;KACV;;AAED,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzC;;AAED,QAAI,IAAI,KAAK,CAAC,EAAE;AACd,aAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxB,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAC5B;KACF;;AAED,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;;AAEvB,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACtC,UAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA,KAAM,CAAC,CAAC,CAAC;AAC7C,WAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACxB,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;AACpC,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC/B,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACtC,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GAChC,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,KAAK,EAAE;AAC1C,UAAM,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;;AAEhD,QAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAI,QAAQ,GAAG,KAAK,GAAG,EAAE,CAAC;;;AAG1B,QAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;;AAE1B,QAAI,QAAQ,GAAG,CAAC,EAAE;AAChB,iBAAW,EAAE,CAAC;KACf;;;AAGD,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;KAC5C;;;AAGD,QAAI,QAAQ,GAAG,CAAC,EAAE;AAChB,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAI,SAAS,IAAK,EAAE,GAAG,QAAQ,AAAC,AAAC,CAAC;KACjE;;;AAGD,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;AAEF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,KAAK,EAAE;AACxC,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;GAClC,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE,GAAG,EAAE;AAC3C,UAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;AAE5C,QAAI,GAAG,GAAG,AAAC,GAAG,GAAG,EAAE,GAAI,CAAC,CAAC;AACzB,QAAI,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;;AAEpB,QAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;AAEtB,QAAI,GAAG,EAAE;AACP,UAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAI,CAAC,IAAI,IAAI,AAAC,CAAC;KACjD,MAAM;AACL,UAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAA,AAAC,CAAC;KAClD;;AAED,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACtC,QAAI,CAAC,CAAC;;;AAGN,QAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC7C,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,OAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,UAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;AACnB,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC;;;KAGzB,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AACpD,WAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,SAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,WAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,eAAO,CAAC,CAAC,SAAS,EAAE,CAAC;OACtB;;;AAGD,QAAI,CAAC,EAAE,CAAC,CAAC;AACT,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;AAC5B,OAAC,GAAG,IAAI,CAAC;AACT,OAAC,GAAG,GAAG,CAAC;KACT,MAAM;AACL,OAAC,GAAG,GAAG,CAAC;AACR,OAAC,GAAG,IAAI,CAAC;KACV;;AAED,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjC,OAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,GAAG,KAAK,CAAC;AAChD,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AAC9B,WAAK,GAAG,CAAC,KAAK,EAAE,CAAC;KAClB;AACD,WAAO,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,OAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,KAAK,CAAC;AAC7B,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AAC9B,WAAK,GAAG,CAAC,KAAK,EAAE,CAAC;KAClB;;AAED,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AACvB,QAAI,KAAK,KAAK,CAAC,EAAE;AACf,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AAChC,UAAI,CAAC,MAAM,EAAE,CAAC;;KAEf,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;AACrB,eAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxB,cAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC5B;OACF;;AAED,WAAO,IAAI,CAAC;GACb,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;AACpC,QAAI,GAAG,CAAC;AACR,QAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC7C,SAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,SAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,SAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;AAClB,aAAO,GAAG,CAAC;KACZ,MAAM,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACpD,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,SAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACpB,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,aAAO,GAAG,CAAC;KACZ;;AAED,QAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAE5D,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC/B,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;;AAEtC,QAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AACtB,SAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,UAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,SAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,aAAO,CAAC,CAAC,SAAS,EAAE,CAAC;;;KAGtB,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC9B,YAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,YAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,eAAO,IAAI,CAAC,SAAS,EAAE,CAAC;OACzB;;;AAGD,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;;AAGxB,QAAI,GAAG,KAAK,CAAC,EAAE;AACb,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,UAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,aAAO,IAAI,CAAC;KACb;;;AAGD,QAAI,CAAC,EAAE,CAAC,CAAC;AACT,QAAI,GAAG,GAAG,CAAC,EAAE;AACX,OAAC,GAAG,IAAI,CAAC;AACT,OAAC,GAAG,GAAG,CAAC;KACT,MAAM;AACL,OAAC,GAAG,GAAG,CAAC;AACR,OAAC,GAAG,IAAI,CAAC;KACV;;AAED,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjC,OAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,GAAG,KAAK,CAAC;AAChD,WAAK,GAAG,CAAC,IAAI,EAAE,CAAC;AAChB,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;KAC/B;AACD,WAAO,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,OAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,KAAK,CAAC;AAC7B,WAAK,GAAG,CAAC,IAAI,EAAE,CAAC;AAChB,UAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;KAC/B;;;AAGD,QAAI,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;AAC7C,aAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxB,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAC5B;KACF;;AAED,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAEvC,QAAI,CAAC,KAAK,IAAI,EAAE;AACd,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KACnB;;AAED,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC;GACrB,CAAC;;;AAGF,IAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;AACpC,WAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC/B,CAAC;;AAEF,WAAS,UAAU,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AACnC,OAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC5C,QAAI,GAAG,GAAG,AAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAI,CAAC,CAAC;AACzC,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACjB,OAAG,GAAG,AAAC,GAAG,GAAG,CAAC,GAAI,CAAC,CAAC;;;AAGpB,QAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1B,QAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB,QAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEd,QAAI,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC;AACvB,QAAI,KAAK,GAAG,AAAC,CAAC,GAAG,SAAS,GAAI,CAAC,CAAC;AAChC,OAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;;AAElB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;;AAG5B,UAAI,MAAM,GAAG,KAAK,KAAK,EAAE,CAAC;AAC1B,UAAI,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;AAC9B,UAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvC,WAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;AAC7D,YAAI,CAAC,GAAG,AAAC,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC;AACpB,SAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,SAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,SAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAClB,cAAM,IAAI,AAAC,CAAC,GAAG,SAAS,GAAI,CAAC,CAAC;AAC9B,aAAK,GAAG,CAAC,GAAG,SAAS,CAAC;OACvB;AACD,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;AACzB,WAAK,GAAG,MAAM,GAAG,CAAC,CAAC;KACpB;AACD,QAAI,KAAK,KAAK,CAAC,EAAE;AACf,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;KAC1B,MAAM;AACL,SAAG,CAAC,MAAM,EAAE,CAAC;KACd;;AAED,WAAO,GAAG,CAAC,KAAK,EAAE,CAAC;GACpB;;;;;AAKD,MAAI,WAAW,GAAG,SAAS,WAAW,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AACtD,QAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AACnB,QAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AAClB,QAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AAClB,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAI,EAAE,CAAC;AACP,QAAI,GAAG,CAAC;AACR,QAAI,EAAE,CAAC;AACP,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,QAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACpB,QAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;A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,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B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,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,QAAI,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,AAAC,CAAC;AACzC,KAAC,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE,CAAA,AAAC,IAAI,EAAE,KAAK,EAAE,CAAA,AAAC,CAAC;AACpC,MAAE,IAAI,SAAS,CAAC;;AAEhB,MAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,OAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,MAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1B,OAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B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","file":"bn-compiled.js","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    // May be `new BN(bn)` ?\n    if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var length = this.bitLength();\n    var ret;\n    if (length <= 26) {\n      ret = this.words[0];\n    } else if (length <= 52) {\n      ret = (this.words[1] * 0x4000000) + this.words[0];\n    } else if (length === 53) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret = 0x10000000000000 + (this.words[1] * 0x4000000) + this.words[0];\n    } else {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid += Math.imul(ah0, bl0);\n    hi = Math.imul(ah0, bh0);\n    var w0 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w0 >>> 26);\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid += Math.imul(ah1, bl0);\n    hi = Math.imul(ah1, bh0);\n    lo += Math.imul(al0, bl1);\n    mid += Math.imul(al0, bh1);\n    mid += Math.imul(ah0, bl1);\n    hi += Math.imul(ah0, bh1);\n    var w1 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w1 >>> 26);\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid += Math.imul(ah2, bl0);\n    hi = Math.imul(ah2, bh0);\n    lo += Math.imul(al1, bl1);\n    mid += Math.imul(al1, bh1);\n    mid += Math.imul(ah1, bl1);\n    hi += Math.imul(ah1, bh1);\n    lo += Math.imul(al0, bl2);\n    mid += Math.imul(al0, bh2);\n    mid += Math.imul(ah0, bl2);\n    hi += Math.imul(ah0, bh2);\n    var w2 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w2 >>> 26);\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid += Math.imul(ah3, bl0);\n    hi = Math.imul(ah3, bh0);\n    lo += Math.imul(al2, bl1);\n    mid += Math.imul(al2, bh1);\n    mid += Math.imul(ah2, bl1);\n    hi += Math.imul(ah2, bh1);\n    lo += Math.imul(al1, bl2);\n    mid += Math.imul(al1, bh2);\n    mid += Math.imul(ah1, bl2);\n    hi += Math.imul(ah1, bh2);\n    lo += Math.imul(al0, bl3);\n    mid += Math.imul(al0, bh3);\n    mid += Math.imul(ah0, bl3);\n    hi += Math.imul(ah0, bh3);\n    var w3 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w3 >>> 26);\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid += Math.imul(ah4, bl0);\n    hi = Math.imul(ah4, bh0);\n    lo += Math.imul(al3, bl1);\n    mid += Math.imul(al3, bh1);\n    mid += Math.imul(ah3, bl1);\n    hi += Math.imul(ah3, bh1);\n    lo += Math.imul(al2, bl2);\n    mid += Math.imul(al2, bh2);\n    mid += Math.imul(ah2, bl2);\n    hi += Math.imul(ah2, bh2);\n    lo += Math.imul(al1, bl3);\n    mid += Math.imul(al1, bh3);\n    mid += Math.imul(ah1, bl3);\n    hi += Math.imul(ah1, bh3);\n    lo += Math.imul(al0, bl4);\n    mid += Math.imul(al0, bh4);\n    mid += Math.imul(ah0, bl4);\n    hi += Math.imul(ah0, bh4);\n    var w4 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w4 >>> 26);\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid += Math.imul(ah5, bl0);\n    hi = Math.imul(ah5, bh0);\n    lo += Math.imul(al4, bl1);\n    mid += Math.imul(al4, bh1);\n    mid += Math.imul(ah4, bl1);\n    hi += Math.imul(ah4, bh1);\n    lo += Math.imul(al3, bl2);\n    mid += Math.imul(al3, bh2);\n    mid += Math.imul(ah3, bl2);\n    hi += Math.imul(ah3, bh2);\n    lo += Math.imul(al2, bl3);\n    mid += Math.imul(al2, bh3);\n    mid += Math.imul(ah2, bl3);\n    hi += Math.imul(ah2, bh3);\n    lo += Math.imul(al1, bl4);\n    mid += Math.imul(al1, bh4);\n    mid += Math.imul(ah1, bl4);\n    hi += Math.imul(ah1, bh4);\n    lo += Math.imul(al0, bl5);\n    mid += Math.imul(al0, bh5);\n    mid += Math.imul(ah0, bl5);\n    hi += Math.imul(ah0, bh5);\n    var w5 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w5 >>> 26);\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid += Math.imul(ah6, bl0);\n    hi = Math.imul(ah6, bh0);\n    lo += Math.imul(al5, bl1);\n    mid += Math.imul(al5, bh1);\n    mid += Math.imul(ah5, bl1);\n    hi += Math.imul(ah5, bh1);\n    lo += Math.imul(al4, bl2);\n    mid += Math.imul(al4, bh2);\n    mid += Math.imul(ah4, bl2);\n    hi += Math.imul(ah4, bh2);\n    lo += Math.imul(al3, bl3);\n    mid += Math.imul(al3, bh3);\n    mid += Math.imul(ah3, bl3);\n    hi += Math.imul(ah3, bh3);\n    lo += Math.imul(al2, bl4);\n    mid += Math.imul(al2, bh4);\n    mid += Math.imul(ah2, bl4);\n    hi += Math.imul(ah2, bh4);\n    lo += Math.imul(al1, bl5);\n    mid += Math.imul(al1, bh5);\n    mid += Math.imul(ah1, bl5);\n    hi += Math.imul(ah1, bh5);\n    lo += Math.imul(al0, bl6);\n    mid += Math.imul(al0, bh6);\n    mid += Math.imul(ah0, bl6);\n    hi += Math.imul(ah0, bh6);\n    var w6 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w6 >>> 26);\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid += Math.imul(ah7, bl0);\n    hi = Math.imul(ah7, bh0);\n    lo += Math.imul(al6, bl1);\n    mid += Math.imul(al6, bh1);\n    mid += Math.imul(ah6, bl1);\n    hi += Math.imul(ah6, bh1);\n    lo += Math.imul(al5, bl2);\n    mid += Math.imul(al5, bh2);\n    mid += Math.imul(ah5, bl2);\n    hi += Math.imul(ah5, bh2);\n    lo += Math.imul(al4, bl3);\n    mid += Math.imul(al4, bh3);\n    mid += Math.imul(ah4, bl3);\n    hi += Math.imul(ah4, bh3);\n    lo += Math.imul(al3, bl4);\n    mid += Math.imul(al3, bh4);\n    mid += Math.imul(ah3, bl4);\n    hi += Math.imul(ah3, bh4);\n    lo += Math.imul(al2, bl5);\n    mid += Math.imul(al2, bh5);\n    mid += Math.imul(ah2, bl5);\n    hi += Math.imul(ah2, bh5);\n    lo += Math.imul(al1, bl6);\n    mid += Math.imul(al1, bh6);\n    mid += Math.imul(ah1, bl6);\n    hi += Math.imul(ah1, bh6);\n    lo += Math.imul(al0, bl7);\n    mid += Math.imul(al0, bh7);\n    mid += Math.imul(ah0, bl7);\n    hi += Math.imul(ah0, bh7);\n    var w7 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w7 >>> 26);\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid += Math.imul(ah8, bl0);\n    hi = Math.imul(ah8, bh0);\n    lo += Math.imul(al7, bl1);\n    mid += Math.imul(al7, bh1);\n    mid += Math.imul(ah7, bl1);\n    hi += Math.imul(ah7, bh1);\n    lo += Math.imul(al6, bl2);\n    mid += Math.imul(al6, bh2);\n    mid += Math.imul(ah6, bl2);\n    hi += Math.imul(ah6, bh2);\n    lo += Math.imul(al5, bl3);\n    mid += Math.imul(al5, bh3);\n    mid += Math.imul(ah5, bl3);\n    hi += Math.imul(ah5, bh3);\n    lo += Math.imul(al4, bl4);\n    mid += Math.imul(al4, bh4);\n    mid += Math.imul(ah4, bl4);\n    hi += Math.imul(ah4, bh4);\n    lo += Math.imul(al3, bl5);\n    mid += Math.imul(al3, bh5);\n    mid += Math.imul(ah3, bl5);\n    hi += Math.imul(ah3, bh5);\n    lo += Math.imul(al2, bl6);\n    mid += Math.imul(al2, bh6);\n    mid += Math.imul(ah2, bl6);\n    hi += Math.imul(ah2, bh6);\n    lo += Math.imul(al1, bl7);\n    mid += Math.imul(al1, bh7);\n    mid += Math.imul(ah1, bl7);\n    hi += Math.imul(ah1, bh7);\n    lo += Math.imul(al0, bl8);\n    mid += Math.imul(al0, bh8);\n    mid += Math.imul(ah0, bl8);\n    hi += Math.imul(ah0, bh8);\n    var w8 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w8 >>> 26);\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid += Math.imul(ah9, bl0);\n    hi = Math.imul(ah9, bh0);\n    lo += Math.imul(al8, bl1);\n    mid += Math.imul(al8, bh1);\n    mid += Math.imul(ah8, bl1);\n    hi += Math.imul(ah8, bh1);\n    lo += Math.imul(al7, bl2);\n    mid += Math.imul(al7, bh2);\n    mid += Math.imul(ah7, bl2);\n    hi += Math.imul(ah7, bh2);\n    lo += Math.imul(al6, bl3);\n    mid += Math.imul(al6, bh3);\n    mid += Math.imul(ah6, bl3);\n    hi += Math.imul(ah6, bh3);\n    lo += Math.imul(al5, bl4);\n    mid += Math.imul(al5, bh4);\n    mid += Math.imul(ah5, bl4);\n    hi += Math.imul(ah5, bh4);\n    lo += Math.imul(al4, bl5);\n    mid += Math.imul(al4, bh5);\n    mid += Math.imul(ah4, bl5);\n    hi += Math.imul(ah4, bh5);\n    lo += Math.imul(al3, bl6);\n    mid += Math.imul(al3, bh6);\n    mid += Math.imul(ah3, bl6);\n    hi += Math.imul(ah3, bh6);\n    lo += Math.imul(al2, bl7);\n    mid += Math.imul(al2, bh7);\n    mid += Math.imul(ah2, bl7);\n    hi += Math.imul(ah2, bh7);\n    lo += Math.imul(al1, bl8);\n    mid += Math.imul(al1, bh8);\n    mid += Math.imul(ah1, bl8);\n    hi += Math.imul(ah1, bh8);\n    lo += Math.imul(al0, bl9);\n    mid += Math.imul(al0, bh9);\n    mid += Math.imul(ah0, bl9);\n    hi += Math.imul(ah0, bh9);\n    var w9 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w9 >>> 26);\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid += Math.imul(ah9, bl1);\n    hi = Math.imul(ah9, bh1);\n    lo += Math.imul(al8, bl2);\n    mid += Math.imul(al8, bh2);\n    mid += Math.imul(ah8, bl2);\n    hi += Math.imul(ah8, bh2);\n    lo += Math.imul(al7, bl3);\n    mid += Math.imul(al7, bh3);\n    mid += Math.imul(ah7, bl3);\n    hi += Math.imul(ah7, bh3);\n    lo += Math.imul(al6, bl4);\n    mid += Math.imul(al6, bh4);\n    mid += Math.imul(ah6, bl4);\n    hi += Math.imul(ah6, bh4);\n    lo += Math.imul(al5, bl5);\n    mid += Math.imul(al5, bh5);\n    mid += Math.imul(ah5, bl5);\n    hi += Math.imul(ah5, bh5);\n    lo += Math.imul(al4, bl6);\n    mid += Math.imul(al4, bh6);\n    mid += Math.imul(ah4, bl6);\n    hi += Math.imul(ah4, bh6);\n    lo += Math.imul(al3, bl7);\n    mid += Math.imul(al3, bh7);\n    mid += Math.imul(ah3, bl7);\n    hi += Math.imul(ah3, bh7);\n    lo += Math.imul(al2, bl8);\n    mid += Math.imul(al2, bh8);\n    mid += Math.imul(ah2, bl8);\n    hi += Math.imul(ah2, bh8);\n    lo += Math.imul(al1, bl9);\n    mid += Math.imul(al1, bh9);\n    mid += Math.imul(ah1, bl9);\n    hi += Math.imul(ah1, bh9);\n    var w10 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w10 >>> 26);\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid += Math.imul(ah9, bl2);\n    hi = Math.imul(ah9, bh2);\n    lo += Math.imul(al8, bl3);\n    mid += Math.imul(al8, bh3);\n    mid += Math.imul(ah8, bl3);\n    hi += Math.imul(ah8, bh3);\n    lo += Math.imul(al7, bl4);\n    mid += Math.imul(al7, bh4);\n    mid += Math.imul(ah7, bl4);\n    hi += Math.imul(ah7, bh4);\n    lo += Math.imul(al6, bl5);\n    mid += Math.imul(al6, bh5);\n    mid += Math.imul(ah6, bl5);\n    hi += Math.imul(ah6, bh5);\n    lo += Math.imul(al5, bl6);\n    mid += Math.imul(al5, bh6);\n    mid += Math.imul(ah5, bl6);\n    hi += Math.imul(ah5, bh6);\n    lo += Math.imul(al4, bl7);\n    mid += Math.imul(al4, bh7);\n    mid += Math.imul(ah4, bl7);\n    hi += Math.imul(ah4, bh7);\n    lo += Math.imul(al3, bl8);\n    mid += Math.imul(al3, bh8);\n    mid += Math.imul(ah3, bl8);\n    hi += Math.imul(ah3, bh8);\n    lo += Math.imul(al2, bl9);\n    mid += Math.imul(al2, bh9);\n    mid += Math.imul(ah2, bl9);\n    hi += Math.imul(ah2, bh9);\n    var w11 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w11 >>> 26);\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid += Math.imul(ah9, bl3);\n    hi = Math.imul(ah9, bh3);\n    lo += Math.imul(al8, bl4);\n    mid += Math.imul(al8, bh4);\n    mid += Math.imul(ah8, bl4);\n    hi += Math.imul(ah8, bh4);\n    lo += Math.imul(al7, bl5);\n    mid += Math.imul(al7, bh5);\n    mid += Math.imul(ah7, bl5);\n    hi += Math.imul(ah7, bh5);\n    lo += Math.imul(al6, bl6);\n    mid += Math.imul(al6, bh6);\n    mid += Math.imul(ah6, bl6);\n    hi += Math.imul(ah6, bh6);\n    lo += Math.imul(al5, bl7);\n    mid += Math.imul(al5, bh7);\n    mid += Math.imul(ah5, bl7);\n    hi += Math.imul(ah5, bh7);\n    lo += Math.imul(al4, bl8);\n    mid += Math.imul(al4, bh8);\n    mid += Math.imul(ah4, bl8);\n    hi += Math.imul(ah4, bh8);\n    lo += Math.imul(al3, bl9);\n    mid += Math.imul(al3, bh9);\n    mid += Math.imul(ah3, bl9);\n    hi += Math.imul(ah3, bh9);\n    var w12 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w12 >>> 26);\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid += Math.imul(ah9, bl4);\n    hi = Math.imul(ah9, bh4);\n    lo += Math.imul(al8, bl5);\n    mid += Math.imul(al8, bh5);\n    mid += Math.imul(ah8, bl5);\n    hi += Math.imul(ah8, bh5);\n    lo += Math.imul(al7, bl6);\n    mid += Math.imul(al7, bh6);\n    mid += Math.imul(ah7, bl6);\n    hi += Math.imul(ah7, bh6);\n    lo += Math.imul(al6, bl7);\n    mid += Math.imul(al6, bh7);\n    mid += Math.imul(ah6, bl7);\n    hi += Math.imul(ah6, bh7);\n    lo += Math.imul(al5, bl8);\n    mid += Math.imul(al5, bh8);\n    mid += Math.imul(ah5, bl8);\n    hi += Math.imul(ah5, bh8);\n    lo += Math.imul(al4, bl9);\n    mid += Math.imul(al4, bh9);\n    mid += Math.imul(ah4, bl9);\n    hi += Math.imul(ah4, bh9);\n    var w13 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w13 >>> 26);\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid += Math.imul(ah9, bl5);\n    hi = Math.imul(ah9, bh5);\n    lo += Math.imul(al8, bl6);\n    mid += Math.imul(al8, bh6);\n    mid += Math.imul(ah8, bl6);\n    hi += Math.imul(ah8, bh6);\n    lo += Math.imul(al7, bl7);\n    mid += Math.imul(al7, bh7);\n    mid += Math.imul(ah7, bl7);\n    hi += Math.imul(ah7, bh7);\n    lo += Math.imul(al6, bl8);\n    mid += Math.imul(al6, bh8);\n    mid += Math.imul(ah6, bl8);\n    hi += Math.imul(ah6, bh8);\n    lo += Math.imul(al5, bl9);\n    mid += Math.imul(al5, bh9);\n    mid += Math.imul(ah5, bl9);\n    hi += Math.imul(ah5, bh9);\n    var w14 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w14 >>> 26);\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid += Math.imul(ah9, bl6);\n    hi = Math.imul(ah9, bh6);\n    lo += Math.imul(al8, bl7);\n    mid += Math.imul(al8, bh7);\n    mid += Math.imul(ah8, bl7);\n    hi += Math.imul(ah8, bh7);\n    lo += Math.imul(al7, bl8);\n    mid += Math.imul(al7, bh8);\n    mid += Math.imul(ah7, bl8);\n    hi += Math.imul(ah7, bh8);\n    lo += Math.imul(al6, bl9);\n    mid += Math.imul(al6, bh9);\n    mid += Math.imul(ah6, bl9);\n    hi += Math.imul(ah6, bh9);\n    var w15 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w15 >>> 26);\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid += Math.imul(ah9, bl7);\n    hi = Math.imul(ah9, bh7);\n    lo += Math.imul(al8, bl8);\n    mid += Math.imul(al8, bh8);\n    mid += Math.imul(ah8, bl8);\n    hi += Math.imul(ah8, bh8);\n    lo += Math.imul(al7, bl9);\n    mid += Math.imul(al7, bh9);\n    mid += Math.imul(ah7, bl9);\n    hi += Math.imul(ah7, bh9);\n    var w16 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w16 >>> 26);\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid += Math.imul(ah9, bl8);\n    hi = Math.imul(ah9, bh8);\n    lo += Math.imul(al8, bl9);\n    mid += Math.imul(al8, bh9);\n    mid += Math.imul(ah8, bl9);\n    hi += Math.imul(ah8, bh9);\n    var w17 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w17 >>> 26);\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid += Math.imul(ah9, bl9);\n    hi = Math.imul(ah9, bh9);\n    var w18 = c + lo + ((mid & 0x1fff) << 13);\n    c = hi + (mid >>> 13) + (w18 >>> 26);\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) {\n      res = -res;\n    }\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res;\n\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.ushl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"]}