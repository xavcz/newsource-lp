{"version":3,"sources":["browser.js"],"names":[],"mappings":"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","file":"browser-compiled.js","sourcesContent":["var createHmac = require('create-hmac')\nvar MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nexports.pbkdf2 = pbkdf2\nfunction pbkdf2 (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('No callback provided to pbkdf2')\n  }\n\n  var result = pbkdf2Sync(password, salt, iterations, keylen, digest)\n  setTimeout(function () {\n    callback(undefined, result)\n  })\n}\n\nexports.pbkdf2Sync = pbkdf2Sync\nfunction pbkdf2Sync (password, salt, iterations, keylen, digest) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC) {\n    throw new TypeError('Bad key length')\n  }\n\n  digest = digest || 'sha1'\n\n  if (!Buffer.isBuffer(password)) password = new Buffer(password, 'binary')\n  if (!Buffer.isBuffer(salt)) salt = new Buffer(salt, 'binary')\n\n  var hLen\n  var l = 1\n  var DK = new Buffer(keylen)\n  var block1 = new Buffer(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var r\n  var T\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n    var U = createHmac(digest, password).update(block1).digest()\n\n    if (!hLen) {\n      hLen = U.length\n      T = new Buffer(hLen)\n      l = Math.ceil(keylen / hLen)\n      r = keylen - (l - 1) * hLen\n    }\n\n    U.copy(T, 0, 0, hLen)\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k]\n      }\n    }\n\n    var destPos = (i - 1) * hLen\n    var len = (i === l ? r : hLen)\n    T.copy(DK, destPos, 0, len)\n  }\n\n  return DK\n}\n"]}