{"version":3,"sources":["dh.js"],"names":[],"mappings":"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","file":"dh-compiled.js","sourcesContent":["var test = require('tape')\nvar crypto = require('diffie-hellman/browser')\n\ntest('diffie-hellman mod groups', function (t) {\n  [\n    'modp1', 'modp2', 'modp5', 'modp14', 'modp15', 'modp16'\n  ].forEach(function (mod) {\n    t.test(mod, function (t) {\n      t.plan(3)\n      var dh1 = crypto.getDiffieHellman(mod)\n      var p1 = dh1.getPrime().toString('hex')\n      dh1.generateKeys()\n      var dh2 = crypto.getDiffieHellman(mod)\n      var p2 = dh2.getPrime().toString('hex')\n      dh2.generateKeys()\n      t.equals(p1, p2, 'equal primes')\n      var pubk1 = dh1.getPublicKey()\n      var pubk2 = dh2.getPublicKey()\n      t.notEquals(pubk1, pubk2, 'diff public keys')\n      var pub1 = dh1.computeSecret(pubk2).toString('hex')\n      var pub2 = dh2.computeSecret(dh1.getPublicKey()).toString('hex')\n      t.equals(pub1, pub2, 'equal secrets')\n    })\n  })\n})\n\ntest('diffie-hellman key lengths', function (t) {\n  [\n    64, 65, 192\n  ].forEach(function (len) {\n    t.test('' + len, function (t) {\n      t.plan(3)\n      var dh2 = crypto.createDiffieHellman(len)\n      var prime2 = dh2.getPrime()\n      var p2 = prime2.toString('hex')\n      var dh1 = crypto.createDiffieHellman(prime2)\n      var p1 = dh1.getPrime().toString('hex')\n      dh1.generateKeys()\n      dh2.generateKeys()\n      t.equals(p1, p2, 'equal primes')\n      var pubk1 = dh1.getPublicKey()\n      var pubk2 = dh2.getPublicKey()\n      t.notEquals(pubk1, pubk2, 'diff public keys')\n      var pub1 = dh1.computeSecret(pubk2).toString('hex')\n      var pub2 = dh2.computeSecret(dh1.getPublicKey()).toString('hex')\n      t.equals(pub1, pub2, 'equal secrets')\n    })\n  })\n})\n"]}