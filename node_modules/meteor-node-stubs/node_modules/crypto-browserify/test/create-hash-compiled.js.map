{"version":3,"sources":["create-hash.js"],"names":[],"mappings":"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","file":"create-hash-compiled.js","sourcesContent":["var test = require('tape')\n\nvar algorithms = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160']\nvar encodings = ['hex', 'base64'] // FIXME: test binary\nvar vectors = require('hash-test-vectors')\n\ntestLib('createHash in crypto-browserify', require('../').createHash)\ntestLib('create-hash/browser', require('create-hash/browser'))\n\nfunction testLib (name, createHash) {\n  algorithms.forEach(function (algorithm) {\n    runTest(name, createHash, algorithm)\n  })\n}\nfunction runTest (name, createHash, algorithm) {\n  test(name + ' test ' + algorithm + ' against test vectors', function (t) {\n    run(0)\n    function run (i) {\n      if (i >= vectors.length) {\n        return t.end()\n      }\n      var obj = vectors[i]\n\n      var input = new Buffer(obj.input, 'base64')\n      var node = obj[algorithm]\n      var js = createHash(algorithm).update(input).digest('hex')\n      if (js !== node) {\n        t.equal(js, node, algorithm + '(testVector[' + i + ']) == ' + node)\n      }\n\n      encodings.forEach(function (encoding) {\n        var input = new Buffer(obj.input, 'base64').toString(encoding)\n        var node = obj[algorithm]\n        var js = createHash(algorithm).update(input, encoding).digest('hex')\n        if (js !== node) {\n          t.equal(js, node, algorithm + '(testVector[' + i + '], ' + encoding + ') == ' + node)\n        }\n      })\n      input = new Buffer(obj.input, 'base64')\n      node = obj[algorithm]\n      var hash = createHash(algorithm)\n      hash.end(input)\n      js = hash.read().toString('hex')\n      if (js !== node) {\n        t.equal(js, node, algorithm + '(testVector[' + i + ']) == ' + node)\n      }\n      setTimeout(run, 0, i + 1)\n    }\n  })\n}\n"]}