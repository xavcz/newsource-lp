{"version":3,"sources":["create-hmac.js"],"names":[],"mappings":"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","file":"create-hmac-compiled.js","sourcesContent":["var test = require('tape')\n\nvar algorithms = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160']\nvar vectors = require('hash-test-vectors/hmac')\ntestLib('createHmac in crypto-browserify', require('../').createHmac)\ntestLib('create-hmac/browser', require('create-hmac/browser'))\n\nfunction testLib (name, createHmac) {\n  algorithms.forEach(function (alg) {\n    test(name + ' hmac(' + alg + ')', function (t) {\n      run(0)\n      function run (i) {\n        if (i >= vectors.length) {\n          return t.end()\n        }\n        var input = vectors[i]\n        var output = createHmac(alg, new Buffer(input.key, 'hex'))\n          .update(input.data, 'hex').digest()\n\n        output = input.truncate ? output.slice(0, input.truncate) : output\n        output = output.toString('hex')\n        if (output !== input[alg]) {\n          t.equal(output, input[alg])\n        }\n        setTimeout(run, 0, i + 1)\n      }\n    })\n\n    test('hmac(' + alg + ')', function (t) {\n      run(0)\n      function run (i) {\n        if (i >= vectors.length) {\n          return t.end()\n        }\n        var input = vectors[i]\n        var hmac = createHmac(alg, new Buffer(input.key, 'hex'))\n\n        hmac.end(input.data, 'hex')\n        var output = hmac.read()\n\n        output = input.truncate ? output.slice(0, input.truncate) : output\n        output = output.toString('hex')\n        if (output !== input[alg]) {\n          t.equal(output, input[alg])\n        }\n        setTimeout(run, 0, i + 1)\n      }\n    })\n  })\n}\n"]}