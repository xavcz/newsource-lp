{"version":3,"sources":["aes.js"],"names":[],"mappings":"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","file":"aes-compiled.js","sourcesContent":["// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction scrub_vec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n  return false\n}\n\nfunction Global () {\n  this.SBOX = []\n  this.INV_SBOX = []\n  this.SUB_MIX = [[], [], [], []]\n  this.INV_SUB_MIX = [[], [], [], []]\n  this.init()\n  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\n}\n\nGlobal.prototype.init = function () {\n  var d, i, sx, t, x, x2, x4, x8, xi, _i\n  d = (function () {\n    var _i, _results\n    _results = []\n    for (i = _i = 0; _i < 256; i = ++_i) {\n      if (i < 128) {\n        _results.push(i << 1)\n      } else {\n        _results.push((i << 1) ^ 0x11b)\n      }\n    }\n    return _results\n  })()\n  x = 0\n  xi = 0\n  for (i = _i = 0; _i < 256; i = ++_i) {\n    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    this.SBOX[x] = sx\n    this.INV_SBOX[sx] = x\n    x2 = d[x]\n    x4 = d[x2]\n    x8 = d[x4]\n    t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    this.SUB_MIX[3][x] = t\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    this.INV_SUB_MIX[3][sx] = t\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n  return true\n}\n\nvar G = new Global()\n\nAES.blockSize = 4 * 4\n\nAES.prototype.blockSize = AES.blockSize\n\nAES.keySize = 256 / 8\n\nAES.prototype.keySize = AES.keySize\n\nfunction bufferToArray (buf) {\n  var len = buf.length / 4\n  var out = new Array(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n  return out\n}\nfunction AES (key) {\n  this._key = bufferToArray(key)\n  this._doReset()\n}\n\nAES.prototype._doReset = function () {\n  var invKsRow, keySize, keyWords, ksRow, ksRows, t\n  keyWords = this._key\n  keySize = keyWords.length\n  this._nRounds = keySize + 6\n  ksRows = (this._nRounds + 1) * 4\n  this._keySchedule = []\n  for (ksRow = 0; ksRow < ksRows; ksRow++) {\n    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)\n  }\n  this._invKeySchedule = []\n  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n    ksRow = ksRows - invKsRow\n    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]\n    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]\n  }\n  return true\n}\n\nAES.prototype.encryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var temp = [M[3], M[1]]\n  M[1] = temp[0]\n  M[3] = temp[1]\n  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrub_vec(this._keySchedule)\n  scrub_vec(this._invKeySchedule)\n  scrub_vec(this._key)\n}\n\nAES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {\n  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3\n\n  s0 = M[0] ^ keySchedule[0]\n  s1 = M[1] ^ keySchedule[1]\n  s2 = M[2] ^ keySchedule[2]\n  s3 = M[3] ^ keySchedule[3]\n  ksRow = 4\n  for (var round = 1; round < this._nRounds; round++) {\n    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  return [\n    fixup_uint32(t0),\n    fixup_uint32(t1),\n    fixup_uint32(t2),\n    fixup_uint32(t3)\n  ]\n}\n\nexports.AES = AES\n"]}