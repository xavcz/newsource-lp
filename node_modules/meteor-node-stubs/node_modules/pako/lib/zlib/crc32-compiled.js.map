{"version":3,"sources":["crc32.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;AAQb,SAAS,SAAS,GAAG;AACnB,MAAI,CAAC;MAAE,KAAK,GAAG,EAAE,CAAC;;AAElB,OAAK,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC3B,KAAC,GAAG,CAAC,CAAC;AACN,SAAK,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACzB,OAAC,GAAI,AAAC,CAAC,GAAC,CAAC,GAAK,UAAU,GAAI,CAAC,KAAK,CAAC,AAAC,GAAK,CAAC,KAAK,CAAC,AAAC,AAAC,CAAC;KACpD;AACD,SAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;GACd;;AAED,SAAO,KAAK,CAAC;CACd;;;AAGD,IAAI,QAAQ,GAAG,SAAS,EAAE,CAAC;;AAG3B,SAAS,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACjC,MAAI,CAAC,GAAG,QAAQ;MACZ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;;AAEpB,KAAG,GAAG,GAAG,GAAI,CAAC,CAAC,AAAC,CAAC;;AAEjB,OAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC9B,OAAG,GAAG,AAAC,GAAG,KAAK,CAAC,GAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA,GAAI,IAAI,CAAC,CAAC;GAC9C;;AAED,SAAQ,GAAG,GAAI,CAAC,CAAC,AAAC,CAAE;CACrB;;AAGD,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"crc32-compiled.js","sourcesContent":["'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n =0; n < 256; n++) {\n    c = n;\n    for (var k =0; k < 8; k++) {\n      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc = crc ^ (-1);\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n"]}