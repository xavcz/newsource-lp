{"version":3,"sources":["sha.js"],"names":[],"mappings":";;AAEA,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AACxC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;;AAEhC,SAAS,IAAI,CAAE,SAAS,EAAE,CAAC,EAAE;AAC3B,MAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACtB,MAAI,IAAI,GAAG,UAAU,CAAC,SAAS,IAAI,MAAM,CAAC,CAAA;;AAE1C,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI,EAAE;AAC3B,QAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;GAClB,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AACtB,QAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE;AACrB,aAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAA;KAC3D;;AAED,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;GAChC,CAAC,CAAA;CACH;;AAED,SAAS,KAAK,GAAI;AAChB,SAAO,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAA;AAClF,SAAO,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAA;AAC/E,SAAO,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAA;CAC3E;;AAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE;AACxB,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAA;CAE7B,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACtB,MAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7B,SAAK,EAAE,CAAA;GAER,MAAM;AACL,QAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACzB,QAAI,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AAC1B,QAAI,CAAC,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAA;GAC1D;CACF,MAAM;AACL,OAAK,EAAE,CAAA;CACR","file":"sha-compiled.js","sourcesContent":["#! /usr/bin/env node\n\nvar createHash = require('./browserify')\nvar argv = process.argv.slice(2)\n\nfunction pipe (algorithm, s) {\n  var start = Date.now()\n  var hash = createHash(algorithm || 'sha1')\n\n  s.on('data', function (data) {\n    hash.update(data)\n  })\n\n  s.on('end', function () {\n    if (process.env.DEBUG) {\n      return console.log(hash.digest('hex'), Date.now() - start)\n    }\n\n    console.log(hash.digest('hex'))\n  })\n}\n\nfunction usage () {\n  console.error('sha.js [algorithm=sha1] [filename] # hash filename with algorithm')\n  console.error('input | sha.js [algorithm=sha1]    # hash stdin with algorithm')\n  console.error('sha.js --help                      # display this message')\n}\n\nif (!process.stdin.isTTY) {\n  pipe(argv[0], process.stdin)\n\n} else if (argv.length) {\n  if (/--help|-h/.test(argv[0])) {\n    usage()\n\n  } else {\n    var filename = argv.pop()\n    var algorithm = argv.pop()\n    pipe(algorithm, require('fs').createReadStream(filename))\n  }\n} else {\n  usage()\n}\n"]}