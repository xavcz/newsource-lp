{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACvC,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAC3B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;;AAElC,IAAI,KAAK,GAAG;AACV,gBAAc,EAAE,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5C,YAAU,EAAE,GAAG,CAAC,GAAG;AACnB,eAAa,EAAE,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3C,WAAS,EAAE,GAAG,CAAC,GAAG;AAClB,WAAS,EAAE,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;AACvC,WAAS,EAAE,GAAG,CAAC,GAAG;CACnB,CAAA;AACD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAA;AAC5B,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,cAAc,CAAC,CAAA;AAClC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAA;AACpB,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;AACzB,SAAS,GAAG,CAAE,IAAI,EAAE;AAClB,YAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACrB,MAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAA;AACtC,MAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAA;AAC1B,MAAI,IAAI,CAAA;AACR,MAAI,IAAI,CAAC,OAAO,EAAE;AAChB,QAAI,GAAG,SAAS,CAAA;GACjB,MAAM;AACL,QAAI,GAAG,SAAS,CAAA;GACjB;AACD,MAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;AAClB,MAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,aAAa,EAAE;AACxD,OAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;GAC5C;AACD,MAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA;AAChB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACtB,OAAG,EAAE,GAAG;AACR,MAAE,EAAE,EAAE;AACN,QAAI,EAAE,IAAI;GACX,CAAC,CAAA;CACH;AACD,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;AACtC,SAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA;CAC1C,CAAA;AACD,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACjC,SAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;CACrC,CAAA","file":"index-compiled.js","sourcesContent":["var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n"]}