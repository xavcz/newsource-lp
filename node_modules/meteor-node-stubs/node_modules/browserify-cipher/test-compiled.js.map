{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var test = require('tape')\nvar crypto = require('crypto')\nvar desModes = require('browserify-des/modes')\nvar aesModes = require('browserify-aes/modes')\nvar ourCrypto = require('./browser')\n\nfunction runIvTest (mode, keyLen, ivLen) {\n  test('mode: ' + mode, function (t) {\n    var i = 0\n    while (++i < 10) {\n      run(i)\n    }\n    function run (i) {\n      t.test('run: ' + i, function (t) {\n        t.plan(2)\n        var key = crypto.randomBytes(keyLen)\n        var iv = crypto.randomBytes(ivLen)\n        var text = crypto.randomBytes(200)\n        var ourEncrypt\n        try {\n          ourEncrypt = ourCrypto.createCipheriv(mode, key, iv)\n        } catch (e) {\n          t.notOk(e, e.stack)\n        }\n        var nodeEncrypt\n        try {\n          nodeEncrypt = crypto.createCipheriv(mode, key, iv)\n        } catch (e) {\n          t.notOk(e, e.stack)\n        }\n        var ourCipherText = Buffer.concat([ourEncrypt.update(text), ourEncrypt.final()])\n        var authTag\n        if (mode.slice(-3) === 'gcm') {\n          authTag = ourEncrypt.getAuthTag()\n        }\n        var nodeCipherText = Buffer.concat([nodeEncrypt.update(text), nodeEncrypt.final()])\n        t.equals(nodeCipherText.toString('hex'), ourCipherText.toString('hex'))\n        var ourDecrypt = ourCrypto.createDecipheriv(mode, key, iv)\n        if (mode.slice(-3) === 'gcm') {\n          ourDecrypt.setAuthTag(authTag)\n        }\n        var plainText = Buffer.concat([ourDecrypt.update(ourCipherText), ourDecrypt.final()])\n        t.equals(text.toString('hex'), plainText.toString('hex'))\n      })\n    }\n  })\n}\nObject.keys(aesModes).forEach(function (modeName) {\n  var mode = aesModes[modeName]\n  runIvTest(modeName, mode.key / 8, mode.iv)\n})\nObject.keys(desModes).forEach(function (modeName) {\n  var mode = desModes[modeName]\n  runIvTest(modeName, mode.key, mode.iv)\n})\n"]}