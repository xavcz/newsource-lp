{"version":3,"sources":["util.js"],"names":[],"mappings":"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","file":"util-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar assert = require('assert');\nvar context = require('vm').runInNewContext;\n\nvar util = require('../../');\n\n// isArray\nassert.equal(true, util.isArray([]));\nassert.equal(true, util.isArray(Array()));\nassert.equal(true, util.isArray(new Array()));\nassert.equal(true, util.isArray(new Array(5)));\nassert.equal(true, util.isArray(new Array('with', 'some', 'entries')));\nassert.equal(true, util.isArray(context('Array')()));\nassert.equal(false, util.isArray({}));\nassert.equal(false, util.isArray({ push: function() {} }));\nassert.equal(false, util.isArray(/regexp/));\nassert.equal(false, util.isArray(new Error));\nassert.equal(false, util.isArray(Object.create(Array.prototype)));\n\n// isRegExp\nassert.equal(true, util.isRegExp(/regexp/));\nassert.equal(true, util.isRegExp(RegExp()));\nassert.equal(true, util.isRegExp(new RegExp()));\nassert.equal(true, util.isRegExp(context('RegExp')()));\nassert.equal(false, util.isRegExp({}));\nassert.equal(false, util.isRegExp([]));\nassert.equal(false, util.isRegExp(new Date()));\nassert.equal(false, util.isRegExp(Object.create(RegExp.prototype)));\n\n// isDate\nassert.equal(true, util.isDate(new Date()));\nassert.equal(true, util.isDate(new Date(0)));\nassert.equal(true, util.isDate(new (context('Date'))));\nassert.equal(false, util.isDate(Date()));\nassert.equal(false, util.isDate({}));\nassert.equal(false, util.isDate([]));\nassert.equal(false, util.isDate(new Error));\nassert.equal(false, util.isDate(Object.create(Date.prototype)));\n\n// isError\nassert.equal(true, util.isError(new Error));\nassert.equal(true, util.isError(new TypeError));\nassert.equal(true, util.isError(new SyntaxError));\nassert.equal(true, util.isError(new (context('Error'))));\nassert.equal(true, util.isError(new (context('TypeError'))));\nassert.equal(true, util.isError(new (context('SyntaxError'))));\nassert.equal(false, util.isError({}));\nassert.equal(false, util.isError({ name: 'Error', message: '' }));\nassert.equal(false, util.isError([]));\nassert.equal(true, util.isError(Object.create(Error.prototype)));\n\n// isObject\nassert.ok(util.isObject({}) === true);\n\n// _extend\nassert.deepEqual(util._extend({a:1}),             {a:1});\nassert.deepEqual(util._extend({a:1}, []),         {a:1});\nassert.deepEqual(util._extend({a:1}, null),       {a:1});\nassert.deepEqual(util._extend({a:1}, true),       {a:1});\nassert.deepEqual(util._extend({a:1}, false),      {a:1});\nassert.deepEqual(util._extend({a:1}, {b:2}),      {a:1, b:2});\nassert.deepEqual(util._extend({a:1, b:2}, {b:3}), {a:1, b:3});\n"]}