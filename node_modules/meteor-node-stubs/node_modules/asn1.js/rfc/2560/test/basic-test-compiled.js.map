{"version":3,"sources":["basic-test.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAE5B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;;AAEtC,QAAQ,CAAC,iBAAiB,EAAE,YAAW;AACrC,IAAE,CAAC,6BAA6B,EAAE,YAAW;AAC3C,QAAI,IAAI,GAAG,IAAI,MAAM,CACnB,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,wEAAwE,GACxE,oCAAoC,EACpC,KAAK,CAAC,CAAC;;AAET,QAAI,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnD,UAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC/C,UAAM,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;;AAEnE,QAAI,KAAK,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAC1C,GAAG,CAAC,aAAa,CAAC,QAAQ,EAC1B,KAAK,CACN,CAAC;AACF,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAClD,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;GAC/D,CAAC,CAAC;;AAEH,IAAE,CAAC,oCAAoC,EAAE,YAAW;AAClD,QAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC;AACxC,oBAAc,EAAE,mBAAmB;AACnC,mBAAa,EAAE;AACb,oBAAY,EAAE,oBAAoB;AAClC,gBAAQ,EAAE,eAAe;OAC1B;KACF,EAAE,KAAK,CAAC,CAAC;AACV,QAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC1D,UAAM,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;AAC1D,UAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;AACvE,UAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,eAAe,CAAC,CAAC;GAC1E,CAAC,CAAC;CACJ,CAAC,CAAC","file":"basic-test-compiled.js","sourcesContent":["var assert = require('assert');\nvar rfc2560 = require('..');\n\nvar Buffer = require('buffer').Buffer;\n\ndescribe('asn1.js RFC2560', function() {\n  it('should decode OCSP response', function() {\n    var data = new Buffer(\n      '308201d40a0100a08201cd308201c906092b0601050507300101048201ba308201b630' +\n      '819fa216041499e4405f6b145e3e05d9ddd36354fc62b8f700ac180f32303133313133' +\n      '303037343531305a30743072304a300906052b0e03021a050004140226ee2f5fa28108' +\n      '34dacc3380e680ace827f604041499e4405f6b145e3e05d9ddd36354fc62b8f700ac02' +\n      '1100bb4f9a31232b1ba52a0b77af481800588000180f32303133313133303037343531' +\n      '305aa011180f32303133313230343037343531305a300d06092a864886f70d01010505' +\n      '00038201010027813333c9b46845dfe3d0cb6b19c03929cdfc9181c1ce823929bb911a' +\n      'd9de05721790fcccbab43f9fbdec1217ab8023156d07bbcc3555f25e9e472fbbb5e019' +\n      '2835efcdc71b3dbc5e5c4c5939fc7a610fc6521d4ed7d2b685a812fa1a3a129ea87873' +\n      '972be3be54618ba4a4d96090d7f9aaa5f70d4f07cf5cf3611d8a7b3adafe0b319459ed' +\n      '40d456773d5f45f04c773711d86cc41d274f771a31c10d30cd6f846b587524bfab2445' +\n      '4bbb4535cff46f6b341e50f26a242dd78e246c8dea0e2fabcac9582e000c138766f536' +\n      'd7f7bab81247c294454e62b710b07126de4e09685818f694df5783eb66f384ce5977f1' +\n      '2721ff38c709f3ec580d22ff40818dd17f',\n      'hex');\n\n    var res = rfc2560.OCSPResponse.decode(data, 'der');\n    assert.equal(res.responseStatus, 'successful');\n    assert.equal(res.responseBytes.responseType, 'id-pkix-ocsp-basic');\n\n    var basic = rfc2560.BasicOCSPResponse.decode(\n      res.responseBytes.response,\n      'der'\n    );\n    assert.equal(basic.tbsResponseData.version, 'v1');\n    assert.equal(basic.tbsResponseData.producedAt, 1385797510000);\n  });\n\n  it('should encode/decode OCSP response', function() {\n    var encoded = rfc2560.OCSPResponse.encode({\n      responseStatus: 'malformed_request',\n      responseBytes: {\n        responseType: 'id-pkix-ocsp-basic',\n        response: 'random-string'\n      }\n    }, 'der');\n    var decoded = rfc2560.OCSPResponse.decode(encoded, 'der');\n    assert.equal(decoded.responseStatus, 'malformed_request');\n    assert.equal(decoded.responseBytes.responseType, 'id-pkix-ocsp-basic');\n    assert.equal(decoded.responseBytes.response.toString(), 'random-string');\n  });\n});\n"]}