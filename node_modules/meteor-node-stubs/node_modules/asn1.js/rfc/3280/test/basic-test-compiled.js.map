{"version":3,"sources":["basic-test.js"],"names":[],"mappings":"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","file":"basic-test-compiled.js","sourcesContent":["var assert = require('assert');\nvar asn1 = require('../../../');\nvar rfc3280 = require('..');\n\nvar Buffer = require('buffer').Buffer;\n\ndescribe('asn1.js RFC3280', function() {\n  it('should decode Certificate', function() {\n    var data = new Buffer(\n      '308204763082035ea0030201020208462e4256bb1194dc300d06092a864886f70d0101' +\n      '0505003049310b300906035504061302555331133011060355040a130a476f6f676c65' +\n      '20496e63312530230603550403131c476f6f676c6520496e7465726e65742041757468' +\n      '6f72697479204732301e170d3134303733303132303434305a170d3134313032383030' +\n      '303030305a3068310b30090603550406130255533113301106035504080c0a43616c69' +\n      '666f726e69613116301406035504070c0d4d6f756e7461696e20566965773113301106' +\n      '0355040a0c0a476f6f676c6520496e633117301506035504030c0e7777772e676f6f67' +\n      '6c652e636f6d30820122300d06092a864886f70d01010105000382010f003082010a02' +\n      '82010100b7894e02f9ba01e07889d670fd3618d6022efc96c9d9deae2e800aa19f4b17' +\n      '20c371b9996b2efc12fa191b60a92afe76e80e5d9d47280cbc46a4cd9cf454503fefcf' +\n      'cd2e1c8b113a89bcd1f1427ae793bbd0d1e077bc963ff2ceb2b0c9ab68196fce1b2f40' +\n      '0dc77d6294a7c0d50ff104cf92ee837d5c484a3ba0ce76b9c018cf96545f7e27518232' +\n      '57874945f87b69bac902ce4b378746953c619db909e73fd2f5e2dd009c5c748ec22fcb' +\n      'd6648fe60a5805e98ab8cd65ab0eb0772d7a19aefdc24c9a3933692ca695e7b493f8ac' +\n      '7aab8e5d1229f071cf08ac0b6c641704a74747faacfb857b68359fc1a98c777fb5eb3e' +\n      '9c90d6a13b78f42d6d797fd74f03c30203010001a38201413082013d301d0603551d25' +\n      '0416301406082b0601050507030106082b0601050507030230190603551d1104123010' +\n      '820e7777772e676f6f676c652e636f6d306806082b06010505070101045c305a302b06' +\n      '082b06010505073002861f687474703a2f2f706b692e676f6f676c652e636f6d2f4749' +\n      '4147322e637274302b06082b06010505073001861f687474703a2f2f636c69656e7473' +\n      '312e676f6f676c652e636f6d2f6f637370301d0603551d0e04160414e43d6cc20c12e9' +\n      '7c1920533676ef287737d8884a300c0603551d130101ff04023000301f0603551d2304' +\n      '18301680144add06161bbcf668b576f581b6bb621aba5a812f30170603551d20041030' +\n      '0e300c060a2b06010401d67902050130300603551d1f042930273025a023a021861f68' +\n      '7474703a2f2f706b692e676f6f676c652e636f6d2f47494147322e63726c300d06092a' +\n      '864886f70d010105050003820101002d5501bd33f7b6e06117e53ccf21703565f29ab7' +\n      '8642a771effa4369f32938b45f04208d88a1046ba0a726622e864143c8dac38392430d' +\n      'fbea1b7d41c1e27dd43438a47d36c4a048de318be442abed5f60373687d01b7fefc43e' +\n      '0aacf620b11a69fb237aaa4dc33b97bc0eb39b1abe6902b1518253addda25037389c26' +\n      '0ef2808be7f702f47a6466d6f3b35764f088c94e0a2b9ee403602ae21cbad3fd8e873e' +\n      '9e817945a3d23fd2b35579cce19ea7f8815d166f3e46d53eed25ef391a912bb715af64' +\n      'e43e124f98be487f9d222954a5bebc8d5ca384c7128c6dabffb11150a7d2a62ce565b8' +\n      'a02a6c4c8ecfc7ac7065c1979cb8d50eabd5d36c72a5396e712e',\n      'hex');\n\n    var res = rfc3280.Certificate.decode(data, 'der');\n\n    var tbs = res.tbsCertificate;\n    assert.equal(tbs.version, 'v3');\n    assert.deepEqual(tbs.serialNumber,\n                     new asn1.bignum('462e4256bb1194dc', 16));\n    assert.equal(tbs.signature.algorithm.join('.'),\n                 '1.2.840.113549.1.1.5');\n    assert.equal(tbs.signature.parameters.toString('hex'), '0500');\n  });\n  it('should decode ECC Certificate', function() {\n/*\n  Symantec Class 3 ECC 256 bit Extended Validation CA from\n  https://knowledge.symantec.com/support/ssl-certificates-support/index?page=content&actp=CROSSLINK&id=AR1908\n*/\n    var data = new Buffer(\n      '308203e33082036aa00302010202104d955d20af85c49f6925fbab7c665f89300a0608' +\n      '2a8648ce3d0403033081ca310b300906035504061302555331173015060355040a130e' +\n      '566572695369676e2c20496e632e311f301d060355040b1316566572695369676e2054' +\n      '72757374204e6574776f726b313a3038060355040b1331286329203230303720566572' +\n      '695369676e2c20496e632e202d20466f7220617574686f72697a656420757365206f6e' +\n      '6c79314530430603550403133c566572695369676e20436c6173732033205075626c69' +\n      '63205072696d6172792043657274696669636174696f6e20417574686f72697479202d' +\n      '204734301e170d3132313232303030303030305a170d3232313231393233353935395a' +\n      '30818b310b3009060355040613025553311d301b060355040a131453796d616e746563' +\n      '20436f72706f726174696f6e311f301d060355040b131653796d616e74656320547275' +\n      '7374204e6574776f726b313c303a0603550403133353796d616e74656320436c617373' +\n      '203320454343203235362062697420457874656e6465642056616c69646174696f6e20' +\n      '43413059301306072a8648ce3d020106082a8648ce3d03010703420004dd043db2f290' +\n      '9397c6e9bbbc91db51f0a386edfbc6d38593320549e00483619651ff5721ae0bda0ee7' +\n      '04a17fdb2a1cbdca9835c5717340cde86aab54844326e2a382016d3082016930120603' +\n      '551d130101ff040830060101ff02010030370603551d1f0430302e302ca02aa0288626' +\n      '687474703a2f2f63726c2e77732e73796d616e7465632e636f6d2f706361332d67342e' +\n      '63726c300e0603551d0f0101ff040403020106303706082b06010505070101042b3029' +\n      '302706082b06010505073001861b687474703a2f2f6f6373702e77732e73796d616e74' +\n      '65632e636f6d30650603551d20045e305c305a0604551d20003052302606082b060105' +\n      '05070201161a687474703a2f2f7777772e73796d617574682e636f6d2f637073302806' +\n      '082b06010505070202301c1a1a687474703a2f2f7777772e73796d617574682e636f6d' +\n      '2f727061302a0603551d1104233021a41f301d311b30190603550403131253594d432d' +\n      '4543432d43412d703235362d33301d0603551d0e041604144813651794ec9e162a2a74' +\n      '5ce8532db4fb83eb8e301f0603551d23041830168014b31691fdeea66ee4b52e498f87' +\n      '788180ece5b1b5300a06082a8648ce3d040303036700306402305c9bee83a3764d8c2d' +\n      '054c8234bab3bece8fe8c33481fb4077e8346c5b172b3badd5a7a3d2f366c24fb2b0c8' +\n      '76988fbf02304fc22fce92c5a9bdce7d4ed41b3b6624ea4ecd82af544a88efe3bf3a93' +\n      '6354217d1230d232cdabc981b0a711437b4566',\n      'hex');\n    var SubjectPublicKeyInfo = rfc3280.SubjectPublicKeyInfo;\n    var res = rfc3280.Certificate.decode(data, 'der');\n\n    var tbs = res.tbsCertificate;\n    assert.equal(tbs.version, 'v3');\n    assert.deepEqual(tbs.serialNumber,\n                     new asn1.bignum('4d955d20af85c49f6925fbab7c665f89', 16));\n    assert.equal(tbs.signature.algorithm.join('.'),\n                 '1.2.840.10045.4.3.3');  // RFC5754\n    var spki = SubjectPublicKeyInfo.encode(tbs.subjectPublicKeyInfo, 'der');\n// spki check to the output of\n// openssl x509 -in ecc_cert.pem -pubkey -noout |\n// openssl pkey -pubin  -outform der | openssl base64\n    assert.equal(spki.toString('base64'),\n                 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE3QQ9svKQk5fG6bu8kdtR8KO' +\n                 'G7fvG04WTMgVJ4ASDYZZR/1chrgvaDucEoX/bKhy9ypg1xXFzQM3oaqtUhE' +\n                 'Mm4g=='\n                );\n  });\n\n  it('should decode AuthorityInfoAccess', function() {\n    var data = new Buffer('305a302b06082b06010505073002861f687474703a2f2f70' +\n                          '6b692e676f6f676c652e636f6d2f47494147322e63727430' +\n                          '2b06082b06010505073001861f687474703a2f2f636c6965' +\n                          '6e7473312e676f6f676c652e636f6d2f6f637370',\n                          'hex');\n\n    var info = rfc3280.AuthorityInfoAccessSyntax.decode(data, 'der');\n\n    assert(info[0].accessMethod);\n  });\n\n  it('should decode directoryName in GeneralName', function() {\n    var data = new Buffer('a411300f310d300b06022a03160568656c6c6f', 'hex');\n\n    var name = rfc3280.GeneralName.decode(data, 'der');\n    assert.equal(name.type, 'directoryName');\n  });\n});\n"]}