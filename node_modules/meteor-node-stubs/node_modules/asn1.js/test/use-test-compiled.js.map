{"version":3,"sources":["use-test.js"],"names":[],"mappings":"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","file":"use-test-compiled.js","sourcesContent":["var assert = require('assert');\nvar asn1 = require('..');\nvar bn = asn1.bignum;\nvar fixtures = require('./fixtures');\nvar jsonEqual = fixtures.jsonEqual;\n\nvar Buffer = require('buffer').Buffer;\n\ndescribe('asn1.js models', function() {\n  describe('plain use', function() {\n    it('should encode submodel', function() {\n      var SubModel = asn1.define('SubModel', function() {\n        this.seq().obj(\n          this.key('b').octstr()\n        );\n      });\n      var Model = asn1.define('Model', function() {\n        this.seq().obj(\n          this.key('a').int(),\n          this.key('sub').use(SubModel)\n        );\n      });\n\n      var data = {a: new bn(1), sub: {b: new Buffer(\"XXX\")}};\n      var wire = Model.encode(data, 'der');\n      assert.equal(wire.toString('hex'), '300a02010130050403585858');\n      var back = Model.decode(wire, 'der');\n      jsonEqual(back, data);\n    });\n\n    it('should honour implicit tag from parent', function() {\n      var SubModel = asn1.define('SubModel', function() {\n        this.seq().obj(\n          this.key('x').octstr()\n        )\n      });\n      var Model = asn1.define('Model', function() {\n        this.seq().obj(\n          this.key('a').int(),\n          this.key('sub').use(SubModel).implicit(0)\n        );\n      });\n\n      var data = {a: new bn(1), sub: {x: new Buffer(\"123\")}};\n      var wire = Model.encode(data, 'der');\n      assert.equal(wire.toString('hex'), '300a020101a0050403313233');\n      var back = Model.decode(wire, 'der');\n      jsonEqual(back, data);\n    });\n\n    it('should honour explicit tag from parent', function() {\n      var SubModel = asn1.define('SubModel', function() {\n        this.seq().obj(\n          this.key('x').octstr()\n        )\n      });\n      var Model = asn1.define('Model', function() {\n        this.seq().obj(\n          this.key('a').int(),\n          this.key('sub').use(SubModel).explicit(0)\n        );\n      });\n\n      var data = {a: new bn(1), sub: {x: new Buffer(\"123\")}};\n      var wire = Model.encode(data, 'der');\n      assert.equal(wire.toString('hex'), '300c020101a00730050403313233');\n      var back = Model.decode(wire, 'der');\n      jsonEqual(back, data);\n\n    });\n\n    it('should get model with function call', function() {\n      var SubModel = asn1.define('SubModel', function() {\n        this.seq().obj(\n          this.key('x').octstr()\n        )\n      });\n      var Model = asn1.define('Model', function() {\n        this.seq().obj(\n          this.key('a').int(),\n          this.key('sub').use(function(obj) {\n              assert.equal(obj.a, 1);\n              return SubModel;\n          })\n        );\n      });\n\n      var data = {a: new bn(1), sub: {x: new Buffer(\"123\")}};\n      var wire = Model.encode(data, 'der');\n      assert.equal(wire.toString('hex'), '300a02010130050403313233');\n      var back = Model.decode(wire, 'der');\n      jsonEqual(back, data);\n\n    });\n\n    it('should support recursive submodels', function() {\n      var PlainSubModel = asn1.define('PlainSubModel', function() {\n        this.int();\n      });\n      var RecursiveModel = asn1.define('RecursiveModel', function() {\n        this.seq().obj(\n          this.key('plain').bool(),\n          this.key('content').use(function(obj) {\n            if(obj.plain) {\n              return PlainSubModel;\n            } else {\n              return RecursiveModel;\n            }\n          })\n        );\n      });\n\n      var data = {\n        'plain': false,\n        'content': {\n          'plain': true,\n          'content': new bn(1)\n        }\n      };\n      var wire = RecursiveModel.encode(data, 'der');\n      assert.equal(wire.toString('hex'), '300b01010030060101ff020101');\n      var back = RecursiveModel.decode(wire, 'der');\n      jsonEqual(back, data);\n    });\n\n  });\n});\n\n"]}