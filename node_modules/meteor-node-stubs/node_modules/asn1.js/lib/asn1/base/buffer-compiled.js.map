{"version":3,"sources":["buffer.js"],"names":[],"mappings":"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","file":"buffer-compiled.js","sourcesContent":["var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n"]}