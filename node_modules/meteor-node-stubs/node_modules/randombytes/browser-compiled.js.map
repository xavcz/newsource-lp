{"version":3,"sources":["browser.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,SAAS,UAAU,GAAI;AACrB,QAAM,IAAI,KAAK,CAAC,4GAA4G,CAAC,CAAA;CAC9H;;AAED,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAA;;AAE7C,IAAI,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE;AACpC,QAAM,CAAC,OAAO,GAAG,WAAW,CAAA;CAC7B,MAAM;AACL,QAAM,CAAC,OAAO,GAAG,UAAU,CAAA;CAC5B;;AAED,SAAS,WAAW,CAAE,IAAI,EAAE,EAAE,EAAE;;AAE9B,MAAI,IAAI,GAAG,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;;AAEpE,MAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;;;;AAI1C,QAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAA;;;AAGhC,MAAI,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;;AAEvC,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC5B,WAAO,OAAO,CAAC,QAAQ,CAAC,YAAY;AAClC,QAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;KAChB,CAAC,CAAA;GACH;;AAED,SAAO,KAAK,CAAA;CACb","file":"browser-compiled.js","sourcesContent":["'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\n\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  crypto.getRandomValues(rawBytes)\n\n  // phantomjs doesn't like a buffer being passed here\n  var bytes = new Buffer(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n"]}