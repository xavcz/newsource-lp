{"version":3,"sources":["request_url.js"],"names":[],"mappings":"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","file":"request_url-compiled.js","sourcesContent":["global.window = global;\nglobal.location = {\n    host: 'localhost:8081',\n    port: 8081,\n    protocol: 'http:'\n};\n\nvar noop = function() {};\nglobal.XMLHttpRequest = function() {\n  this.open = noop;\n  this.send = noop;\n};\n\nglobal.FormData = function () {};\nglobal.Blob = function () {};\nglobal.ArrayBuffer = function () {};\n\nvar test = require('tape').test;\nvar http = require('../index.js');\n\n\ntest('Test simple url string', function(t) {\n  var url = { path: '/api/foo' };\n  var request = http.get(url, noop);\n\n  t.equal( request.uri, 'http://localhost:8081/api/foo', 'Url should be correct');\n  t.end();\n\n});\n\n\ntest('Test full url object', function(t) {\n  var url = {\n    host: \"localhost:8081\",\n    hostname: \"localhost\",\n    href: \"http://localhost:8081/api/foo?bar=baz\",\n    method: \"GET\",\n    path: \"/api/foo?bar=baz\",\n    pathname: \"/api/foo\",\n    port: \"8081\",\n    protocol: \"http:\",\n    query: \"bar=baz\",\n    search: \"?bar=baz\",\n    slashes: true\n  };\n\n  var request = http.get(url, noop);\n\n  t.equal( request.uri, 'http://localhost:8081/api/foo?bar=baz', 'Url should be correct');\n  t.end();\n\n});\n\ntest('Test alt protocol', function(t) {\n  var params = {\n    protocol: \"foo:\",\n    hostname: \"localhost\",\n    port: \"3000\",\n    path: \"/bar\"\n  };\n\n  var request = http.get(params, noop);\n\n  t.equal( request.uri, 'foo://localhost:3000/bar', 'Url should be correct');\n  t.end();\n\n});\n\ntest('Test string as parameters', function(t) {\n  var url = '/api/foo';\n  var request = http.get(url, noop);\n\n  t.equal( request.uri, 'http://localhost:8081/api/foo', 'Url should be correct');\n  t.end();\n\n});\n\ntest('Test withCredentials param', function(t) {\n  var url = '/api/foo';\n\n  var request = http.request({ url: url, withCredentials: false }, noop);\n  t.equal( request.xhr.withCredentials, false, 'xhr.withCredentials should be false');\n\n  var request = http.request({ url: url, withCredentials: true }, noop);\n  t.equal( request.xhr.withCredentials, true, 'xhr.withCredentials should be true');\n\n  var request = http.request({ url: url }, noop);\n  t.equal( request.xhr.withCredentials, true, 'xhr.withCredentials should be true');\n\n  t.end();\n});\n\ntest('Test POST XHR2 types', function(t) {\n  t.plan(3);\n  var url = '/api/foo';\n\n  var request = http.request({ url: url, method: 'POST' }, noop);\n  request.xhr.send = function (data) {\n    t.ok(data instanceof global.ArrayBuffer, 'data should be instanceof ArrayBuffer');\n  };\n  request.end(new global.ArrayBuffer());\n\n  request = http.request({ url: url, method: 'POST' }, noop);\n  request.xhr.send = function (data) {\n    t.ok(data instanceof global.Blob, 'data should be instanceof Blob');\n  };\n  request.end(new global.Blob());\n\n  request = http.request({ url: url, method: 'POST' }, noop);\n  request.xhr.send = function (data) {\n    t.ok(data instanceof global.FormData, 'data should be instanceof FormData');\n  };\n  request.end(new global.FormData());\n});\n"]}