{"version":3,"sources":["response.js"],"names":[],"mappings":"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","file":"response-compiled.js","sourcesContent":["var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"]}