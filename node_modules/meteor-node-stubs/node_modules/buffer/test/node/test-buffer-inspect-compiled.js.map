{"version":3,"sources":["test-buffer-inspect.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAChE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;AACtC,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,MAAM,CAAC,iBAAiB,GAAG,CAAC,CAAC;;AAE7B,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEf,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEf,IAAI,QAAQ,GAAG,qBAAqB,CAAC;;AAErC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC9C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;;AAE9C,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEb,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEb,QAAQ,GAAG,gBAAgB,CAAC;;AAE5B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC9C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;;AAE9C,MAAM,CAAC,iBAAiB,GAAG,QAAQ,CAAC;;AAEpC,MAAM,CAAC,YAAY,CAAC,YAAW;AAC7B,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC9C,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;CAC/C,CAAC,CAAC","file":"test-buffer-inspect-compiled.js","sourcesContent":["'use strict';\nif (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\nvar Buffer = require('../../').Buffer;\nvar common = {};\nvar assert = require('assert');\n\nvar util = require('util');\n\nvar buffer = require('../../');\n\nbuffer.INSPECT_MAX_BYTES = 2;\n\nvar b = new Buffer(4);\nb.fill('1234');\n\nvar s = new buffer.SlowBuffer(4);\ns.fill('1234');\n\nvar expected = '<Buffer 31 32 ... >';\n\nassert.strictEqual(util.inspect(b), expected);\nassert.strictEqual(util.inspect(s), expected);\n\nb = new Buffer(2);\nb.fill('12');\n\ns = new buffer.SlowBuffer(2);\ns.fill('12');\n\nexpected = '<Buffer 31 32>';\n\nassert.strictEqual(util.inspect(b), expected);\nassert.strictEqual(util.inspect(s), expected);\n\nbuffer.INSPECT_MAX_BYTES = Infinity;\n\nassert.doesNotThrow(function() {\n  assert.strictEqual(util.inspect(b), expected);\n  assert.strictEqual(util.inspect(s), expected);\n});\n\n"]}