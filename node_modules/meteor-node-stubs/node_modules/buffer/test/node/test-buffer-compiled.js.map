{"version":3,"sources":["test-buffer.js"],"names":[],"mappings":"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","file":"test-buffer-compiled.js","sourcesContent":["'use strict';\nif (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\nvar Buffer = require('../../').Buffer;\nvar common = {};\nvar assert = require('assert');\n\nvar Buffer = require('../../').Buffer;\nvar SlowBuffer = require('../../').SlowBuffer;\n\n// counter to ensure unique value is always copied\nvar cntr = 0;\n\nvar b = Buffer(1024); // safe constructor\n\n// console.log('b.length == %d', b.length);\nassert.strictEqual(1024, b.length);\n\nb[0] = 255;\nassert.strictEqual(b[0], 255);\n\nfor (var i = 0; i < 1024; i++) {\n  b[i] = i % 256;\n}\n\nfor (var i = 0; i < 1024; i++) {\n  assert.strictEqual(i % 256, b[i]);\n}\n\nvar c = new Buffer(512);\n// console.log('c.length == %d', c.length);\nassert.strictEqual(512, c.length);\n\n// First check Buffer#fill() works as expected.\n\nassert.throws(function() {\n  Buffer(8).fill('a', -1);\n});\n\nassert.throws(function() {\n  Buffer(8).fill('a', 0, 9);\n});\n\n// Make sure this doesn't hang indefinitely.\nBuffer(8).fill('');\n\nvar buf = new Buffer(64);\nbuf.fill(10);\nfor (var i = 0; i < buf.length; i++)\n  assert.equal(buf[i], 10);\n\nbuf.fill(11, 0, buf.length >> 1);\nfor (var i = 0; i < buf.length >> 1; i++)\n  assert.equal(buf[i], 11);\nfor (var i = (buf.length >> 1) + 1; i < buf.length; i++)\n  assert.equal(buf[i], 10);\n\nbuf.fill('h');\nfor (var i = 0; i < buf.length; i++)\n  assert.equal('h'.charCodeAt(0), buf[i]);\n\nbuf.fill(0);\nfor (var i = 0; i < buf.length; i++)\n  assert.equal(0, buf[i]);\n\nbuf.fill(null);\nfor (var i = 0; i < buf.length; i++)\n  assert.equal(0, buf[i]);\n\nbuf.fill(1, 16, 32);\nfor (var i = 0; i < 16; i++)\n  assert.equal(0, buf[i]);\nfor (; i < 32; i++)\n  assert.equal(1, buf[i]);\nfor (; i < buf.length; i++)\n  assert.equal(0, buf[i]);\n\nvar buf = new Buffer(10);\nbuf.fill('abc');\nassert.equal(buf.toString(), 'abcabcabca');\nbuf.fill('է');\nassert.equal(buf.toString(), 'էէէէէ');\n\n// copy 512 bytes, from 0 to 512.\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = b.copy(c, 0, 0, 512);\n// console.log('copied %d bytes from b into c', copied);\nassert.strictEqual(512, copied);\nfor (var i = 0; i < c.length; i++) {\n  assert.strictEqual(b[i], c[i]);\n}\n\n// copy c into b, without specifying sourceEnd\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = c.copy(b, 0, 0);\n// console.log('copied %d bytes from c into b w/o sourceEnd', copied);\nassert.strictEqual(c.length, copied);\nfor (var i = 0; i < c.length; i++) {\n  assert.strictEqual(c[i], b[i]);\n}\n\n// copy c into b, without specifying sourceStart\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = c.copy(b, 0);\n// console.log('copied %d bytes from c into b w/o sourceStart', copied);\nassert.strictEqual(c.length, copied);\nfor (var i = 0; i < c.length; i++) {\n  assert.strictEqual(c[i], b[i]);\n}\n\n// copy longer buffer b to shorter c without targetStart\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = b.copy(c);\n// console.log('copied %d bytes from b into c w/o targetStart', copied);\nassert.strictEqual(c.length, copied);\nfor (var i = 0; i < c.length; i++) {\n  assert.strictEqual(b[i], c[i]);\n}\n\n// copy starting near end of b to c\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = b.copy(c, 0, b.length - Math.floor(c.length / 2));\n// console.log('copied %d bytes from end of b into beginning of c', copied);\nassert.strictEqual(Math.floor(c.length / 2), copied);\nfor (var i = 0; i < Math.floor(c.length / 2); i++) {\n  assert.strictEqual(b[b.length - Math.floor(c.length / 2) + i], c[i]);\n}\nfor (var i = Math.floor(c.length / 2) + 1; i < c.length; i++) {\n  assert.strictEqual(c[c.length - 1], c[i]);\n}\n\n// try to copy 513 bytes, and check we don't overrun c\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = b.copy(c, 0, 0, 513);\n// console.log('copied %d bytes from b trying to overrun c', copied);\nassert.strictEqual(c.length, copied);\nfor (var i = 0; i < c.length; i++) {\n  assert.strictEqual(b[i], c[i]);\n}\n\n// copy 768 bytes from b into b\nb.fill(++cntr);\nb.fill(++cntr, 256);\nvar copied = b.copy(b, 0, 256, 1024);\n// console.log('copied %d bytes from b into b', copied);\nassert.strictEqual(768, copied);\nfor (var i = 0; i < b.length; i++) {\n  assert.strictEqual(cntr, b[i]);\n}\n\n// copy string longer than buffer length (failure will segfault)\nvar bb = new Buffer(10);\nbb.fill('hello crazy world');\n\n\nvar caught_error = null;\n\n// try to copy from before the beginning of b\ncaught_error = null;\ntry {\n  var copied = b.copy(c, 0, 100, 10);\n} catch (err) {\n  caught_error = err;\n}\n\n// copy throws at negative sourceStart\nassert.throws(function() {\n  Buffer(5).copy(Buffer(5), 0, -1);\n}, RangeError);\n\n// check sourceEnd resets to targetEnd if former is greater than the latter\nb.fill(++cntr);\nc.fill(++cntr);\nvar copied = b.copy(c, 0, 0, 1025);\n// console.log('copied %d bytes from b into c', copied);\nfor (var i = 0; i < c.length; i++) {\n  assert.strictEqual(b[i], c[i]);\n}\n\n// throw with negative sourceEnd\n// console.log('test copy at negative sourceEnd');\nassert.throws(function() {\n  b.copy(c, 0, 0, -1);\n}, RangeError);\n\n// when sourceStart is greater than sourceEnd, zero copied\nassert.equal(b.copy(c, 0, 100, 10), 0);\n\n// when targetStart > targetLength, zero copied\nassert.equal(b.copy(c, 512, 0, 10), 0);\n\nvar caught_error;\n\n// invalid encoding for Buffer.toString\ncaught_error = null;\ntry {\n  var copied = b.toString('invalid');\n} catch (err) {\n  caught_error = err;\n}\nassert.strictEqual('Unknown encoding: invalid', caught_error.message);\n\n// invalid encoding for Buffer.write\ncaught_error = null;\ntry {\n  var copied = b.write('test string', 0, 5, 'invalid');\n} catch (err) {\n  caught_error = err;\n}\nassert.strictEqual('Unknown encoding: invalid', caught_error.message);\n\n// try to create 0-length buffers\nnew Buffer('');\nnew Buffer('', 'ascii');\nnew Buffer('', 'binary');\nnew Buffer(0);\n\n// try to write a 0-length string beyond the end of b\nassert.throws(function() {\n  b.write('', 2048);\n}, RangeError);\n\n// throw when writing to negative offset\nassert.throws(function() {\n  b.write('a', -1);\n}, RangeError);\n\n// throw when writing past bounds from the pool\nassert.throws(function() {\n  b.write('a', 2048);\n}, RangeError);\n\n// throw when writing to negative offset\nassert.throws(function() {\n  b.write('a', -1);\n}, RangeError);\n\n// try to copy 0 bytes worth of data into an empty buffer\nb.copy(new Buffer(0), 0, 0, 0);\n\n// try to copy 0 bytes past the end of the target buffer\nb.copy(new Buffer(0), 1, 1, 1);\nb.copy(new Buffer(1), 1, 1, 1);\n\n// try to copy 0 bytes from past the end of the source buffer\nb.copy(new Buffer(1), 0, 2048, 2048);\n\n// try to toString() a 0-length slice of a buffer, both within and without the\n// valid buffer range\nassert.equal(new Buffer('abc').toString('ascii', 0, 0), '');\nassert.equal(new Buffer('abc').toString('ascii', -100, -100), '');\nassert.equal(new Buffer('abc').toString('ascii', 100, 100), '');\n\n// try toString() with a object as a encoding\nassert.equal(new Buffer('abc').toString({toString: function() {\n  return 'ascii';\n}}), 'abc');\n\n// testing for smart defaults and ability to pass string values as offset\nvar writeTest = new Buffer('abcdes');\nwriteTest.write('n', 'ascii');\nwriteTest.write('o', 'ascii', '1');\nwriteTest.write('d', '2', 'ascii');\nwriteTest.write('e', 3, 'ascii');\nwriteTest.write('j', 'ascii', 4);\nassert.equal(writeTest.toString(), 'nodejs');\n\n// ASCII slice test\n\nvar asciiString = 'hello world';\nvar offset = 100;\n\nfor (var i = 0; i < asciiString.length; i++) {\n  b[i] = asciiString.charCodeAt(i);\n}\nvar asciiSlice = b.toString('ascii', 0, asciiString.length);\nassert.equal(asciiString, asciiSlice);\n\nvar written = b.write(asciiString, offset, 'ascii');\nassert.equal(asciiString.length, written);\nvar asciiSlice = b.toString('ascii', offset, offset + asciiString.length);\nassert.equal(asciiString, asciiSlice);\n\nvar sliceA = b.slice(offset, offset + asciiString.length);\nvar sliceB = b.slice(offset, offset + asciiString.length);\nfor (var i = 0; i < asciiString.length; i++) {\n  assert.equal(sliceA[i], sliceB[i]);\n}\n\n// UTF-8 slice test\n\nvar utf8String = '¡hέlló wôrld!';\nvar offset = 100;\n\nb.write(utf8String, 0, Buffer.byteLength(utf8String), 'utf8');\nvar utf8Slice = b.toString('utf8', 0, Buffer.byteLength(utf8String));\nassert.equal(utf8String, utf8Slice);\n\nvar written = b.write(utf8String, offset, 'utf8');\nassert.equal(Buffer.byteLength(utf8String), written);\nutf8Slice = b.toString('utf8', offset, offset + Buffer.byteLength(utf8String));\nassert.equal(utf8String, utf8Slice);\n\nvar sliceA = b.slice(offset, offset + Buffer.byteLength(utf8String));\nvar sliceB = b.slice(offset, offset + Buffer.byteLength(utf8String));\nfor (var i = 0; i < Buffer.byteLength(utf8String); i++) {\n  assert.equal(sliceA[i], sliceB[i]);\n}\n\nvar slice = b.slice(100, 150);\nassert.equal(50, slice.length);\nfor (var i = 0; i < 50; i++) {\n  assert.equal(b[100 + i], slice[i]);\n}\n\n\n// make sure only top level parent propagates from allocPool\nvar b = new Buffer(5);\nvar c = b.slice(0, 4);\nvar d = c.slice(0, 2);\nassert.equal(b.parent, c.parent);\nassert.equal(b.parent, d.parent);\n\n// also from a non-pooled instance\nvar b = new SlowBuffer(5);\nvar c = b.slice(0, 4);\nvar d = c.slice(0, 2);\n\n\n// Bug regression test\nvar testValue = '\\u00F6\\u65E5\\u672C\\u8A9E'; // ö日本語\nvar buffer = new Buffer(32);\nvar size = buffer.write(testValue, 0, 'utf8');\n// console.log('bytes written to buffer: ' + size);\nvar slice = buffer.toString('utf8', 0, size);\nassert.equal(slice, testValue);\n\n\n// Test triple  slice\nvar a = new Buffer(8);\nfor (var i = 0; i < 8; i++) a[i] = i;\nvar b = a.slice(4, 8);\nassert.equal(4, b[0]);\nassert.equal(5, b[1]);\nassert.equal(6, b[2]);\nassert.equal(7, b[3]);\nvar c = b.slice(2, 4);\nassert.equal(6, c[0]);\nassert.equal(7, c[1]);\n\n\nvar d = new Buffer([23, 42, 255]);\nassert.equal(d.length, 3);\nassert.equal(d[0], 23);\nassert.equal(d[1], 42);\nassert.equal(d[2], 255);\nassert.deepEqual(d, new Buffer(d));\n\nvar e = new Buffer('über');\n// console.error('uber: \\'%s\\'', e.toString());\nassert.deepEqual(e, new Buffer([195, 188, 98, 101, 114]));\n\nvar f = new Buffer('über', 'ascii');\n// console.error('f.length: %d     (should be 4)', f.length);\nassert.deepEqual(f, new Buffer([252, 98, 101, 114]));\n\n['ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(encoding) {\n  var f = new Buffer('über', encoding);\n//   console.error('f.length: %d     (should be 8)', f.length);\n  assert.deepEqual(f, new Buffer([252, 0, 98, 0, 101, 0, 114, 0]));\n\n  var f = new Buffer('привет', encoding);\n//   console.error('f.length: %d     (should be 12)', f.length);\n  assert.deepEqual(f, new Buffer([63, 4, 64, 4, 56, 4, 50, 4, 53, 4, 66, 4]));\n  assert.equal(f.toString(encoding), 'привет');\n\n  var f = new Buffer([0, 0, 0, 0, 0]);\n  assert.equal(f.length, 5);\n  var size = f.write('あいうえお', encoding);\n//   console.error('bytes written to buffer: %d     (should be 4)', size);\n  assert.equal(size, 4);\n  assert.deepEqual(f, new Buffer([0x42, 0x30, 0x44, 0x30, 0x00]));\n});\n\nvar f = new Buffer('\\uD83D\\uDC4D', 'utf-16le'); // THUMBS UP SIGN (U+1F44D)\nassert.equal(f.length, 4);\nassert.deepEqual(f, new Buffer('3DD84DDC', 'hex'));\n\n\nvar arrayIsh = {0: 0, 1: 1, 2: 2, 3: 3, length: 4};\nvar g = new Buffer(arrayIsh);\nassert.deepEqual(g, new Buffer([0, 1, 2, 3]));\nvar strArrayIsh = {0: '0', 1: '1', 2: '2', 3: '3', length: 4};\ng = new Buffer(strArrayIsh);\nassert.deepEqual(g, new Buffer([0, 1, 2, 3]));\n\n\n//\n// Test toString('base64')\n//\nassert.equal('TWFu', (new Buffer('Man')).toString('base64'));\n\n// test that regular and URL-safe base64 both work\nvar expected = [0xff, 0xff, 0xbe, 0xff, 0xef, 0xbf, 0xfb, 0xef, 0xff];\nassert.deepEqual(Buffer('//++/++/++//', 'base64'), Buffer(expected));\nassert.deepEqual(Buffer('__--_--_--__', 'base64'), Buffer(expected));\n\n// big example\nvar quote = 'Man is distinguished, not only by his reason, but by this ' +\n            'singular passion from other animals, which is a lust ' +\n            'of the mind, that by a perseverance of delight in the continued ' +\n            'and indefatigable generation of knowledge, exceeds the short ' +\n            'vehemence of any carnal pleasure.';\nvar expected = 'TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24s' +\n               'IGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltY' +\n               'WxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhlIG1pbmQsIHRoYXQgYnkgYSBwZX' +\n               'JzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGludWVkIGFuZCBpbmR' +\n               'lZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo' +\n               'ZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=';\nassert.equal(expected, (new Buffer(quote)).toString('base64'));\n\n\nb = new Buffer(1024);\nvar bytesWritten = b.write(expected, 0, 'base64');\nassert.equal(quote.length, bytesWritten);\nassert.equal(quote, b.toString('ascii', 0, quote.length));\n\n// check that the base64 decoder ignores whitespace\nvar expectedWhite = expected.slice(0, 60) + ' \\n' +\n                    expected.slice(60, 120) + ' \\n' +\n                    expected.slice(120, 180) + ' \\n' +\n                    expected.slice(180, 240) + ' \\n' +\n                    expected.slice(240, 300) + '\\n' +\n                    expected.slice(300, 360) + '\\n';\nb = new Buffer(1024);\nbytesWritten = b.write(expectedWhite, 0, 'base64');\nassert.equal(quote.length, bytesWritten);\nassert.equal(quote, b.toString('ascii', 0, quote.length));\n\n// check that the base64 decoder on the constructor works\n// even in the presence of whitespace.\nb = new Buffer(expectedWhite, 'base64');\nassert.equal(quote.length, b.length);\nassert.equal(quote, b.toString('ascii', 0, quote.length));\n\n// check that the base64 decoder ignores illegal chars\nvar expectedIllegal = expected.slice(0, 60) + ' \\x80' +\n                      expected.slice(60, 120) + ' \\xff' +\n                      expected.slice(120, 180) + ' \\x00' +\n                      expected.slice(180, 240) + ' \\x98' +\n                      expected.slice(240, 300) + '\\x03' +\n                      expected.slice(300, 360);\nb = new Buffer(expectedIllegal, 'base64');\nassert.equal(quote.length, b.length);\nassert.equal(quote, b.toString('ascii', 0, quote.length));\n\n\nassert.equal(new Buffer('', 'base64').toString(), '');\nassert.equal(new Buffer('K', 'base64').toString(), '');\n\n// multiple-of-4 with padding\nassert.equal(new Buffer('Kg==', 'base64').toString(), '*');\nassert.equal(new Buffer('Kio=', 'base64').toString(), '**');\nassert.equal(new Buffer('Kioq', 'base64').toString(), '***');\nassert.equal(new Buffer('KioqKg==', 'base64').toString(), '****');\nassert.equal(new Buffer('KioqKio=', 'base64').toString(), '*****');\nassert.equal(new Buffer('KioqKioq', 'base64').toString(), '******');\nassert.equal(new Buffer('KioqKioqKg==', 'base64').toString(), '*******');\nassert.equal(new Buffer('KioqKioqKio=', 'base64').toString(), '********');\nassert.equal(new Buffer('KioqKioqKioq', 'base64').toString(), '*********');\nassert.equal(new Buffer('KioqKioqKioqKg==', 'base64').toString(),\n             '**********');\nassert.equal(new Buffer('KioqKioqKioqKio=', 'base64').toString(),\n             '***********');\nassert.equal(new Buffer('KioqKioqKioqKioq', 'base64').toString(),\n             '************');\nassert.equal(new Buffer('KioqKioqKioqKioqKg==', 'base64').toString(),\n             '*************');\nassert.equal(new Buffer('KioqKioqKioqKioqKio=', 'base64').toString(),\n             '**************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioq', 'base64').toString(),\n             '***************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKg==', 'base64').toString(),\n             '****************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKio=', 'base64').toString(),\n             '*****************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKioq', 'base64').toString(),\n             '******************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKioqKg==', 'base64').toString(),\n             '*******************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKioqKio=', 'base64').toString(),\n             '********************');\n\n// no padding, not a multiple of 4\nassert.equal(new Buffer('Kg', 'base64').toString(), '*');\nassert.equal(new Buffer('Kio', 'base64').toString(), '**');\nassert.equal(new Buffer('KioqKg', 'base64').toString(), '****');\nassert.equal(new Buffer('KioqKio', 'base64').toString(), '*****');\nassert.equal(new Buffer('KioqKioqKg', 'base64').toString(), '*******');\nassert.equal(new Buffer('KioqKioqKio', 'base64').toString(), '********');\nassert.equal(new Buffer('KioqKioqKioqKg', 'base64').toString(), '**********');\nassert.equal(new Buffer('KioqKioqKioqKio', 'base64').toString(), '***********');\nassert.equal(new Buffer('KioqKioqKioqKioqKg', 'base64').toString(),\n             '*************');\nassert.equal(new Buffer('KioqKioqKioqKioqKio', 'base64').toString(),\n             '**************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKg', 'base64').toString(),\n             '****************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKio', 'base64').toString(),\n             '*****************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKioqKg', 'base64').toString(),\n             '*******************');\nassert.equal(new Buffer('KioqKioqKioqKioqKioqKioqKio', 'base64').toString(),\n             '********************');\n\n// handle padding graciously, multiple-of-4 or not\nassert.equal(new Buffer('72INjkR5fchcxk9+VgdGPFJDxUBFR5/rMFsghgxADiw==',\n                        'base64').length, 32);\nassert.equal(new Buffer('72INjkR5fchcxk9+VgdGPFJDxUBFR5/rMFsghgxADiw=',\n                        'base64').length, 32);\nassert.equal(new Buffer('72INjkR5fchcxk9+VgdGPFJDxUBFR5/rMFsghgxADiw',\n                        'base64').length, 32);\nassert.equal(new Buffer('w69jACy6BgZmaFvv96HG6MYksWytuZu3T1FvGnulPg==',\n                        'base64').length, 31);\nassert.equal(new Buffer('w69jACy6BgZmaFvv96HG6MYksWytuZu3T1FvGnulPg=',\n                        'base64').length, 31);\nassert.equal(new Buffer('w69jACy6BgZmaFvv96HG6MYksWytuZu3T1FvGnulPg',\n                        'base64').length, 31);\n\n// This string encodes single '.' character in UTF-16\nvar dot = new Buffer('//4uAA==', 'base64');\nassert.equal(dot[0], 0xff);\nassert.equal(dot[1], 0xfe);\nassert.equal(dot[2], 0x2e);\nassert.equal(dot[3], 0x00);\nassert.equal(dot.toString('base64'), '//4uAA==');\n\n// Writing base64 at a position > 0 should not mangle the result.\n//\n// https://github.com/joyent/node/issues/402\nvar segments = ['TWFkbmVzcz8h', 'IFRoaXM=', 'IGlz', 'IG5vZGUuanMh'];\nvar buf = new Buffer(64);\nvar pos = 0;\n\nfor (var i = 0; i < segments.length; ++i) {\n  pos += b.write(segments[i], pos, 'base64');\n}\nassert.equal(b.toString('binary', 0, pos), 'Madness?! This is node.js!');\n\n// Creating buffers larger than pool size.\nvar l = Buffer.poolSize + 5;\nvar s = '';\nfor (i = 0; i < l; i++) {\n  s += 'h';\n}\n\nvar b = new Buffer(s);\n\nfor (i = 0; i < l; i++) {\n  assert.equal('h'.charCodeAt(0), b[i]);\n}\n\nvar sb = b.toString();\nassert.equal(sb.length, s.length);\nassert.equal(sb, s);\n\n\n// Single argument slice\nb = new Buffer('abcde');\nassert.equal('bcde', b.slice(1).toString());\n\n// slice(0,0).length === 0\nassert.equal(0, Buffer('hello').slice(0, 0).length);\n\n// test hex toString\n// console.log('Create hex string from buffer');\nvar hexb = new Buffer(256);\nfor (var i = 0; i < 256; i++) {\n  hexb[i] = i;\n}\nvar hexStr = hexb.toString('hex');\nassert.equal(hexStr,\n             '000102030405060708090a0b0c0d0e0f' +\n             '101112131415161718191a1b1c1d1e1f' +\n             '202122232425262728292a2b2c2d2e2f' +\n             '303132333435363738393a3b3c3d3e3f' +\n             '404142434445464748494a4b4c4d4e4f' +\n             '505152535455565758595a5b5c5d5e5f' +\n             '606162636465666768696a6b6c6d6e6f' +\n             '707172737475767778797a7b7c7d7e7f' +\n             '808182838485868788898a8b8c8d8e8f' +\n             '909192939495969798999a9b9c9d9e9f' +\n             'a0a1a2a3a4a5a6a7a8a9aaabacadaeaf' +\n             'b0b1b2b3b4b5b6b7b8b9babbbcbdbebf' +\n             'c0c1c2c3c4c5c6c7c8c9cacbcccdcecf' +\n             'd0d1d2d3d4d5d6d7d8d9dadbdcdddedf' +\n             'e0e1e2e3e4e5e6e7e8e9eaebecedeeef' +\n             'f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff');\n\n// console.log('Create buffer from hex string');\nvar hexb2 = new Buffer(hexStr, 'hex');\nfor (var i = 0; i < 256; i++) {\n  assert.equal(hexb2[i], hexb[i]);\n}\n\n// test an invalid slice end.\n// console.log('Try to slice off the end of the buffer');\nvar b = new Buffer([1, 2, 3, 4, 5]);\nvar b2 = b.toString('hex', 1, 10000);\nvar b3 = b.toString('hex', 1, 5);\nvar b4 = b.toString('hex', 1);\nassert.equal(b2, b3);\nassert.equal(b2, b4);\n\n\nfunction buildBuffer(data) {\n  if (Array.isArray(data)) {\n    var buffer = new Buffer(data.length);\n    data.forEach(function(v, k) {\n      buffer[k] = v;\n    });\n    return buffer;\n  }\n  return null;\n}\n\nvar x = buildBuffer([0x81, 0xa3, 0x66, 0x6f, 0x6f, 0xa3, 0x62, 0x61, 0x72]);\n\n// console.log(x.inspect());\nassert.equal('<Buffer 81 a3 66 6f 6f a3 62 61 72>', x.inspect());\n\nvar z = x.slice(4);\n// console.log(z.inspect());\n// console.log(z.length);\nassert.equal(5, z.length);\nassert.equal(0x6f, z[0]);\nassert.equal(0xa3, z[1]);\nassert.equal(0x62, z[2]);\nassert.equal(0x61, z[3]);\nassert.equal(0x72, z[4]);\n\nvar z = x.slice(0);\n// console.log(z.inspect());\n// console.log(z.length);\nassert.equal(z.length, x.length);\n\nvar z = x.slice(0, 4);\n// console.log(z.inspect());\n// console.log(z.length);\nassert.equal(4, z.length);\nassert.equal(0x81, z[0]);\nassert.equal(0xa3, z[1]);\n\nvar z = x.slice(0, 9);\n// console.log(z.inspect());\n// console.log(z.length);\nassert.equal(9, z.length);\n\nvar z = x.slice(1, 4);\n// console.log(z.inspect());\n// console.log(z.length);\nassert.equal(3, z.length);\nassert.equal(0xa3, z[0]);\n\nvar z = x.slice(2, 4);\n// console.log(z.inspect());\n// console.log(z.length);\nassert.equal(2, z.length);\nassert.equal(0x66, z[0]);\nassert.equal(0x6f, z[1]);\n\nassert.equal(0, Buffer('hello').slice(0, 0).length);\n\n['ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(encoding) {\n  var b = new Buffer(10);\n  b.write('あいうえお', encoding);\n  assert.equal(b.toString(encoding), 'あいうえお');\n});\n\n// Binary encoding should write only one byte per character.\nvar b = Buffer([0xde, 0xad, 0xbe, 0xef]);\nvar s = String.fromCharCode(0xffff);\nb.write(s, 0, 'binary');\nassert.equal(0xff, b[0]);\nassert.equal(0xad, b[1]);\nassert.equal(0xbe, b[2]);\nassert.equal(0xef, b[3]);\ns = String.fromCharCode(0xaaee);\nb.write(s, 0, 'binary');\nassert.equal(0xee, b[0]);\nassert.equal(0xad, b[1]);\nassert.equal(0xbe, b[2]);\nassert.equal(0xef, b[3]);\n\n// #1210 Test UTF-8 string includes null character\nvar buf = new Buffer('\\0');\nassert.equal(buf.length, 1);\nbuf = new Buffer('\\0\\0');\nassert.equal(buf.length, 2);\n\nbuf = new Buffer(2);\nvar written = buf.write(''); // 0byte\nassert.equal(written, 0);\nwritten = buf.write('\\0'); // 1byte (v8 adds null terminator)\nassert.equal(written, 1);\nwritten = buf.write('a\\0'); // 1byte * 2\nassert.equal(written, 2);\nwritten = buf.write('あ'); // 3bytes\nassert.equal(written, 0);\nwritten = buf.write('\\0あ'); // 1byte + 3bytes\nassert.equal(written, 1);\nwritten = buf.write('\\0\\0あ'); // 1byte * 2 + 3bytes\nassert.equal(written, 2);\n\nbuf = new Buffer(10);\nwritten = buf.write('あいう'); // 3bytes * 3 (v8 adds null terminator)\nassert.equal(written, 9);\nwritten = buf.write('あいう\\0'); // 3bytes * 3 + 1byte\nassert.equal(written, 10);\n\n// #243 Test write() with maxLength\nvar buf = new Buffer(4);\nbuf.fill(0xFF);\nvar written = buf.write('abcd', 1, 2, 'utf8');\n// console.log(buf);\nassert.equal(written, 2);\nassert.equal(buf[0], 0xFF);\nassert.equal(buf[1], 0x61);\nassert.equal(buf[2], 0x62);\nassert.equal(buf[3], 0xFF);\n\nbuf.fill(0xFF);\nwritten = buf.write('abcd', 1, 4);\n// console.log(buf);\nassert.equal(written, 3);\nassert.equal(buf[0], 0xFF);\nassert.equal(buf[1], 0x61);\nassert.equal(buf[2], 0x62);\nassert.equal(buf[3], 0x63);\n\nbuf.fill(0xFF);\nwritten = buf.write('abcd', 'utf8', 1, 2);  // legacy style\n// console.log(buf);\nassert.equal(written, 2);\nassert.equal(buf[0], 0xFF);\nassert.equal(buf[1], 0x61);\nassert.equal(buf[2], 0x62);\nassert.equal(buf[3], 0xFF);\n\nbuf.fill(0xFF);\nwritten = buf.write('abcdef', 1, 2, 'hex');\n// console.log(buf);\nassert.equal(written, 2);\nassert.equal(buf[0], 0xFF);\nassert.equal(buf[1], 0xAB);\nassert.equal(buf[2], 0xCD);\nassert.equal(buf[3], 0xFF);\n\n['ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(encoding) {\n  buf.fill(0xFF);\n  written = buf.write('abcd', 0, 2, encoding);\n//   console.log(buf);\n  assert.equal(written, 2);\n  assert.equal(buf[0], 0x61);\n  assert.equal(buf[1], 0x00);\n  assert.equal(buf[2], 0xFF);\n  assert.equal(buf[3], 0xFF);\n});\n\n// test offset returns are correct\nvar b = new Buffer(16);\nassert.equal(4, b.writeUInt32LE(0, 0));\nassert.equal(6, b.writeUInt16LE(0, 4));\nassert.equal(7, b.writeUInt8(0, 6));\nassert.equal(8, b.writeInt8(0, 7));\nassert.equal(16, b.writeDoubleLE(0, 8));\n\n// test unmatched surrogates not producing invalid utf8 output\n// ef bf bd = utf-8 representation of unicode replacement character\n// see https://codereview.chromium.org/121173009/\nbuf = new Buffer('ab\\ud800cd', 'utf8');\nassert.equal(buf[0], 0x61);\nassert.equal(buf[1], 0x62);\nassert.equal(buf[2], 0xef);\nassert.equal(buf[3], 0xbf);\nassert.equal(buf[4], 0xbd);\nassert.equal(buf[5], 0x63);\nassert.equal(buf[6], 0x64);\n\n// test for buffer overrun\nbuf = new Buffer([0, 0, 0, 0, 0]); // length: 5\nvar sub = buf.slice(0, 4);         // length: 4\nwritten = sub.write('12345', 'binary');\nassert.equal(written, 4);\nassert.equal(buf[4], 0);\n\n// Check for fractional length args, junk length args, etc.\n// https://github.com/joyent/node/issues/1758\n\n// Call .fill() first, stops valgrind warning about uninitialized memory reads.\nBuffer(3.3).fill().toString(); // throws bad argument error in commit 43cb4ec\nassert.equal(Buffer(-1).length, 0);\nassert.equal(Buffer(NaN).length, 0);\nassert.equal(Buffer(3.3).length, 3);\nassert.equal(Buffer({length: 3.3}).length, 3);\nassert.equal(Buffer({length: 'BAM'}).length, 0);\n\n// Make sure that strings are not coerced to numbers.\nassert.equal(Buffer('99').length, 2);\nassert.equal(Buffer('13.37').length, 5);\n\n// Ensure that the length argument is respected.\n'ascii utf8 hex base64 binary'.split(' ').forEach(function(enc) {\n  assert.equal(Buffer(1).write('aaaaaa', 0, 1, enc), 1);\n});\n\n// Regression test, guard against buffer overrun in the base64 decoder.\nvar a = Buffer(3);\nvar b = Buffer('xxx');\na.write('aaaaaaaa', 'base64');\nassert.equal(b.toString(), 'xxx');\n\n// issue GH-3416\nBuffer(Buffer(0), 0, 0);\n\n[ 'hex',\n  'utf8',\n  'utf-8',\n  'ascii',\n  'binary',\n  'base64',\n  'ucs2',\n  'ucs-2',\n  'utf16le',\n  'utf-16le' ].forEach(function(enc) {\n    assert.equal(Buffer.isEncoding(enc), true);\n  });\n\n[ 'utf9',\n  'utf-7',\n  'Unicode-FTW',\n  'new gnu gun'  ].forEach(function(enc) {\n    assert.equal(Buffer.isEncoding(enc), false);\n  });\n\n\n// GH-5110\n(function() {\n  var buffer = new Buffer('test'),\n      string = JSON.stringify(buffer);\n\n  assert.equal(string, '{\"type\":\"Buffer\",\"data\":[116,101,115,116]}');\n\n  assert.deepEqual(buffer, JSON.parse(string, function(key, value) {\n    return value && value.type === 'Buffer'\n      ? new Buffer(value.data)\n      : value;\n  }));\n})();\n\n// issue GH-7849\n(function() {\n  var buf = new Buffer('test');\n  var json = JSON.stringify(buf);\n  var obj = JSON.parse(json);\n  var copy = new Buffer(obj);\n\n  assert(buf.equals(copy));\n})();\n\n// issue GH-4331\nassert.throws(function() {\n  new Buffer(0xFFFFFFFF);\n}, RangeError);\nassert.throws(function() {\n  new Buffer(0xFFFFFFFFF);\n}, RangeError);\n\n\n// attempt to overflow buffers, similar to previous bug in array buffers\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.readFloatLE(0xffffffff);\n}, RangeError);\n\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.writeFloatLE(0.0, 0xffffffff);\n}, RangeError);\n\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.readFloatLE(0xffffffff);\n}, RangeError);\n\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.writeFloatLE(0.0, 0xffffffff);\n}, RangeError);\n\n\n// ensure negative values can't get past offset\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.readFloatLE(-1);\n}, RangeError);\n\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.writeFloatLE(0.0, -1);\n}, RangeError);\n\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.readFloatLE(-1);\n}, RangeError);\n\nassert.throws(function() {\n  var buf = new Buffer(8);\n  buf.writeFloatLE(0.0, -1);\n}, RangeError);\n\n// offset checks\nvar buf = new Buffer(0);\n\nassert.throws(function() { buf.readUInt8(0); }, RangeError);\nassert.throws(function() { buf.readInt8(0); }, RangeError);\n\nvar buf = new Buffer([0xFF]);\n\nassert.equal(buf.readUInt8(0), 255);\nassert.equal(buf.readInt8(0), -1);\n\n[16, 32].forEach(function(bits) {\n  var buf = new Buffer(bits / 8 - 1);\n\n  assert.throws(function() { buf['readUInt' + bits + 'BE'](0); },\n                RangeError,\n                'readUInt' + bits + 'BE');\n\n  assert.throws(function() { buf['readUInt' + bits + 'LE'](0); },\n                RangeError,\n                'readUInt' + bits + 'LE');\n\n  assert.throws(function() { buf['readInt' + bits + 'BE'](0); },\n                RangeError,\n                'readInt' + bits + 'BE()');\n\n  assert.throws(function() { buf['readInt' + bits + 'LE'](0); },\n                RangeError,\n                'readInt' + bits + 'LE()');\n});\n\n[16, 32].forEach(function(bits) {\n  var buf = new Buffer([0xFF, 0xFF, 0xFF, 0xFF]);\n\n  assert.equal(buf['readUInt' + bits + 'BE'](0),\n                (0xFFFFFFFF >>> (32 - bits)));\n\n  assert.equal(buf['readUInt' + bits + 'LE'](0),\n                (0xFFFFFFFF >>> (32 - bits)));\n\n  assert.equal(buf['readInt' + bits + 'BE'](0),\n                (0xFFFFFFFF >> (32 - bits)));\n\n  assert.equal(buf['readInt' + bits + 'LE'](0),\n                (0xFFFFFFFF >> (32 - bits)));\n});\n\n// test for common read(U)IntLE/BE\n(function() {\n  var buf = new Buffer([0x01, 0x02, 0x03, 0x04, 0x05, 0x06]);\n\n  assert.equal(buf.readUIntLE(0, 1), 0x01);\n  assert.equal(buf.readUIntBE(0, 1), 0x01);\n  assert.equal(buf.readUIntLE(0, 3), 0x030201);\n  assert.equal(buf.readUIntBE(0, 3), 0x010203);\n  assert.equal(buf.readUIntLE(0, 5), 0x0504030201);\n  assert.equal(buf.readUIntBE(0, 5), 0x0102030405);\n  assert.equal(buf.readUIntLE(0, 6), 0x060504030201);\n  assert.equal(buf.readUIntBE(0, 6), 0x010203040506);\n  assert.equal(buf.readIntLE(0, 1), 0x01);\n  assert.equal(buf.readIntBE(0, 1), 0x01);\n  assert.equal(buf.readIntLE(0, 3), 0x030201);\n  assert.equal(buf.readIntBE(0, 3), 0x010203);\n  assert.equal(buf.readIntLE(0, 5), 0x0504030201);\n  assert.equal(buf.readIntBE(0, 5), 0x0102030405);\n  assert.equal(buf.readIntLE(0, 6), 0x060504030201);\n  assert.equal(buf.readIntBE(0, 6), 0x010203040506);\n})();\n\n// test for common write(U)IntLE/BE\n(function() {\n  var buf = new Buffer(3);\n  buf.writeUIntLE(0x123456, 0, 3);\n  assert.deepEqual(buf.toJSON().data, [0x56, 0x34, 0x12]);\n  assert.equal(buf.readUIntLE(0, 3), 0x123456);\n\n  buf = new Buffer(3);\n  buf.writeUIntBE(0x123456, 0, 3);\n  assert.deepEqual(buf.toJSON().data, [0x12, 0x34, 0x56]);\n  assert.equal(buf.readUIntBE(0, 3), 0x123456);\n\n  buf = new Buffer(3);\n  buf.writeIntLE(0x123456, 0, 3);\n  assert.deepEqual(buf.toJSON().data, [0x56, 0x34, 0x12]);\n  assert.equal(buf.readIntLE(0, 3), 0x123456);\n\n  buf = new Buffer(3);\n  buf.writeIntBE(0x123456, 0, 3);\n  assert.deepEqual(buf.toJSON().data, [0x12, 0x34, 0x56]);\n  assert.equal(buf.readIntBE(0, 3), 0x123456);\n\n  buf = new Buffer(3);\n  buf.writeIntLE(-0x123456, 0, 3);\n  assert.deepEqual(buf.toJSON().data, [0xaa, 0xcb, 0xed]);\n  assert.equal(buf.readIntLE(0, 3), -0x123456);\n\n  buf = new Buffer(3);\n  buf.writeIntBE(-0x123456, 0, 3);\n  assert.deepEqual(buf.toJSON().data, [0xed, 0xcb, 0xaa]);\n  assert.equal(buf.readIntBE(0, 3), -0x123456);\n\n  buf = new Buffer(5);\n  buf.writeUIntLE(0x1234567890, 0, 5);\n  assert.deepEqual(buf.toJSON().data, [0x90, 0x78, 0x56, 0x34, 0x12]);\n  assert.equal(buf.readUIntLE(0, 5), 0x1234567890);\n\n  buf = new Buffer(5);\n  buf.writeUIntBE(0x1234567890, 0, 5);\n  assert.deepEqual(buf.toJSON().data, [0x12, 0x34, 0x56, 0x78, 0x90]);\n  assert.equal(buf.readUIntBE(0, 5), 0x1234567890);\n\n  buf = new Buffer(5);\n  buf.writeIntLE(0x1234567890, 0, 5);\n  assert.deepEqual(buf.toJSON().data, [0x90, 0x78, 0x56, 0x34, 0x12]);\n  assert.equal(buf.readIntLE(0, 5), 0x1234567890);\n\n  buf = new Buffer(5);\n  buf.writeIntBE(0x1234567890, 0, 5);\n  assert.deepEqual(buf.toJSON().data, [0x12, 0x34, 0x56, 0x78, 0x90]);\n  assert.equal(buf.readIntBE(0, 5), 0x1234567890);\n\n  buf = new Buffer(5);\n  buf.writeIntLE(-0x1234567890, 0, 5);\n  assert.deepEqual(buf.toJSON().data, [0x70, 0x87, 0xa9, 0xcb, 0xed]);\n  assert.equal(buf.readIntLE(0, 5), -0x1234567890);\n\n  buf = new Buffer(5);\n  buf.writeIntBE(-0x1234567890, 0, 5);\n  assert.deepEqual(buf.toJSON().data, [0xed, 0xcb, 0xa9, 0x87, 0x70]);\n  assert.equal(buf.readIntBE(0, 5), -0x1234567890);\n})();\n\n// test Buffer slice\n(function() {\n  var buf = new Buffer('0123456789');\n  assert.equal(buf.slice(-10, 10), '0123456789');\n  assert.equal(buf.slice(-20, 10), '0123456789');\n  assert.equal(buf.slice(-20, -10), '');\n  assert.equal(buf.slice(0, -1), '012345678');\n  assert.equal(buf.slice(2, -2), '234567');\n  assert.equal(buf.slice(0, 65536), '0123456789');\n  assert.equal(buf.slice(65536, 0), '');\n  for (var i = 0, s = buf.toString(); i < buf.length; ++i) {\n    assert.equal(buf.slice(-i), s.slice(-i));\n    assert.equal(buf.slice(0, -i), s.slice(0, -i));\n  }\n  // try to slice a zero length Buffer\n  // see https://github.com/joyent/node/issues/5881\n  SlowBuffer(0).slice(0, 1);\n})();\n\n// Regression test for #5482: should throw but not assert in C++ land.\nassert.throws(function() {\n  Buffer('', 'buffer');\n}, TypeError);\n\n// Regression test for #6111. Constructing a buffer from another buffer\n// should a) work, and b) not corrupt the source buffer.\n(function() {\n  var a = [0];\n  for (var i = 0; i < 7; ++i) a = a.concat(a);\n  a = a.map(function(_, i) { return i; });\n  var b = Buffer(a);\n  var c = Buffer(b);\n  assert.equal(b.length, a.length);\n  assert.equal(c.length, a.length);\n  for (var i = 0, k = a.length; i < k; ++i) {\n    assert.equal(a[i], i);\n    assert.equal(b[i], i);\n    assert.equal(c[i], i);\n  }\n})();\n\n\nassert.throws(function() {\n  new Buffer((-1 >>> 0) + 1);\n}, RangeError);\n\nassert.throws(function() {\n  new SlowBuffer((-1 >>> 0) + 1);\n}, RangeError);\n\nif (common.hasCrypto) {\n  // Test truncation after decode\n  // var crypto = require('crypto');\n\n  var b1 = new Buffer('YW55=======', 'base64');\n  var b2 = new Buffer('YW55', 'base64');\n\n  assert.equal(\n    1 /*crypto.createHash('sha1').update(b1).digest('hex')*/,\n    1 /*crypto.createHash('sha1').update(b2).digest('hex')*/\n  );\n} else {\n//   console.log('1..0 # Skipped: missing crypto');\n}\n\n// Test Compare\nvar b = new Buffer(1).fill('a');\nvar c = new Buffer(1).fill('c');\nvar d = new Buffer(2).fill('aa');\n\nassert.equal(b.compare(c), -1);\nassert.equal(c.compare(d), 1);\nassert.equal(d.compare(b), 1);\nassert.equal(b.compare(d), -1);\nassert.equal(b.compare(b), 0);\n\nassert.equal(Buffer.compare(b, c), -1);\nassert.equal(Buffer.compare(c, d), 1);\nassert.equal(Buffer.compare(d, b), 1);\nassert.equal(Buffer.compare(b, d), -1);\nassert.equal(Buffer.compare(c, c), 0);\n\n\nassert.throws(function() {\n  var b = new Buffer(1);\n  Buffer.compare(b, 'abc');\n});\n\nassert.throws(function() {\n  var b = new Buffer(1);\n  Buffer.compare('abc', b);\n});\n\nassert.throws(function() {\n  var b = new Buffer(1);\n  b.compare('abc');\n});\n\n// Test Equals\nvar b = new Buffer(5).fill('abcdf');\nvar c = new Buffer(5).fill('abcdf');\nvar d = new Buffer(5).fill('abcde');\nvar e = new Buffer(6).fill('abcdef');\n\nassert.ok(b.equals(c));\nassert.ok(!c.equals(d));\nassert.ok(!d.equals(e));\nassert.ok(d.equals(d));\n\nassert.throws(function() {\n  var b = new Buffer(1);\n  b.equals('abc');\n});\n\n// Regression test for https://github.com/nodejs/io.js/issues/649.\nassert.throws(function() { Buffer(1422561062959).toString('utf8'); });\n\nvar ps = Buffer.poolSize;\nBuffer.poolSize = 0;\nassert.equal(Buffer(1).parent, undefined);\nBuffer.poolSize = ps;\n\n// Test Buffer.copy() segfault\nassert.throws(function() {\n  Buffer(10).copy();\n});\n\nassert.throws(function() {\n  new Buffer();\n}, /must start with number, buffer, array or string/);\n\nassert.throws(function() {\n  new Buffer(null);\n}, /must start with number, buffer, array or string/);\n\n"]}