{"version":3,"sources":["test-buffer-concat.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAChE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;AACtC,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,IAAI,GAAG,GAAI,CAAE,IAAI,MAAM,CAAC,MAAM,CAAC,CAAE,CAAC;AAClC,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;;AAE3D,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;AAE1C,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AAC9B,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,CAAC;;;AAGtC,MAAM,CAAC,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAM,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,AAAC,CAAC,CAAC;AACjE,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAM,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,AAAC,CAAC,CAAC;;AAEpE,MAAM,CAAC,MAAM,CAAC,YAAW;AACvB,QAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACrB,EAAE,SAAS,CAAC,CAAC","file":"test-buffer-concat-compiled.js","sourcesContent":["'use strict';\nif (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\nvar Buffer = require('../../').Buffer;\nvar common = {};\nvar assert = require('assert');\n\nvar zero = [];\nvar one  = [ new Buffer('asdf') ];\nvar long = [];\nfor (var i = 0; i < 10; i++) long.push(new Buffer('asdf'));\n\nvar flatZero = Buffer.concat(zero);\nvar flatOne = Buffer.concat(one);\nvar flatLong = Buffer.concat(long);\nvar flatLongLen = Buffer.concat(long, 40);\n\nassert(flatZero.length === 0);\nassert(flatOne.toString() === 'asdf');\n// A special case where concat used to return the first item,\n// if the length is one. This check is to make sure that we don't do that.\nassert(flatOne !== one[0]);\nassert(flatLong.toString() === (new Array(10 + 1).join('asdf')));\nassert(flatLongLen.toString() === (new Array(10 + 1).join('asdf')));\n\nassert.throws(function() {\n  Buffer.concat([42]);\n}, TypeError);\n\n// console.log('ok');\n\n"]}