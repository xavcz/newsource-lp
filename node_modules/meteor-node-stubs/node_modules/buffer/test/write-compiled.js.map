{"version":3,"sources":["write.js"],"names":[],"mappings":"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","file":"write-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\nvar isnan = require('is-nan')\n\ntest('buffer.write string should get parsed as number', function (t) {\n  var b = new B(64)\n  b.writeUInt16LE('1003', 0)\n  t.equal(b.readUInt16LE(0), 1003)\n  t.end()\n})\n\ntest('buffer.writeUInt8 a fractional number will get Math.floored', function (t) {\n  // Some extra work is necessary to make this test pass with the Object implementation\n\n  var b = new B(1)\n  b.writeInt8(5.5, 0)\n  t.equal(b[0], 5)\n  t.end()\n})\n\ntest('writeUint8 with a negative number throws', function (t) {\n  var buf = new B(1)\n\n  t.throws(function () {\n    buf.writeUInt8(-3, 0)\n  })\n\n  t.end()\n})\n\ntest('hex of write{Uint,Int}{8,16,32}{LE,BE}', function (t) {\n  t.plan(2 * (2 * 2 * 2 + 2))\n  var hex = [\n    '03', '0300', '0003', '03000000', '00000003',\n    'fd', 'fdff', 'fffd', 'fdffffff', 'fffffffd'\n  ]\n  var reads = [ 3, 3, 3, 3, 3, -3, -3, -3, -3, -3 ]\n  var xs = ['UInt', 'Int']\n  var ys = [8, 16, 32]\n  for (var i = 0; i < xs.length; i++) {\n    var x = xs[i]\n    for (var j = 0; j < ys.length; j++) {\n      var y = ys[j]\n      var endianesses = (y === 8) ? [''] : ['LE', 'BE']\n      for (var k = 0; k < endianesses.length; k++) {\n        var z = endianesses[k]\n\n        var v1 = new B(y / 8)\n        var writefn = 'write' + x + y + z\n        var val = (x === 'Int') ? -3 : 3\n        v1[writefn](val, 0)\n        t.equal(\n          v1.toString('hex'),\n          hex.shift()\n        )\n        var readfn = 'read' + x + y + z\n        t.equal(\n          v1[readfn](0),\n          reads.shift()\n        )\n      }\n    }\n  }\n  t.end()\n})\n\ntest('hex of write{Uint,Int}{8,16,32}{LE,BE} with overflow', function (t) {\n  if (!B.TYPED_ARRAY_SUPPORT) {\n    t.pass('object impl: skipping overflow test')\n    t.end()\n    return\n  }\n\n  t.plan(3 * (2 * 2 * 2 + 2))\n  var hex = [\n    '', '03', '00', '030000', '000000',\n    '', 'fd', 'ff', 'fdffff', 'ffffff'\n  ]\n  var reads = [\n    undefined, 3, 0, NaN, 0,\n    undefined, 253, -256, 16777213, -256\n  ]\n  var xs = ['UInt', 'Int']\n  var ys = [8, 16, 32]\n  for (var i = 0; i < xs.length; i++) {\n    var x = xs[i]\n    for (var j = 0; j < ys.length; j++) {\n      var y = ys[j]\n      var endianesses = (y === 8) ? [''] : ['LE', 'BE']\n      for (var k = 0; k < endianesses.length; k++) {\n        var z = endianesses[k]\n\n        var v1 = new B(y / 8 - 1)\n        var next = new B(4)\n        next.writeUInt32BE(0, 0)\n        var writefn = 'write' + x + y + z\n        var val = (x === 'Int') ? -3 : 3\n        v1[writefn](val, 0, true)\n        t.equal(\n          v1.toString('hex'),\n          hex.shift()\n        )\n        // check that nothing leaked to next buffer.\n        t.equal(next.readUInt32BE(0), 0)\n        // check that no bytes are read from next buffer.\n        next.writeInt32BE(~0, 0)\n        var readfn = 'read' + x + y + z\n        var r = reads.shift()\n        if (isnan(r)) t.pass('equal')\n        else t.equal(v1[readfn](0, true), r)\n      }\n    }\n  }\n  t.end()\n})\ntest('large values do not improperly roll over (ref #80)', function (t) {\n  var nums = [-25589992, -633756690, -898146932]\n  var out = new B(12)\n  out.fill(0)\n  out.writeInt32BE(nums[0], 0)\n  var newNum = out.readInt32BE(0)\n  t.equal(nums[0], newNum)\n  out.writeInt32BE(nums[1], 4)\n  newNum = out.readInt32BE(4)\n  t.equal(nums[1], newNum)\n  out.writeInt32BE(nums[2], 8)\n  newNum = out.readInt32BE(8)\n  t.equal(nums[2], newNum)\n  t.end()\n})\n"]}