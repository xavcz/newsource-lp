{"version":3,"sources":["basic.js"],"names":[],"mappings":"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","file":"basic-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\n\ntest('instanceof Buffer', function (t) {\n  var buf = new B([1, 2])\n  t.ok(buf instanceof B)\n  t.end()\n})\n\ntest('convert to Uint8Array in modern browsers', function (t) {\n  if (B.TYPED_ARRAY_SUPPORT) {\n    var buf = new B([1, 2])\n    var uint8array = new Uint8Array(buf.buffer)\n    t.ok(uint8array instanceof Uint8Array)\n    t.equal(uint8array[0], 1)\n    t.equal(uint8array[1], 2)\n  } else {\n    t.pass('object impl: skipping test')\n  }\n  t.end()\n})\n\ntest('indexes from a string', function (t) {\n  var buf = new B('abc')\n  t.equal(buf[0], 97)\n  t.equal(buf[1], 98)\n  t.equal(buf[2], 99)\n  t.end()\n})\n\ntest('indexes from an array', function (t) {\n  var buf = new B([ 97, 98, 99 ])\n  t.equal(buf[0], 97)\n  t.equal(buf[1], 98)\n  t.equal(buf[2], 99)\n  t.end()\n})\n\ntest('setting index value should modify buffer contents', function (t) {\n  var buf = new B([ 97, 98, 99 ])\n  t.equal(buf[2], 99)\n  t.equal(buf.toString(), 'abc')\n\n  buf[2] += 10\n  t.equal(buf[2], 109)\n  t.equal(buf.toString(), 'abm')\n  t.end()\n})\n\ntest('storing negative number should cast to unsigned', function (t) {\n  var buf = new B(1)\n\n  if (B.TYPED_ARRAY_SUPPORT) {\n    // This does not work with the object implementation -- nothing we can do!\n    buf[0] = -3\n    t.equal(buf[0], 253)\n  }\n\n  buf = new B(1)\n  buf.writeInt8(-3, 0)\n  t.equal(buf[0], 253)\n\n  t.end()\n})\n\ntest('test that memory is copied from array-like', function (t) {\n  if (B.TYPED_ARRAY_SUPPORT) {\n    var u = new Uint8Array(4)\n    var b = new B(u)\n    b[0] = 1\n    b[1] = 2\n    b[2] = 3\n    b[3] = 4\n\n    t.equal(u[0], 0)\n    t.equal(u[1], 0)\n    t.equal(u[2], 0)\n    t.equal(u[3], 0)\n  } else {\n    t.pass('object impl: skipping test')\n  }\n\n  t.end()\n})\n"]}