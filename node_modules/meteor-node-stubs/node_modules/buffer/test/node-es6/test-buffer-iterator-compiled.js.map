{"version":3,"sources":["test-buffer-iterator.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAChE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;AACtC,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzC,IAAI,GAAG,CAAC;AACR,IAAI,CAAC,CAAC;;;;AAIN,GAAG,GAAG,EAAE,CAAC;;;;;;;AAET,uBAAU,MAAM;AAAX,KAAC;;AACJ,OAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAAA;;;;;;;;;;;;;;;;AAEd,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;AAKvC,GAAG,GAAG,EAAE,CAAC;;;;;;;AAET,wBAAU,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;AAA9B,KAAC;;AACJ,OAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAAA;;;;;;;;;;;;;;;;AAEd,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;AAKvC,GAAG,GAAG,EAAE,CAAC;;;;;;;AAET,wBAAU,MAAM,CAAC,MAAM,EAAE;AAApB,KAAC;;AACJ,OAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAAA;;;;;;;;;;;;;;;;AAEd,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;AAKvC,GAAG,GAAG,EAAE,CAAC;;;;;;;AAET,wBAAU,MAAM,CAAC,IAAI,EAAE;AAAlB,KAAC;;AACJ,OAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAAA;;;;;;;;;;;;;;;;AAEd,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;AAKvC,GAAG,GAAG,EAAE,CAAC;;;;;;;AAET,wBAAc,MAAM,CAAC,OAAO,EAAE;QAArB,CAAC;;AACR,OAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAAA;;;;;;;;;;;;;;;;AAEd,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CACpB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CACP,CAAC,CAAC","file":"test-buffer-iterator-compiled.js","sourcesContent":["'use strict';\nif (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\nvar Buffer = require('../../').Buffer;\nvar common = {};\nvar assert = require('assert');\n\nvar buffer = new Buffer([1, 2, 3, 4, 5]);\nvar arr;\nvar b;\n\n// buffers should be iterable\n\narr = [];\n\nfor (b of buffer)\n  arr.push(b);\n\nassert.deepEqual(arr, [1, 2, 3, 4, 5]);\n\n\n// buffer iterators should be iterable\n\narr = [];\n\nfor (b of buffer[Symbol.iterator]())\n  arr.push(b);\n\nassert.deepEqual(arr, [1, 2, 3, 4, 5]);\n\n\n// buffer#values() should return iterator for values\n\narr = [];\n\nfor (b of buffer.values())\n  arr.push(b);\n\nassert.deepEqual(arr, [1, 2, 3, 4, 5]);\n\n\n// buffer#keys() should return iterator for keys\n\narr = [];\n\nfor (b of buffer.keys())\n  arr.push(b);\n\nassert.deepEqual(arr, [0, 1, 2, 3, 4]);\n\n\n// buffer#entries() should return iterator for entries\n\narr = [];\n\nfor (var b of buffer.entries())\n  arr.push(b);\n\nassert.deepEqual(arr, [\n  [0, 1],\n  [1, 2],\n  [2, 3],\n  [3, 4],\n  [4, 5]\n]);\n\n"]}