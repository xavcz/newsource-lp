{"version":3,"sources":["test-buffer-arraybuffer.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAChE,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;;AAEtC,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;AACtC,IAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;AACjC,IAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC1B,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;AAC5B,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;;AAGzB,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;;AAGhC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACpC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;;AAGxC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,QAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACzB,IAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACZ,QAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;CAC3B;;AAED,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5B,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5B,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAE7B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACrC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;;;;AAK7C,MAAM,CAAC,MAAM,CAAC,YAAW;AACvB,WAAS,EAAE,GAAG,EAAG;AACjB,IAAE,CAAC,SAAS,GAAG,WAAW,CAAC;AAC3B,IAAE,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;AAC/C,MAAI,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;CACtB,EAAE,SAAS,CAAC,CAAC","file":"test-buffer-arraybuffer-compiled.js","sourcesContent":["'use strict';\nif (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;\nvar Buffer = require('../../').Buffer;\n\nvar common = {};\nvar assert = require('assert');\n\nvar Buffer = require('../../').Buffer;\nvar LENGTH = 16;\n\nvar ab = new ArrayBuffer(LENGTH);\nvar dv = new DataView(ab);\nvar ui = new Uint8Array(ab);\nvar buf = new Buffer(ab);\n\n\nassert.ok(Buffer.isBuffer(buf));\n// For backwards compatibility of old .parent property test that if buf is not\n// a slice then .parent should be undefined.\nassert.equal(buf.parent, undefined);\nassert.equal(buf.buffer, ab);\nassert.equal(buf.length, ab.byteLength);\n\n\nbuf.fill(0xC);\nfor (var i = 0; i < LENGTH; i++) {\n  assert.equal(ui[i], 0xC);\n  ui[i] = 0xF;\n  assert.equal(buf[i], 0xF);\n}\n\nbuf.writeUInt32LE(0xF00, 0);\nbuf.writeUInt32BE(0xB47, 4);\nbuf.writeDoubleLE(3.1415, 8);\n\nassert.equal(dv.getUint32(0, true), 0xF00);\nassert.equal(dv.getUint32(4), 0xB47);\nassert.equal(dv.getFloat64(8, true), 3.1415);\n\n\n// Now test protecting users from doing stupid things\n\nassert.throws(function() {\n  function AB() { }\n  AB.__proto__ = ArrayBuffer;\n  AB.prototype.__proto__ = ArrayBuffer.prototype;\n  new Buffer(new AB());\n}, TypeError);\n\n"]}