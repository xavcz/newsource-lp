{"version":3,"sources":["from-string.js"],"names":[],"mappings":"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","file":"from-string-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\n\ntest('detect utf16 surrogate pairs', function (t) {\n  var text = '\\uD83D\\uDE38' + '\\uD83D\\uDCAD' + '\\uD83D\\uDC4D'\n  var buf = new B(text)\n  t.equal(text, buf.toString())\n  t.end()\n})\n\ntest('detect utf16 surrogate pairs over U+20000 until U+10FFFF', function (t) {\n  var text = '\\uD842\\uDFB7' + '\\uD93D\\uDCAD' + '\\uDBFF\\uDFFF'\n  var buf = new B(text)\n  t.equal(text, buf.toString())\n  t.end()\n})\n\ntest('replace orphaned utf16 surrogate lead code point', function (t) {\n  var text = '\\uD83D\\uDE38' + '\\uD83D' + '\\uD83D\\uDC4D'\n  var buf = new B(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8, 0xef, 0xbf, 0xbd, 0xf0, 0x9f, 0x91, 0x8d ]))\n  t.end()\n})\n\ntest('replace orphaned utf16 surrogate trail code point', function (t) {\n  var text = '\\uD83D\\uDE38' + '\\uDCAD' + '\\uD83D\\uDC4D'\n  var buf = new B(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8, 0xef, 0xbf, 0xbd, 0xf0, 0x9f, 0x91, 0x8d ]))\n  t.end()\n})\n\ntest('do not write partial utf16 code units', function (t) {\n  var f = new B([0, 0, 0, 0, 0])\n  t.equal(f.length, 5)\n  var size = f.write('あいうえお', 'utf16le')\n  t.equal(size, 4)\n  t.deepEqual(f, new B([0x42, 0x30, 0x44, 0x30, 0x00]))\n  t.end()\n})\n\ntest('handle partial utf16 code points when encoding to utf8 the way node does', function (t) {\n  var text = '\\uD83D\\uDE38' + '\\uD83D\\uDC4D'\n\n  var buf = new B(8)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8, 0xf0, 0x9f, 0x91, 0x8d ]))\n\n  buf = new B(7)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8, 0x00, 0x00, 0x00 ]))\n\n  buf = new B(6)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8, 0x00, 0x00 ]))\n\n  buf = new B(5)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8, 0x00 ]))\n\n  buf = new B(4)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0xf0, 0x9f, 0x98, 0xb8 ]))\n\n  buf = new B(3)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x00, 0x00, 0x00 ]))\n\n  buf = new B(2)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x00, 0x00 ]))\n\n  buf = new B(1)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x00 ]))\n\n  t.end()\n})\n\ntest('handle invalid utf16 code points when encoding to utf8 the way node does', function (t) {\n  var text = 'a' + '\\uDE38\\uD83D' + 'b'\n\n  var buf = new B(8)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0xef, 0xbf, 0xbd, 0xef, 0xbf, 0xbd, 0x62 ]))\n\n  buf = new B(7)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0xef, 0xbf, 0xbd, 0xef, 0xbf, 0xbd ]))\n\n  buf = new B(6)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0xef, 0xbf, 0xbd, 0x00, 0x00 ]))\n\n  buf = new B(5)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0xef, 0xbf, 0xbd, 0x00 ]))\n\n  buf = new B(4)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0xef, 0xbf, 0xbd ]))\n\n  buf = new B(3)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0x00, 0x00 ]))\n\n  buf = new B(2)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61, 0x00 ]))\n\n  buf = new B(1)\n  buf.fill(0)\n  buf.write(text)\n  t.deepEqual(buf, new B([ 0x61 ]))\n\n  t.end()\n})\n"]}