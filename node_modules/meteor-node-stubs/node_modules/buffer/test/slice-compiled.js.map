{"version":3,"sources":["slice.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAA;AAC/D,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAA;AAC7B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE1B,IAAI,CAAC,+DAA+D,EAAE,UAAU,CAAC,EAAE;AACjF,MAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;;AAE1C,MAAI,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA;AACpB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,QAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;GACjB;;AAED,MAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAC3B,GAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAA;;AAEtD,MAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC3B,GAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAA;;AAEtD,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,IAAI,CAAC,4DAA4D,EAAE,UAAU,CAAC,EAAE;AAC9E,MAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;;AAE1C,MAAI,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAA;AACpB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,QAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;GACjB;;AAED,MAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAC3B,GAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAA;;AAEtD,MAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC3B,GAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAA;;AAEtD,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA","file":"slice-compiled.js","sourcesContent":["if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false\nvar B = require('../').Buffer\nvar test = require('tape')\n\ntest('modifying buffer created by .slice() modifies original memory', function (t) {\n  if (!B.TYPED_ARRAY_SUPPORT) return t.end()\n\n  var buf1 = new B(26)\n  for (var i = 0; i < 26; i++) {\n    buf1[i] = i + 97 // 97 is ASCII a\n  }\n\n  var buf2 = buf1.slice(0, 3)\n  t.equal(buf2.toString('ascii', 0, buf2.length), 'abc')\n\n  buf2[0] = '!'.charCodeAt(0)\n  t.equal(buf1.toString('ascii', 0, buf2.length), '!bc')\n\n  t.end()\n})\n\ntest('modifying parent buffer modifies .slice() buffer\\'s memory', function (t) {\n  if (!B.TYPED_ARRAY_SUPPORT) return t.end()\n\n  var buf1 = new B(26)\n  for (var i = 0; i < 26; i++) {\n    buf1[i] = i + 97 // 97 is ASCII a\n  }\n\n  var buf2 = buf1.slice(0, 3)\n  t.equal(buf2.toString('ascii', 0, buf2.length), 'abc')\n\n  buf1[0] = '!'.charCodeAt(0)\n  t.equal(buf2.toString('ascii', 0, buf2.length), '!bc')\n\n  t.end()\n})\n"]}