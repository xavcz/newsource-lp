{"version":3,"sources":["_polyfill.js"],"names":[],"mappings":";;AAAA,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE;;AAE5B,OAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE;;AAEpD,QAAI,CAAC,EAAE,CAAC,CAAC;;AAET,QAAI,IAAI,IAAI,IAAI,EAAE;AAChB,YAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;KACrD;;;AAGD,QAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;;;AAIrB,QAAI,GAAG,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;;;;AAIzB,QAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;AAClC,YAAM,IAAI,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,CAAC;KACtD;;;AAGD,QAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,OAAC,GAAG,OAAO,CAAC;KACb;;;AAGD,KAAC,GAAG,CAAC,CAAC;;;AAGN,WAAO,CAAC,GAAG,GAAG,EAAE;;AAEd,UAAI,MAAM,CAAC;;;;;;;AAOX,UAAI,CAAC,IAAI,CAAC,EAAE;;;AAGV,cAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;;AAId,gBAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;OAChC;;AAED,OAAC,EAAE,CAAC;KACL;;GAEF,CAAC;CACH;;AAED,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAClB,OAAK,CAAC,OAAO,GAAG,UAAS,GAAG,EAAE;AAC5B,WAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,gBAAgB,CAAC;GACjE,CAAC;CACH;;AAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;;AAExB,OAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE;;AAEhD,QAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEZ,QAAI,IAAI,IAAI,IAAI,EAAE;AAChB,YAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;KACrD;;;;AAID,QAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;;;;AAKrB,QAAI,GAAG,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;;;;AAIzB,QAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;AAClC,YAAM,IAAI,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,CAAC;KACtD;;;AAGD,QAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,OAAC,GAAG,OAAO,CAAC;KACb;;;;;AAKD,KAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;;;AAGnB,KAAC,GAAG,CAAC,CAAC;;;AAGN,WAAO,CAAC,GAAG,GAAG,EAAE;;AAEd,UAAI,MAAM,EAAE,WAAW,CAAC;;;;;;;;AAQxB,UAAI,CAAC,IAAI,CAAC,EAAE;;;;AAIV,cAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;AAKd,mBAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AAmB7C,SAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;OACpB;;AAED,OAAC,EAAE,CAAC;KACL;;;AAGD,WAAO,CAAC,CAAC;GACV,CAAC;CACH","file":"_polyfill-compiled.js","sourcesContent":["if (!Array.prototype.forEach) {\n\n  Array.prototype.forEach = function(callback, thisArg) {\n\n    var T, k;\n\n    if (this == null) {\n      throw new TypeError(' this is null or not defined');\n    }\n\n    // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If IsCallable(callback) is false, throw a TypeError exception.\n    // See: http://es5.github.com/#x9.11\n    if (typeof callback !== \"function\") {\n      throw new TypeError(callback + ' is not a function');\n    }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n\n    // 6. Let k be 0\n    k = 0;\n\n    // 7. Repeat, while k < len\n    while (k < len) {\n\n      var kValue;\n\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n\n        // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Call the Call internal method of callback with T as the this value and\n        // argument list containing kValue, k, and O.\n        callback.call(T, kValue, k, O);\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n    // 8. return undefined\n  };\n}\n\nif (!Array.isArray) {\n  Array.isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n\nif (!Array.prototype.map) {\n\n  Array.prototype.map = function(callback, thisArg) {\n\n    var T, A, k;\n\n    if (this == null) {\n      throw new TypeError(' this is null or not defined');\n    }\n\n    // 1. Let O be the result of calling ToObject passing the |this|\n    //    value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get internal\n    //    method of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If IsCallable(callback) is false, throw a TypeError exception.\n    // See: http://es5.github.com/#x9.11\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + ' is not a function');\n    }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n\n    // 6. Let A be a new array created as if by the expression new Array(len)\n    //    where Array is the standard built-in constructor with that name and\n    //    len is the value of len.\n    A = new Array(len);\n\n    // 7. Let k be 0\n    k = 0;\n\n    // 8. Repeat, while k < len\n    while (k < len) {\n\n      var kValue, mappedValue;\n\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal\n      //    method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n\n        // i. Let kValue be the result of calling the Get internal\n        //    method of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Let mappedValue be the result of calling the Call internal\n        //     method of callback with T as the this value and argument\n        //     list containing kValue, k, and O.\n        mappedValue = callback.call(T, kValue, k, O);\n\n        // iii. Call the DefineOwnProperty internal method of A with arguments\n        // Pk, Property Descriptor\n        // { Value: mappedValue,\n        //   Writable: true,\n        //   Enumerable: true,\n        //   Configurable: true },\n        // and false.\n\n        // In browsers that support Object.defineProperty, use the following:\n        // Object.defineProperty(A, k, {\n        //   value: mappedValue,\n        //   writable: true,\n        //   enumerable: true,\n        //   configurable: true\n        // });\n\n        // For best browser support, use the following:\n        A[k] = mappedValue;\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n\n    // 9. return A\n    return A;\n  };\n}\n"]}