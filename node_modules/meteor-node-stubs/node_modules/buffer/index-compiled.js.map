{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(array)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n"]}