'use strict';

var generatePrime = require('./lib/generatePrime');
var primes = require('./lib/primes.json');

var DH = require('./lib/dh');

function getDiffieHellman(mod) {
  var prime = new Buffer(primes[mod].prime, 'hex');
  var gen = new Buffer(primes[mod].gen, 'hex');

  return new DH(prime, gen);
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
};

function createDiffieHellman(_x, _x2, _x3, _x4) {
  var _again = true;

  _function: while (_again) {
    var prime = _x,
        enc = _x2,
        generator = _x3,
        genc = _x4;
    _again = false;

    if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
      _x = prime;
      _x2 = 'binary';
      _x3 = enc;
      _x4 = generator;
      _again = true;
      continue _function;
    }

    enc = enc || 'binary';
    genc = genc || 'binary';
    generator = generator || new Buffer([2]);

    if (!Buffer.isBuffer(generator)) {
      generator = new Buffer(generator, genc);
    }

    if (typeof prime === 'number') {
      return new DH(generatePrime(prime, generator), generator, true);
    }

    if (!Buffer.isBuffer(prime)) {
      prime = new Buffer(prime, enc);
    }

    return new DH(prime, generator, true);
  }
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;

//# sourceMappingURL=browser-compiled.js.map