{"version":3,"sources":["browser.js"],"names":[],"mappings":";;AAAA,IAAI,aAAa,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAA;AAClD,IAAI,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;;AAEzC,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;;AAE5B,SAAS,gBAAgB,CAAE,GAAG,EAAE;AAC9B,MAAI,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAChD,MAAI,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;;AAE5C,SAAO,IAAI,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;CAC1B;;AAED,IAAI,SAAS,GAAG;AACd,UAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI;CAC5C,CAAA;;AAED,SAAS,mBAAmB;;;4BAA+B;QAA7B,KAAK;QAAE,GAAG;QAAE,SAAS;QAAE,IAAI;;;AACvD,QAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;WAC7B,KAAK;YAAE,QAAQ;YAAE,GAAG;YAAE,SAAS;;;KAC3D;;AAED,OAAG,GAAG,GAAG,IAAI,QAAQ,CAAA;AACrB,QAAI,GAAG,IAAI,IAAI,QAAQ,CAAA;AACvB,aAAS,GAAG,SAAS,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;;AAExC,QAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AAC/B,eAAS,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;KACxC;;AAED,QAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,aAAO,IAAI,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;KAChE;;AAED,QAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC3B,WAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;KAC/B;;AAED,WAAO,IAAI,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;GACtC;CAAA;;AAED,OAAO,CAAC,kBAAkB,GAAG,OAAO,CAAC,wBAAwB,GAAG,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;AAC3G,OAAO,CAAC,mBAAmB,GAAG,OAAO,CAAC,aAAa,GAAG,mBAAmB,CAAA","file":"browser-compiled.js","sourcesContent":["var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n"]}