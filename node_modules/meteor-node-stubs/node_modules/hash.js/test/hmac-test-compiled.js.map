{"version":3,"sources":["hmac-test.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;AAEvB,QAAQ,CAAC,MAAM,EAAE,YAAW;AAC1B,UAAQ,CAAC,mBAAmB,EAAE,YAAW;AACvC,QAAI,CAAC;AACH,UAAI,EAAE,QAAQ;AACd,SAAG,EAAE,qCAAqC,GACrC,uDAAuD,GACvD,uDAAuD;AAC5D,SAAG,EAAE,oCAAoC;AACzC,SAAG,EAAE,kEAAkE;KACxE,CAAC,CAAC;AACH,QAAI,CAAC;AACH,UAAI,EAAE,QAAQ;AACd,SAAG,EAAE,mBAAmB,GACnB,uDAAuD;AAC5D,SAAG,EAAE,oCAAoC;AACzC,SAAG,EAAE,kEAAkE;KACxE,CAAC,CAAC;AACH,QAAI,CAAC;AACH,UAAI,EAAE,QAAQ;AACd,SAAG,EAAE,UAAU,GACV,uDAAuD,GACvD,uDAAuD,GACvD,uDAAuD,GACvD,uDAAuD;AAC5D,SAAG,EAAE,oCAAoC;AACzC,SAAG,EAAE,kEAAkE;KACxE,CAAC,CAAC;AACH,QAAI,CAAC;AACH,UAAI,EAAE,QAAQ;AACd,SAAG,EAAE,IAAI,GACJ,uDAAuD,GACvD,uDAAuD;AAC5D,SAAG,EAAE,wDAAwD;AAC7D,SAAG,EAAE,kEAAkE;KACxE,CAAC,CAAC;AACH,QAAI,CAAC;AACH,UAAI,EAAE,cAAc;AACpB,SAAG,EAAE,kEAAkE;AACvE,SAAG,EAAE,kEAAkE;AACvE,YAAM,EAAE,KAAK;AACb,SAAG,EAAE,kEAAkE;KACxE,CAAC,CAAC;;AAEH,aAAS,IAAI,CAAC,GAAG,EAAE;AACjB,QAAE,CAAC,qBAAqB,GAAG,GAAG,CAAC,IAAI,EAAE,YAAW;AAC9C,YAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/C,cAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACnE,YAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/C,cAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CACxC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CACrC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;OACxC,CAAC,CAAC;KACJ;GACF,CAAC,CAAC;CACJ,CAAC,CAAC","file":"hmac-test-compiled.js","sourcesContent":["var assert = require('assert');\nvar hash = require('../');\nvar utils = hash.utils;\n\ndescribe('Hmac', function() {\n  describe('mixed test vector', function() {\n    test({\n      name: 'nist 1',\n      key: '00010203 04050607 08090A0B 0C0D0E0F' +\n           '10111213 14151617 18191A1B 1C1D1E1F 20212223 24252627' +\n           '28292A2B 2C2D2E2F 30313233 34353637 38393A3B 3C3D3E3F',\n      msg: 'Sample message for keylen=blocklen',\n      res: '8bb9a1db9806f20df7f77b82138c7914d174d59e13dc4d0169c9057b133e1d62'\n    });\n    test({\n      name: 'nist 2',\n      key: '00010203 04050607' +\n           '08090A0B 0C0D0E0F 10111213 14151617 18191A1B 1C1D1E1F',\n      msg: 'Sample message for keylen<blocklen',\n      res: 'a28cf43130ee696a98f14a37678b56bcfcbdd9e5cf69717fecf5480f0ebdf790'\n    });\n    test({\n      name: 'nist 3',\n      key: '00010203' +\n           '04050607 08090A0B 0C0D0E0F 10111213 14151617 18191A1B' +\n           '1C1D1E1F 20212223 24252627 28292A2B 2C2D2E2F 30313233' +\n           '34353637 38393A3B 3C3D3E3F 40414243 44454647 48494A4B' +\n           '4C4D4E4F 50515253 54555657 58595A5B 5C5D5E5F 60616263',\n      msg: 'Sample message for keylen=blocklen',\n      res: 'bdccb6c72ddeadb500ae768386cb38cc41c63dbb0878ddb9c7a38a431b78378d'\n    });\n    test({\n      name: 'nist 4',\n      key: '00' +\n           '01020304 05060708 090A0B0C 0D0E0F10 11121314 15161718' +\n           '191A1B1C 1D1E1F20 21222324 25262728 292A2B2C 2D2E2F30',\n      msg: 'Sample message for keylen<blocklen, with truncated tag',\n      res: '27a8b157839efeac98df070b331d593618ddb985d403c0c786d23b5d132e57c7'\n    });\n    test({\n      name: 'regression 1',\n      key: '48f38d0c6a344959cc94502b7b5e8dffb6a5f41795d9066fc9a649557167ee2f',\n      msg: '1d495eef7761b65dccd0a983d2d7204fea28b5c81f1758046e062eb043755ea1',\n      msgEnc: 'hex',\n      res: 'cf5ad5984f9e43917aa9087380dac46e410ddc8a7731859c84e9d0f31bd43655'\n    });\n\n    function test(opt) {\n      it('should not fail at ' + opt.name, function() {\n        var h = hash.hmac(hash.sha256, opt.key, 'hex');\n        assert.equal(h.update(opt.msg, opt.msgEnc).digest('hex'), opt.res);\n        var h = hash.hmac(hash.sha256, opt.key, 'hex');\n        assert.equal(h.update(opt.msg.slice(0, 10), opt.msgEnc)\n                      .update(opt.msg.slice(10), opt.msgEnc)\n                      .digest('hex'), opt.res);\n      });\n    }\n  });\n});\n"]}