{"version":3,"sources":["hash.js"],"names":[],"mappings":"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","file":"hash-compiled.js","sourcesContent":["// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = new Buffer(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n  this._s = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = new Buffer(data, enc)\n  }\n\n  var l = this._len += data.length\n  var s = this._s || 0\n  var f = 0\n  var buffer = this._block\n\n  while (s < l) {\n    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))\n    var ch = (t - f)\n\n    for (var i = 0; i < ch; i++) {\n      buffer[(s % this._blockSize) + i] = data[i + f]\n    }\n\n    s += ch\n    f += ch\n\n    if ((s % this._blockSize) === 0) {\n      this._update(buffer)\n    }\n  }\n  this._s = s\n\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  // Suppose the length of the message M, in bits, is l\n  var l = this._len * 8\n\n  // Append the bit 1 to the end of the message\n  this._block[this._len % this._blockSize] = 0x80\n\n  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize\n  this._block.fill(0, this._len % this._blockSize + 1)\n\n  if (l % (this._blockSize * 8) >= this._finalSize * 8) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  // to this append the block which is equal to the number l written in binary\n  // TODO: handle case where l is > Math.pow(2, 29)\n  this._block.writeInt32BE(l, this._blockSize - 4)\n\n  var hash = this._update(this._block) || this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n"]}