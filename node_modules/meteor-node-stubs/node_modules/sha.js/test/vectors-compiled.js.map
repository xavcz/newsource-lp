{"version":3,"sources":["vectors.js"],"names":[],"mappings":"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","file":"vectors-compiled.js","sourcesContent":["var tape = require('tape')\nvar vectors = require('hash-test-vectors')\n// var from = require('bops/typedarray/from')\nvar Buffer = require('buffer').Buffer\nvar hexpp = require('../hexpp')\n\nvar createHash = require('../')\n\nfunction makeTest (alg, i, verbose) {\n  var v = vectors[i]\n\n  tape(alg + ': NIST vector ' + i, function (t) {\n    if (verbose) {\n      console.log(v)\n      console.log('VECTOR', i)\n      console.log('INPUT', v.input)\n      console.log(hexpp(new Buffer(v.input, 'base64')))\n      console.log(new Buffer(v.input, 'base64').toString('hex'))\n    }\n\n    var buf = new Buffer(v.input, 'base64')\n    t.equal(createHash(alg).update(buf).digest('hex'), v[alg])\n\n    i = ~~(buf.length / 2)\n    var buf1 = buf.slice(0, i)\n    var buf2 = buf.slice(i, buf.length)\n\n    console.log(buf1.length, buf2.length, buf.length)\n    console.log(createHash(alg)._block.length)\n\n    t.equal(\n      createHash(alg)\n        .update(buf1)\n        .update(buf2)\n        .digest('hex'),\n      v[alg]\n    )\n\n    var j, buf3\n\n    i = ~~(buf.length / 3)\n    j = ~~(buf.length * 2 / 3)\n    buf1 = buf.slice(0, i)\n    buf2 = buf.slice(i, j)\n    buf3 = buf.slice(j, buf.length)\n\n    t.equal(\n      createHash(alg)\n        .update(buf1)\n        .update(buf2)\n        .update(buf3)\n        .digest('hex'),\n      v[alg]\n    )\n\n    setTimeout(function () {\n      // avoid \"too much recursion\" errors in tape in firefox\n      t.end()\n    })\n  })\n\n}\n\nif (process.argv[2]) {\n  makeTest(process.argv[2], parseInt(process.argv[3], 10), true)\n\n} else {\n  vectors.forEach(function (v, i) {\n    makeTest('sha', i)\n    makeTest('sha1', i)\n    makeTest('sha224', i)\n    makeTest('sha256', i)\n    makeTest('sha384', i)\n    makeTest('sha512', i)\n  })\n}\n"]}