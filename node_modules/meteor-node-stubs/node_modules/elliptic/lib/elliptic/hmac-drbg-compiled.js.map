{"version":3,"sources":["hmac-drbg.js"],"names":[],"mappings":"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","file":"hmac-drbg-compiled.js","sourcesContent":["'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n  var pers = utils.toArray(options.pers, options.persEnc);\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toBuffer(entropy, entropyEnc);\n  add = utils.toBuffer(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc);\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this.reseed++;\n  return utils.encode(res, enc);\n};\n"]}