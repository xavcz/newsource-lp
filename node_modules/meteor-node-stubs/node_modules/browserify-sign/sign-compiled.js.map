{"version":3,"sources":["sign.js"],"names":[],"mappings":";;;AACA,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACvC,IAAI,GAAG,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAA;AACnC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAClC,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;;AAErC,IAAI,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;AACzB,IAAI,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAA;;AAEpB,SAAS,IAAI,CAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC5C,MAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;AACzB,MAAI,IAAI,CAAC,KAAK,EAAE;AACd,QAAI,QAAQ,KAAK,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;;AAEnE,WAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;GAC1B,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;AAC9B,QAAI,QAAQ,KAAK,KAAK,EAAE;AACtB,YAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;KAC1C;AACD,WAAO,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;GACrC,MAAM;AACL,QAAI,QAAQ,KAAK,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;GAClE;;AAED,MAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAA;AACnC,MAAI,GAAG,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAA;AAClB,SAAO,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,EAAE;AACzC,OAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GACf;AACD,KAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACd,MAAI,CAAC,GAAG,CAAC,CAAC,CAAA;AACV,SAAO,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;AACxB,OAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;GAClB;;AAED,MAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;AACxB,SAAO,GAAG,CAAA;CACX;;AAED,SAAS,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE;AAC3B,MAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;AAC1C,MAAI,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;;AAEtE,MAAI,KAAK,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAA;AAC3B,MAAI,GAAG,GAAG,KAAK,CAAC,UAAU,EAAE,CAAA;;AAE5B,KAAG,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;AACnC,MAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAExB,SAAO,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAA;CAC/B;;AAED,SAAS,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAClC,MAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAA;AAC5B,MAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;AACrB,MAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;AACrB,MAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;AACrB,MAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;AACjB,MAAI,CAAC,CAAA;AACL,MAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAChC,MAAI,CAAC,GAAG,KAAK,CAAA;AACb,MAAI,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AACjC,SAAO,CAAC,KAAK,KAAK,EAAE;AAClB,KAAC,GAAG,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;AACxB,KAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACrB,KAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAC1C,QAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AACd,OAAC,GAAG,KAAK,CAAA;AACT,OAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;KACd;GACF;AACD,SAAO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;CACnB;;AAED,SAAS,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE;AACpB,GAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;AACf,GAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;;;AAGf,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;AACf,KAAC,GAAG,CAAE,CAAC,CAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;GACpB;;AAED,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;AACf,KAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;GAClB;;AAED,MAAI,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA;AACnC,MAAI,GAAG,GAAG,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAE,CAAA;AACzC,KAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAE,EAAE,CAAC,CAAC,CAAA;AAC1C,SAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAA;CACvB;;AAED,SAAS,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;AACjC,GAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;AAC3B,MAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE;AAC7B,QAAI,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAA;AACjD,SAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACb,KAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAA;GAC9B;AACD,MAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAA;AACtB,MAAI,KAAK,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;AAChC,MAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAA;AACxB,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACT,MAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAA;AACxB,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACT,GAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CACpB,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,CAAC,KAAK,CAAC,CACb,MAAM,EAAE,CAAA;AACX,GAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CACpB,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,EAAE,CAAA;AACX,GAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CACpB,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,CAAC,KAAK,CAAC,CACb,MAAM,EAAE,CAAA;AACX,GAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CACpB,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,EAAE,CAAA;AACX,SAAO;AACL,KAAC,EAAE,CAAC;AACJ,KAAC,EAAE,CAAC;GACL,CAAA;CACF;;AAED,SAAS,QAAQ,CAAE,KAAK,EAAE,CAAC,EAAE;AAC3B,MAAI,IAAI,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,CAAA;AACxB,MAAI,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAA,GAAI,CAAC,CAAC,SAAS,EAAE,CAAA;AAC/C,MAAI,KAAK,GAAG,CAAC,EAAE;AACb,QAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;GAClB;AACD,SAAO,IAAI,CAAA;CACZ;;AAED,SAAS,WAAW,CAAE,IAAI,EAAE,CAAC,EAAE;AAC7B,MAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;AACxB,MAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAClB,MAAI,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;AACpC,MAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE;AAC/B,QAAI,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAA;AACnD,SAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACb,OAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;GAClC;AACD,SAAO,GAAG,CAAA;CACX;;AAED,SAAS,OAAO,CAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE;AAC7B,MAAI,CAAC,EAAE,CAAC,CAAA;;AAER,KAAG;AACD,KAAC,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA;;AAElB,WAAO,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;AACnC,QAAE,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAC1B,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CACZ,MAAM,EAAE,CAAA;AACX,OAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;KAC7B;;AAED,KAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAClB,MAAE,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAC1B,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CACZ,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,MAAM,EAAE,CAAA;AACX,MAAE,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAC1B,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CACZ,MAAM,EAAE,CAAA;GACZ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;;AAEzB,SAAO,CAAC,CAAA;CACT;;AAED,SAAS,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC1B,SAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;CACtD;;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;AACrB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAA;AAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAA","file":"sign-compiled.js","sourcesContent":["// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar curves = require('./curves')\nvar elliptic = require('elliptic')\nvar parseKeys = require('parse-asn1')\n\nvar BN = require('bn.js')\nvar EC = elliptic.ec\n\nfunction sign (hash, key, hashType, signType) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    if (signType !== 'ecdsa') throw new Error('wrong private key type')\n\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') {\n      throw new Error('wrong private key type')\n    }\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa') throw new Error('wrong private key type')\n  }\n\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) {\n    pad.push(0xff)\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.genKeyPair()\n\n  key._importPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (!s.cmpn(0)) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) {\n    r = [ 0 ].concat(r)\n  }\n  // Pad values\n  if (s[0] & 0x80) {\n    s = [0].concat(s)\n  }\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k)\n    .update(v)\n    .update(new Buffer([0]))\n    .update(x)\n    .update(hbits)\n    .digest()\n  v = createHmac(algo, k)\n    .update(v)\n    .digest()\n  k = createHmac(algo, k)\n    .update(v)\n    .update(new Buffer([1]))\n    .update(x)\n    .update(hbits)\n    .digest()\n  v = createHmac(algo, k)\n    .update(v)\n    .digest()\n  return {\n    k: k,\n    v: v\n  }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) {\n    bits.ishrn(shift)\n  }\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t, k\n\n  do {\n    t = new Buffer('')\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k)\n        .update(kv.v)\n        .digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k)\n      .update(kv.v)\n      .update(new Buffer([0]))\n      .digest()\n    kv.v = createHmac(algo, kv.k)\n      .update(kv.v)\n      .digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n"]}