{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Transform = require('_stream_transform');\n\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = (16 * 1024);\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nObject.keys(binding).forEach(function(k) {\n  if (k.match(/^Z/)) exports[k] = binding[k];\n});\n\n// translation table for return codes.\nexports.codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nObject.keys(exports.codes).forEach(function(k) {\n  exports.codes[exports.codes[k]] = k;\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function(o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function(o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function(o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function(o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function(o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function(o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function(o) {\n  return new Unzip(o);\n};\n\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function(buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function(buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function(buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf = Buffer.concat(buffers, nread);\n    buffers = [];\n    callback(null, buf);\n    engine.close();\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string')\n    buffer = new Buffer(buffer);\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('Not a string or buffer');\n\n  var flushFlag = binding.Z_FINISH;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush) {\n    if (opts.flush !== binding.Z_NO_FLUSH &&\n        opts.flush !== binding.Z_PARTIAL_FLUSH &&\n        opts.flush !== binding.Z_SYNC_FLUSH &&\n        opts.flush !== binding.Z_FULL_FLUSH &&\n        opts.flush !== binding.Z_FINISH &&\n        opts.flush !== binding.Z_BLOCK) {\n      throw new Error('Invalid flush flag: ' + opts.flush);\n    }\n  }\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK ||\n        opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||\n        opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL ||\n        opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||\n        opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED &&\n        opts.strategy != exports.Z_HUFFMAN_ONLY &&\n        opts.strategy != exports.Z_RLE &&\n        opts.strategy != exports.Z_FIXED &&\n        opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._binding = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._binding.onerror = function(message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    self._binding = null;\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,\n                     level,\n                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,\n                     strategy,\n                     opts.dictionary);\n\n  this._buffer = new Buffer(this._chunkSize);\n  this._offset = 0;\n  this._closed = false;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function(level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL ||\n      level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED &&\n      strategy != exports.Z_HUFFMAN_ONLY &&\n      strategy != exports.Z_RLE &&\n      strategy != exports.Z_FIXED &&\n      strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function() {\n      self._binding.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function() {\n  return this._binding.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function(callback) {\n  this._transform(new Buffer(0), '', callback);\n};\n\nZlib.prototype.flush = function(kind, callback) {\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || (kind === void 0 && !callback)) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback)\n      this.once('end', callback);\n  } else if (ws.needDrain) {\n    var self = this;\n    this.once('drain', function() {\n      self.flush(callback);\n    });\n  } else {\n    this._flushFlag = kind;\n    this.write(new Buffer(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function(callback) {\n  if (callback)\n    process.nextTick(callback);\n\n  if (this._closed)\n    return;\n\n  this._closed = true;\n\n  this._binding.close();\n\n  var self = this;\n  process.nextTick(function() {\n    self.emit('close');\n  });\n};\n\nZlib.prototype._transform = function(chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (!chunk === null && !Buffer.isBuffer(chunk))\n    return cb(new Error('invalid input'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last)\n    flushFlag = binding.Z_FINISH;\n  else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  var self = this;\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function(chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function(er) {\n      error = er;\n    });\n\n    do {\n      var res = this._binding.writeSync(flushFlag,\n                                        chunk, // in\n                                        inOff, // in_off\n                                        availInBefore, // in_len\n                                        this._buffer, // out\n                                        this._offset, //out_off\n                                        availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    this.close();\n\n    return buf;\n  }\n\n  var req = this._binding.write(flushFlag,\n                                chunk, // in\n                                inOff, // in_off\n                                availInBefore, // in_len\n                                this._buffer, // out\n                                this._offset, //out_off\n                                availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    if (self._hadError)\n      return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = new Buffer(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += (availInBefore - availInAfter);\n      availInBefore = availInAfter;\n\n      if (!async)\n        return true;\n\n      var newReq = self._binding.write(flushFlag,\n                                       chunk,\n                                       inOff,\n                                       availInBefore,\n                                       self._buffer,\n                                       self._offset,\n                                       self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async)\n      return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);\n"]}