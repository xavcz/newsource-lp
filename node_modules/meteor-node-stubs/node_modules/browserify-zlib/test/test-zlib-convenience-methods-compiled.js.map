{"version":3,"sources":["test-zlib-convenience-methods.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE1B,IAAI,MAAM,GAAG,0BAA0B,CAAC;AACxC,IAAI,IAAI,GAAG;AACT,OAAK,EAAE,CAAC;AACR,WAAS,EAAE,IAAI;CAChB,CAAC;;AAEF,CACE,CAAC,MAAM,EAAE,QAAQ,CAAC,EAClB,CAAC,MAAM,EAAE,OAAO,CAAC,EACjB,CAAC,SAAS,EAAE,SAAS,CAAC,EACtB,CAAC,YAAY,EAAE,YAAY,CAAC,CAC7B,CAAC,OAAO,CAAC,UAAS,MAAM,EAAE;AACzB,MAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,UAAS,CAAC,EAAE;AACjC,KAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEV,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAClD,UAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAClD,SAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,EACpC,mCAAmC,GACnC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC;OACnD,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,QAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC5C,UAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC5C,SAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,EACpC,mCAAmC,GACnC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC;OACtD,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,QAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACpD,UAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAChD,KAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,EACpC,mCAAmC,GACnC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC;;AAElD,UAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;AAC1C,UAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;AAC1C,KAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,EACpC,mCAAmC,GACnC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC;GACtD,CAAC,CAAC;CACJ,CAAC,CAAC","file":"test-zlib-convenience-methods-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// test convenience methods with and without options supplied\n\nvar tape = require('tape');\nvar zlib = require('../');\n\nvar expect = 'blahblahblahblahblahblah';\nvar opts = {\n  level: 9,\n  chunkSize: 1024,\n};\n\n[\n  ['gzip', 'gunzip'],\n  ['gzip', 'unzip'],\n  ['deflate', 'inflate'],\n  ['deflateRaw', 'inflateRaw'],\n].forEach(function(method) {\n  tape(method.join(' '), function(t) {\n    t.plan(4);\n    \n    zlib[method[0]](expect, opts, function(err, result) {\n      zlib[method[1]](result, opts, function(err, result) {\n        t.deepEqual(result, new Buffer(expect),\n          'Should get original string after ' +\n          method[0] + '/' + method[1] + ' with options.');\n      });\n    });\n\n    zlib[method[0]](expect, function(err, result) {\n      zlib[method[1]](result, function(err, result) {\n        t.deepEqual(result, new Buffer(expect),\n          'Should get original string after ' +\n          method[0] + '/' + method[1] + ' without options.');\n      });\n    });\n\n    var result = zlib[method[0] + 'Sync'](expect, opts);\n    result = zlib[method[1] + 'Sync'](result, opts);\n    t.deepEqual(result, new Buffer(expect),\n      'Should get original string after ' +\n      method[0] + '/' + method[1] + ' with options.');\n    \n    result = zlib[method[0] + 'Sync'](expect);\n    result = zlib[method[1] + 'Sync'](result);\n    t.deepEqual(result, new Buffer(expect),\n      'Should get original string after ' +\n      method[0] + '/' + method[1] + ' without options.');\n  });\n});\n"]}