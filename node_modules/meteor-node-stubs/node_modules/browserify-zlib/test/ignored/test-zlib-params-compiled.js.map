{"version":3,"sources":["test-zlib-params.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACrC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEvB,IAAI,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IACtE,SAAS,GAAG,EAAE,GAAG,IAAI;IACrB,IAAI,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAE;IACtD,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;AAExC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC;IACjC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC9B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnD,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1C,MAAM,CAAC;;AAEX,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,YAAW;AAChC,UAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE,YAAW;AACrD,WAAO,QAAQ,CAAC,IAAI,EAAE,EAAE;AACxB,YAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,YAAW;AAC9B,UAAI,IAAI,GAAG,EAAE;UAAE,GAAG,CAAC;AACnB,aAAO,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,EAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,YAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC9B,CAAC,CAAC;GACJ,CAAC,CAAC;AACH,SAAO,QAAQ,CAAC,IAAI,EAAE,EAAE;CACzB,CAAC,CAAC;;AAEH,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,YAAW;AAC9B,QAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;CACpC,CAAC,CAAC","file":"test-zlib-params-compiled.js","sourcesContent":["var common = require('../common.js');\nvar assert = require('assert');\nvar zlib = require('zlib');\nvar path = require('path');\nvar fs = require('fs');\n\nvar file = fs.readFileSync(path.resolve(common.fixturesDir, 'person.jpg')),\n    chunkSize = 24 * 1024,\n    opts = { level: 9, strategy: zlib.Z_DEFAULT_STRATEGY },\n    deflater = zlib.createDeflate(opts);\n\nvar chunk1 = file.slice(0, chunkSize),\n    chunk2 = file.slice(chunkSize),\n    blkhdr = new Buffer([0x00, 0x48, 0x82, 0xb7, 0x7d]),\n    expected = Buffer.concat([blkhdr, chunk2]),\n    actual;\n\ndeflater.write(chunk1, function() {\n  deflater.params(0, zlib.Z_DEFAULT_STRATEGY, function() {\n    while (deflater.read());\n    deflater.end(chunk2, function() {\n      var bufs = [], buf;\n      while (buf = deflater.read())\n        bufs.push(buf);\n      actual = Buffer.concat(bufs);\n    });\n  });\n  while (deflater.read());\n});\n\nprocess.once('exit', function() {\n  assert.deepEqual(actual, expected);\n});\n"]}