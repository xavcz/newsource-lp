{"version":3,"sources":["build-deps.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAC3C,IAAI,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;;;;;;;;;;;;AAahC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY;AAC5B,SAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,UAAU,KAAK,EAAE;AAC9C,QAAI,KAAK,EAAE,MAAM,KAAK,CAAC;AACvB,UAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AACrC,QAAE,CAAC,SAAS,CACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,GAAG,KAAK,CAAC,EAC9B,OAAO,GAAG,CAAC,EAAE,CAAC,KAAK,QAAQ,GACvB,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,GAC7C,EAAE,CACP,CAAC;KACH,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"build-deps-compiled.js","sourcesContent":["var fs = require(\"fs\");\nvar path = require(\"path\");\nvar depsDir = path.join(__dirname, \"deps\");\nvar map = require(\"./map.json\");\n\n// Each file in the `deps` directory expresses the dependencies of a stub.\n// For example, `deps/http.js` calls `require(\"http-browserify\")` to\n// indicate that the `http` stub depends on the `http-browserify` package.\n// This makes it easy for a bundling tool like Browserify, Webpack, or\n// Meteor to include the appropriate package dependencies by depending on\n// `meteor-node-stubs/deps/http` rather than having to know how the `http`\n// stub is implemented. Some modules in the `deps` directory are empty,\n// such as `deps/fs.js`, which indicates that no dependencies need to be\n// bundled. Note that these modules should not be `require`d at runtime,\n// but merely scanned at bundling time.\n\nfs.mkdir(depsDir, function () {\n  require(\"rimraf\")(\"deps/*.js\", function (error) {\n    if (error) throw error;\n    Object.keys(map).forEach(function (id) {\n      fs.writeFile(\n        path.join(depsDir, id + \".js\"),\n        typeof map[id] === \"string\"\n          ? \"require(\" + JSON.stringify(map[id]) + \");\\n\"\n          : \"\"\n      );\n    });\n  });\n});\n"]}