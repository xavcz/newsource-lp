{"version":3,"sources":["stringstream.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAC9B,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,aAAa,CAAA;;AAE3D,MAAM,CAAC,OAAO,GAAG,YAAY,CAAA;AAC7B,MAAM,CAAC,OAAO,CAAC,oBAAoB,GAAG,oBAAoB,CAAA;;AAE1D,SAAS,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE;AAC9B,MAAI,EAAE,IAAI,YAAY,YAAY,CAAA,AAAC,EAAE,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;;AAEtE,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAEjB,MAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,MAAM,CAAA;;AAE/B,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;AACpC,MAAI,CAAC,MAAM,GAAG,KAAK,CAAA;AACnB,MAAI,CAAC,UAAU,GAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,AAAC,CAAA;AAC1C,MAAI,CAAC,YAAY,GAAI,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,AAAC,CAAA;AAC5C,MAAI,CAAC,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;CACzD;AACD,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,MAAM,CAAC,CAAA;;AAEnC,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,IAAI,EAAE;AAC5C,MAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,QAAI,GAAG,GAAG,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;AAC1C,OAAG,CAAC,IAAI,GAAG,OAAO,CAAA;AAClB,QAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;AACvB,WAAO,KAAK,CAAA;GACb;AACD,MAAI,IAAI,CAAC,YAAY,EAAE;AACrB,QAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;AACjD,QAAI,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;GAC3C;AACD,MAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AACrC,MAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAC5C,SAAO,CAAC,IAAI,CAAC,MAAM,CAAA;CACpB,CAAA;;AAED,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACxC,MAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACtB,QAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;AACjC,QAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;GAC7C;CACF,CAAA;;AAED,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;AACtC,MAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAM;AAC5C,MAAI,CAAC,KAAK,EAAE,CAAA;AACZ,MAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AAChB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;AACrC,MAAI,CAAC,OAAO,EAAE,CAAA;CACf,CAAA;;AAED,YAAY,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AAC1C,MAAI,CAAC,OAAO,GAAG,IAAI,CAAA;AACnB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;AACrC,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;CACnB,CAAA;;AAED,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACxC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAA;CACnB,CAAA;;AAED,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AAC1C,MAAI,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AACnC,MAAI,CAAC,MAAM,GAAG,KAAK,CAAA;CACpB,CAAA;;AAED,SAAS,oBAAoB,CAAC,QAAQ,EAAE;AACtC,eAAa,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;;AAElC,UAAQ,IAAI,CAAC,QAAQ;AACnB,SAAK,QAAQ;AACX,UAAI,CAAC,KAAK,GAAG,YAAY,CAAA;AACzB,UAAI,CAAC,aAAa,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;AAClC,UAAI,CAAC,YAAY,GAAG,CAAC,CAAA;AACrB,YAAK;AAAA,GACR;CACF;AACD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAA;;AAElD,oBAAoB,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AAChD,MAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,CAAA;AACxD,MAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;AAC/E,MAAI,CAAC,YAAY,GAAG,CAAC,CAAA;AACrB,SAAO,QAAQ,CAAA;CAChB,CAAA;;AAED,SAAS,YAAY,CAAC,MAAM,EAAE;AAC5B,MAAI,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAA,GAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAA;AACzE,MAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;AAErE,MAAI,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;;AAEtE,MAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;AAC9D,QAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;;AAEpE,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,CAAA;AACtE,MAAI,CAAC,YAAY,GAAG,GAAG,CAAA;;AAEvB,SAAO,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;CAC5C","file":"stringstream-compiled.js","sourcesContent":["var util = require('util')\nvar Stream = require('stream')\nvar StringDecoder = require('string_decoder').StringDecoder\n\nmodule.exports = StringStream\nmodule.exports.AlignedStringDecoder = AlignedStringDecoder\n\nfunction StringStream(from, to) {\n  if (!(this instanceof StringStream)) return new StringStream(from, to)\n\n  Stream.call(this)\n\n  if (from == null) from = 'utf8'\n\n  this.readable = this.writable = true\n  this.paused = false\n  this.toEncoding = (to == null ? from : to)\n  this.fromEncoding = (to == null ? '' : from)\n  this.decoder = new AlignedStringDecoder(this.toEncoding)\n}\nutil.inherits(StringStream, Stream)\n\nStringStream.prototype.write = function(data) {\n  if (!this.writable) {\n    var err = new Error('stream not writable')\n    err.code = 'EPIPE'\n    this.emit('error', err)\n    return false\n  }\n  if (this.fromEncoding) {\n    if (Buffer.isBuffer(data)) data = data.toString()\n    data = new Buffer(data, this.fromEncoding)\n  }\n  var string = this.decoder.write(data)\n  if (string.length) this.emit('data', string)\n  return !this.paused\n}\n\nStringStream.prototype.flush = function() {\n  if (this.decoder.flush) {\n    var string = this.decoder.flush()\n    if (string.length) this.emit('data', string)\n  }\n}\n\nStringStream.prototype.end = function() {\n  if (!this.writable && !this.readable) return\n  this.flush()\n  this.emit('end')\n  this.writable = this.readable = false\n  this.destroy()\n}\n\nStringStream.prototype.destroy = function() {\n  this.decoder = null\n  this.writable = this.readable = false\n  this.emit('close')\n}\n\nStringStream.prototype.pause = function() {\n  this.paused = true\n}\n\nStringStream.prototype.resume = function () {\n  if (this.paused) this.emit('drain')\n  this.paused = false\n}\n\nfunction AlignedStringDecoder(encoding) {\n  StringDecoder.call(this, encoding)\n\n  switch (this.encoding) {\n    case 'base64':\n      this.write = alignedWrite\n      this.alignedBuffer = new Buffer(3)\n      this.alignedBytes = 0\n      break\n  }\n}\nutil.inherits(AlignedStringDecoder, StringDecoder)\n\nAlignedStringDecoder.prototype.flush = function() {\n  if (!this.alignedBuffer || !this.alignedBytes) return ''\n  var leftover = this.alignedBuffer.toString(this.encoding, 0, this.alignedBytes)\n  this.alignedBytes = 0\n  return leftover\n}\n\nfunction alignedWrite(buffer) {\n  var rem = (this.alignedBytes + buffer.length) % this.alignedBuffer.length\n  if (!rem && !this.alignedBytes) return buffer.toString(this.encoding)\n\n  var returnBuffer = new Buffer(this.alignedBytes + buffer.length - rem)\n\n  this.alignedBuffer.copy(returnBuffer, 0, 0, this.alignedBytes)\n  buffer.copy(returnBuffer, this.alignedBytes, 0, buffer.length - rem)\n\n  buffer.copy(this.alignedBuffer, 0, buffer.length - rem, buffer.length)\n  this.alignedBytes = rem\n\n  return returnBuffer.toString(this.encoding)\n}\n"]}