{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAA;AACvC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAChC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;;AAElC,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAa,MAAM,EAAE;AAChC,SAAO,UAAU,IAAI,EAAE;AACrB,WAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,YAAM,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AACzC,eAAO,GAAG,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;OAClD,CAAC,CAAA;KACH,CAAC,CAAA;GACH,CAAA;CACF,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;;;AAGvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;AACvC,QAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;CAChD,CAAC,CAAA","file":"index-compiled.js","sourcesContent":["'use strict'\n\nvar Promise = require('pinkie-promise')\nvar runner = require('./runner')\nvar schemas = require('./schemas')\n\nvar promisify = function (schema) {\n  return function (data) {\n    return new Promise(function (resolve, reject) {\n      runner(schema, data, function (err, valid) {\n        return err === null ? resolve(data) : reject(err)\n      })\n    })\n  }\n}\n\nmodule.exports = promisify(schemas.har)\n\n// utility methods for all parts of the schema\nObject.keys(schemas).map(function (name) {\n  module.exports[name] = promisify(schemas[name])\n})\n"]}