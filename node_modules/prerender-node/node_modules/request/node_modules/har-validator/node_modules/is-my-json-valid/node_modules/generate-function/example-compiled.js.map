{"version":3,"sources":["example.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;;AAE1B,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,CAAC,EAAE,CAAC,EAAE;AAC5B,SAAO,CAAC,GAAG,CAAC,CAAA;CACb,CAAA;;AAED,IAAI,oBAAoB,GAAG,SAAvB,oBAAoB,CAAY,GAAG,EAAE;AACvC,MAAI,EAAE,GAAG,MAAM,EAAE,CACd,eAAe,CAAC,CACd,8BAA8B,CAAC;GAC7B,gDAAgD,CAAC,CACnD,GAAG,CAAC,CACJ,iCAAiC,EAAE,GAAG,EAAE,GAAG,CAAC,CAC5C,eAAe,CAAC,CAClB,GAAG,CAAC,CAAA;;;;AAIP,SAAO,EAAE,CAAC,UAAU,CAAC;AACnB,YAAQ,EAAE,QAAQ;GACnB,CAAC,CAAA;CACH,CAAA;;AAED,IAAI,eAAe,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAA;;AAE7C,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAA;AACvC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAA","file":"example-compiled.js","sourcesContent":["var genfun = require('./')\n\nvar multiply = function(a, b) {\n  return a * b\n}\n\nvar addAndMultiplyNumber = function(val) {\n  var fn = genfun()\n    ('function(n) {')\n      ('if (typeof n !== \"number\") {') // ending a line with { will indent the source\n        ('throw new Error(\"argument should be a number\")')\n      ('}')\n      ('var result = multiply(%d, n+%d)', val, val)\n      ('return result')\n    ('}')\n\n  // use fn.toString() if you want to see the generated source\n\n  return fn.toFunction({\n    multiply: multiply\n  })\n}\n\nvar addAndMultiply2 = addAndMultiplyNumber(2)\n\nconsole.log(addAndMultiply2.toString())\nconsole.log('(3 + 2) * 2 =', addAndMultiply2(3))"]}