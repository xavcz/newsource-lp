{"version":3,"sources":["jsonpointer.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,SAAV,OAAO,CAAY,GAAG,EAAE;AAC1B,SAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,UAAS,CAAC,EAAE;AACpC,YAAQ,CAAC;AACP,WAAK,IAAI;AACP,eAAO,GAAG,CAAC;AAAA,AACb,WAAK,IAAI;AACP,eAAO,GAAG,CAAC;AAAA,KACd;AACD,UAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;GAC/C,CAAC,CAAC;CACJ,CAAA;;AAED,IAAI,QAAQ,GAAG,SAAX,QAAQ;;;4BAAiC;QAArB,GAAG;QAAE,OAAO;QAAE,KAAK;;;;AAEzC,QAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;AACpC,QAAG,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAC5B,aAAO,IAAI,CAAC;KACb;AACD,QAAG,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;;WACP,GAAG,CAAC,IAAI,CAAC;YAAE,OAAO;YAAE,KAAK;;AALvC,UAAI;;KAMP;;AAED,QAAG,OAAO,KAAK,KAAK,WAAW,EAAE;;AAE/B,aAAO,GAAG,CAAC,IAAI,CAAC,CAAC;KAClB;;AAED,QAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAG,KAAK,KAAK,IAAI,EAAE;AACjB,aAAO,GAAG,CAAC,IAAI,CAAC,CAAC;KAClB,MAAM;AACL,SAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;KACnB;AACD,WAAO,SAAS,CAAC;GAClB;CAAA,CAAA;;AAED,IAAI,cAAc,GAAG,SAAjB,cAAc,CAAY,GAAG,EAAE,OAAO,EAAE;AAC1C,MAAG,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC1B,UAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;GAC1C;;AAED,MAAG,OAAO,KAAK,EAAE,EAAE;AACjB,WAAO,EAAE,CAAC;GACX;;AAED,MAAG,CAAC,OAAO,EAAE;AACX,UAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;GAC1C;;AAED,SAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7B,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AAC5B,MAAI,KAAK,KAAK,EAAE,EAAE;AAChB,UAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;GAC1C;;AAED,SAAO,OAAO,CAAC;CAChB,CAAA;;AAED,IAAI,GAAG,GAAG,SAAN,GAAG,CAAY,GAAG,EAAE,OAAO,EAAE;AAC/B,SAAO,GAAG,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AACvC,MAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,WAAO,GAAG,CAAC;GACZ;AACD,SAAO,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;CAC/B,CAAA;;AAED,IAAI,GAAG,GAAG,SAAN,GAAG,CAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;AACtC,SAAO,GAAG,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AACvC,MAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,UAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;GACjD;AACD,SAAO,QAAQ,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;CACtC,CAAA;;AAED,OAAO,CAAC,GAAG,GAAG,GAAG,CAAA;AACjB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAA","file":"jsonpointer-compiled.js","sourcesContent":["var untilde = function(str) {\n  return str.replace(/~./g, function(m) {\n    switch (m) {\n      case \"~0\":\n        return \"~\";\n      case \"~1\":\n        return \"/\";\n    }\n    throw new Error(\"Invalid tilde escape: \" + m);\n  });\n}\n\nvar traverse = function(obj, pointer, value) {\n  // assert(isArray(pointer))\n  var part = untilde(pointer.shift());\n  if(!obj.hasOwnProperty(part)) {\n    return null;\n  }\n  if(pointer.length !== 0) { // keep traversin!\n    return traverse(obj[part], pointer, value);\n  }\n  // we're done\n  if(typeof value === \"undefined\") {\n    // just reading\n    return obj[part];\n  }\n  // set new value, return old value\n  var old_value = obj[part];\n  if(value === null) {\n    delete obj[part];\n  } else {\n    obj[part] = value;\n  }\n  return old_value;\n}\n\nvar validate_input = function(obj, pointer) {\n  if(typeof obj !== \"object\") {\n    throw new Error(\"Invalid input object.\");\n  }\n\n  if(pointer === \"\") {\n    return [];\n  }\n\n  if(!pointer) {\n    throw new Error(\"Invalid JSON pointer.\");\n  }\n\n  pointer = pointer.split(\"/\");\n  var first = pointer.shift();\n  if (first !== \"\") {\n    throw new Error(\"Invalid JSON pointer.\");\n  }\n\n  return pointer;\n}\n\nvar get = function(obj, pointer) {\n  pointer = validate_input(obj, pointer);\n  if (pointer.length === 0) {\n    return obj;\n  }\n  return traverse(obj, pointer);\n}\n\nvar set = function(obj, pointer, value) {\n  pointer = validate_input(obj, pointer);\n  if (pointer.length === 0) {\n    throw new Error(\"Invalid JSON pointer for set.\")\n  }\n  return traverse(obj, pointer, value);\n}\n\nexports.get = get\nexports.set = set\n"]}