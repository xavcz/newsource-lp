{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE1B,IAAI,YAAY,GAAG,QAAQ,CAAA;AAC3B,IAAI,UAAU,GAAG,QAAQ,CAAA;;AAEzB,MAAM,CAAC,OAAO,GAAG,YAAW;AAC1B,MAAI,KAAK,GAAG,EAAE,CAAA;AACd,MAAI,MAAM,GAAG,CAAC,CAAA;;AAEd,MAAI,IAAI,GAAG,SAAP,IAAI,CAAY,GAAG,EAAE;AACvB,QAAI,MAAM,GAAG,EAAE,CAAA;AACf,WAAO,MAAM,CAAC,MAAM,GAAG,MAAM,GAAC,CAAC,EAAE,MAAM,IAAI,IAAI,CAAA;AAC/C,SAAK,CAAC,IAAI,CAAC,MAAM,GAAC,GAAG,CAAC,CAAA;GACvB,CAAA;;AAED,MAAI,IAAI,GAAG,SAAP,IAAI,CAAY,GAAG,EAAE;AACvB,QAAI,CAAC,GAAG,EAAE,OAAO,IAAI,CAAA;;AAErB,QAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,EAAE;AAC1E,YAAM,EAAE,CAAA;AACR,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAA;AACxC,YAAM,EAAE,CAAA;AACR,aAAO,IAAI,CAAA;KACZ;AACD,QAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,EAAE;AACxC,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAA;AACxC,YAAM,EAAE,CAAA;AACR,aAAO,IAAI,CAAA;KACZ;AACD,QAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;AAClC,YAAM,EAAE,CAAA;AACR,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAA;AACxC,aAAO,IAAI,CAAA;KACZ;;AAED,QAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAA;AACxC,WAAO,IAAI,CAAA;GACZ,CAAA;;AAED,MAAI,CAAC,QAAQ,GAAG,YAAW;AACzB,WAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GACxB,CAAA;;AAED,MAAI,CAAC,UAAU,GAAG,UAAS,KAAK,EAAE;AAChC,QAAI,GAAG,GAAG,UAAU,GAAC,IAAI,CAAC,QAAQ,EAAE,GAAC,GAAG,CAAA;;AAExC,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE;AACpD,aAAO,GAAG,CAAA;KACX,CAAC,CAAA;;AAEF,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE;AAChC,aAAO,KAAK,CAAC,GAAG,CAAC,CAAA;KAClB,CAAC,CAAA;;AAEF,WAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;GAChE,CAAA;;AAED,MAAI,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;;AAEjD,SAAO,IAAI,CAAA;CACZ,CAAA","file":"index-compiled.js","sourcesContent":["var util = require('util')\n\nvar INDENT_START = /[\\{\\[]/\nvar INDENT_END = /[\\}\\]]/\n\nmodule.exports = function() {\n  var lines = []\n  var indent = 0\n\n  var push = function(str) {\n    var spaces = ''\n    while (spaces.length < indent*2) spaces += '  '\n    lines.push(spaces+str)\n  }\n\n  var line = function(fmt) {\n    if (!fmt) return line\n\n    if (INDENT_END.test(fmt.trim()[0]) && INDENT_START.test(fmt[fmt.length-1])) {\n      indent--\n      push(util.format.apply(util, arguments))\n      indent++\n      return line\n    }\n    if (INDENT_START.test(fmt[fmt.length-1])) {\n      push(util.format.apply(util, arguments))\n      indent++\n      return line\n    }\n    if (INDENT_END.test(fmt.trim()[0])) {\n      indent--\n      push(util.format.apply(util, arguments))\n      return line\n    }\n\n    push(util.format.apply(util, arguments))\n    return line\n  }\n\n  line.toString = function() {\n    return lines.join('\\n')\n  }\n\n  line.toFunction = function(scope) {\n    var src = 'return ('+line.toString()+')'\n\n    var keys = Object.keys(scope || {}).map(function(key) {\n      return key\n    })\n\n    var vals = keys.map(function(key) {\n      return scope[key]\n    })\n\n    return Function.apply(null, keys.concat(src)).apply(null, vals)\n  }\n\n  if (arguments.length) line.apply(null, arguments)\n\n  return line\n}\n"]}