{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// Load modules\n\nvar Dns = require('dns');\nvar Dgram = require('dgram');\nvar Lab = require('lab');\nvar Sntp = require('../lib');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar before = lab.before;\nvar after = lab.after;\nvar describe = lab.experiment;\nvar it = lab.test;\nvar expect = Lab.expect;\n\n\ndescribe('SNTP', function () {\n\n    describe('#time', function () {\n\n        it('returns consistent result over multiple tries', function (done) {\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                var t1 = time.t;\n\n                Sntp.time(function (err, time) {\n\n                    expect(err).to.not.exist;\n                    expect(time).to.exist;\n                    var t2 = time.t;\n                    expect(Math.abs(t1 - t2)).is.below(200);\n                    done();\n                });\n            });\n        });\n\n        it('resolves reference IP', function (done) {\n\n            Sntp.time({ host: 'ntp.exnet.com', resolveReference: true }, function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                expect(time.referenceHost).to.exist;\n                done();\n            });\n        });\n\n        it('times out on no response', function (done) {\n\n            Sntp.time({ port: 124, timeout: 100 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Timeout');\n                done();\n            });\n        });\n\n        it('errors on error event', { parallel: false }, function (done) {\n\n            var orig = Dgram.createSocket;\n            Dgram.createSocket = function (type) {\n\n                Dgram.createSocket = orig;\n                var socket = Dgram.createSocket(type);\n                setImmediate(function () { socket.emit('error', new Error('Fake')) });\n                return socket;\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Fake');\n                done();\n            });\n        });\n\n        it('errors on incorrect sent size', { parallel: false }, function (done) {\n\n            var orig = Dgram.Socket.prototype.send;\n            Dgram.Socket.prototype.send = function (buf, offset, length, port, address, callback) {\n\n                Dgram.Socket.prototype.send = orig;\n                return callback(null, 40);\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Could not send entire message');\n                done();\n            });\n        });\n\n        it('times out on invalid host', function (done) {\n\n            Sntp.time({ host: 'error', timeout: 10000 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.contain('getaddrinfo');\n                done();\n            });\n        });\n\n        it('fails on bad response buffer size', function (done) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n                var message = new Buffer(10);\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        var messup = function (bytes) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n\n                var message = new Buffer([\n                    0x24, 0x01, 0x00, 0xe3,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x41, 0x43, 0x54, 0x53,\n                    0xd4, 0xa8, 0x2d, 0xc7,\n                    0x1c, 0x5d, 0x49, 0x1b,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x67, 0xef, 0x9d, 0xb2,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xed, 0xb5, 0xfb,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xee, 0x6c, 0xc5\n                ]);\n\n                for (var i = 0, il = bytes.length; i < il; ++i) {\n                    message[bytes[i][0]] = bytes[i][1];\n                }\n\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n        };\n\n        it('fails on bad version', function (done) {\n\n            messup([[0, (0 << 6) + (3 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.version).to.equal(3);\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originateTimestamp', function (done) {\n\n            messup([[24, 0x83], [25, 0xaa], [26, 0x7e], [27, 0x80], [28, 0], [29, 0], [30, 0], [31, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad receiveTimestamp', function (done) {\n\n            messup([[32, 0x83], [33, 0xaa], [34, 0x7e], [35, 0x80], [36, 0], [37, 0], [38, 0], [39, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originate timestamp and alarm li', function (done) {\n\n            messup([[0, (3 << 6) + (4 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Wrong originate timestamp');\n                expect(time.leapIndicator).to.equal('alarm');\n                done();\n            });\n        });\n\n        it('returns time with death stratum and last61 li', function (done) {\n\n            messup([[0, (1 << 6) + (4 << 3) + (4 << 0)], [1, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('death');\n                expect(time.leapIndicator).to.equal('last-minute-61');\n                done();\n            });\n        });\n\n        it('returns time with reserved stratum and last59 li', function (done) {\n\n            messup([[0, (2 << 6) + (4 << 3) + (4 << 0)], [1, 0x1f]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('reserved');\n                expect(time.leapIndicator).to.equal('last-minute-59');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-active)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (1 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-active');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-passive)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (2 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-passive');\n                done();\n            });\n        });\n\n        it('fails on bad mode (client)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (3 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('client');\n                done();\n            });\n        });\n\n        it('fails on bad mode (broadcast)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (5 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('broadcast');\n                done();\n            });\n        });\n\n        it('fails on bad mode (reserved)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (6 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('reserved');\n                done();\n            });\n        });\n    });\n\n    describe('#offset', function () {\n\n        it('gets the current offset', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                done();\n            });\n        });\n\n        it('gets the current offset from cache', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({}, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ host: 'nist1-sj.ustiming.org' }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ port: 123 }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('fails getting the current offset on invalid server', function (done) {\n\n            Sntp.offset({ host: 'error' }, function (err, offset) {\n\n                expect(err).to.exist;\n                expect(offset).to.equal(0);\n                done();\n            });\n        });\n    });\n\n    describe('#now', function () {\n\n        it('starts auto-sync, gets now, then stops', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start(function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                Sntp.stop();\n\n                done();\n            });\n        });\n\n        it('starts twice', function (done) {\n\n            Sntp.start(function () {\n\n                Sntp.start(function () {\n\n                    var now = Sntp.now();\n                    expect(now).to.not.equal(Date.now());\n                    Sntp.stop();\n\n                    done();\n                });\n            });\n        });\n\n        it('starts auto-sync, gets now, waits, gets again after timeout', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start({ clockSyncRefresh: 100 }, function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                expect(now).to.equal(Sntp.now());\n\n                setTimeout(function () {\n\n                    expect(Sntp.now()).to.not.equal(now);\n                    Sntp.stop();\n                    done();\n                }, 110);\n            });\n        });\n    });\n});\n\n"]}