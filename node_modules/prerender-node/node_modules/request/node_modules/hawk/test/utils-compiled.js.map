{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\nvar Package = require('../package.json');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Utils', function () {\r\n\r\n    describe('parseHost()', function () {\r\n\r\n        it('returns port 80 for non tls node request', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: 'example.com',\r\n                    'content-type': 'text/plain;x=y'\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(80);\r\n            done();\r\n        });\r\n\r\n        it('returns port 443 for non tls node request', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: 'example.com',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(443);\r\n            done();\r\n        });\r\n\r\n        it('returns port 443 for non tls node request (IPv6)', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: '[123:123:123]',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(443);\r\n            done();\r\n        });\r\n\r\n        it('parses IPv6 headers', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: '[123:123:123]:8000',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            var host = Hawk.utils.parseHost(req, 'Host');\r\n            expect(host.port).to.equal('8000');\r\n            expect(host.name).to.equal('[123:123:123]');\r\n            done();\r\n        });\r\n\r\n        it('errors on header too long', function (done) {\r\n\r\n            var long = '';\r\n            for (var i = 0; i < 5000; ++i) {\r\n                long += 'x';\r\n            }\r\n\r\n            expect(Hawk.utils.parseHost({ headers: { host: long } })).to.be.null();\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('parseAuthorizationHeader()', function () {\r\n\r\n        it('errors on header too long', function (done) {\r\n\r\n            var long = 'Scheme a=\"';\r\n            for (var i = 0; i < 5000; ++i) {\r\n                long += 'x';\r\n            }\r\n            long += '\"';\r\n\r\n            var err = Hawk.utils.parseAuthorizationHeader(long, ['a']);\r\n            expect(err).to.be.instanceof(Error);\r\n            expect(err.message).to.equal('Header length too long');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('version()', function () {\r\n\r\n        it('returns the correct package version number', function (done) {\r\n\r\n            expect(Hawk.utils.version()).to.equal(Package.version);\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('unauthorized()', function () {\r\n\r\n        it('returns a hawk 401', function (done) {\r\n\r\n            expect(Hawk.utils.unauthorized('kaboom').output.headers['WWW-Authenticate']).to.equal('Hawk error=\"kaboom\"');\r\n            done();\r\n        });\r\n\r\n        it('supports attributes', function (done) {\r\n\r\n            expect(Hawk.utils.unauthorized('kaboom', { a: 'b' }).output.headers['WWW-Authenticate']).to.equal('Hawk a=\"b\", error=\"kaboom\"');\r\n            done();\r\n        });\r\n    });\r\n});\r\n"]}