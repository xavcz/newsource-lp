{"version":3,"sources":["crypto.js"],"names":[],"mappings":";;;;AAEA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;;;AAKzB,IAAI,SAAS,GAAG,EAAE,CAAC;;;;AAKnB,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;AACrC,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC;AAC9B,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;AAClB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;AAGzB,QAAQ,CAAC,QAAQ,EAAE,YAAY;;AAE3B,YAAQ,CAAC,4BAA4B,EAAE,YAAY;;AAE/C,UAAE,CAAC,yCAAyC,EAAE,UAAU,IAAI,EAAE;;AAE1D,kBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE;AAClD,kBAAE,EAAE,UAAU;AACd,qBAAK,EAAE,QAAQ;AACf,sBAAM,EAAE,KAAK;AACb,wBAAQ,EAAE,qBAAqB;AAC/B,oBAAI,EAAE,aAAa;AACnB,oBAAI,EAAE,IAAI;aACb,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,sFAAsF,CAAC,CAAC;;AAErG,gBAAI,EAAE,CAAC;SACV,CAAC,CAAC;;AAEH,UAAE,CAAC,+CAA+C,EAAE,UAAU,IAAI,EAAE;;AAEhE,kBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE;AAClD,kBAAE,EAAE,UAAU;AACd,qBAAK,EAAE,QAAQ;AACf,sBAAM,EAAE,KAAK;AACb,wBAAQ,EAAE,qBAAqB;AAC/B,oBAAI,EAAE,aAAa;AACnB,oBAAI,EAAE,IAAI;AACV,mBAAG,EAAE,uBAAuB;aAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,2GAA2G,CAAC,CAAC;;AAE1H,gBAAI,EAAE,CAAC;SACV,CAAC,CAAC;;AAEH,UAAE,CAAC,yDAAyD,EAAE,UAAU,IAAI,EAAE;;AAE1E,kBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE;AAClD,kBAAE,EAAE,UAAU;AACd,qBAAK,EAAE,QAAQ;AACf,sBAAM,EAAE,KAAK;AACb,wBAAQ,EAAE,qBAAqB;AAC/B,oBAAI,EAAE,aAAa;AACnB,oBAAI,EAAE,IAAI;AACV,oBAAI,EAAE,8CAA8C;AACpD,mBAAG,EAAE,uBAAuB;aAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,uJAAuJ,CAAC,CAAC;;AAEtK,gBAAI,EAAE,CAAC;SACV,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"crypto-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Crypto', function () {\r\n\r\n    describe('generateNormalizedString()', function () {\r\n\r\n        it('should return a valid normalized string', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\n\\n\\n');\r\n\r\n            done();\r\n        });\r\n\r\n        it('should return a valid normalized string (ext)', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080,\r\n                ext: 'this is some app data'\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\n\\nthis is some app data\\n');\r\n\r\n            done();\r\n        });\r\n\r\n        it('should return a valid normalized string (payload + ext)', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080,\r\n                hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\r\n                ext: 'this is some app data'\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\nU4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=\\nthis is some app data\\n');\r\n\r\n            done();\r\n        });\r\n    });\r\n});\r\n"]}