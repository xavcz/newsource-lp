{"version":3,"sources":["crypto.js"],"names":[],"mappings":"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","file":"crypto-compiled.js","sourcesContent":["// Load modules\r\n\r\nvar Crypto = require('crypto');\r\nvar Url = require('url');\r\nvar Utils = require('./utils');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// MAC normalization format version\r\n\r\nexports.headerVersion = '1';                        // Prevent comparison of mac values generated with different normalized string formats\r\n\r\n\r\n// Supported HMAC algorithms\r\n\r\nexports.algorithms = ['sha1', 'sha256'];\r\n\r\n\r\n// Calculate the request MAC\r\n\r\n/*\r\n    type: 'header',                                 // 'header', 'bewit', 'response'\r\n    credentials: {\r\n        key: 'aoijedoaijsdlaksjdl',\r\n        algorithm: 'sha256'                         // 'sha1', 'sha256'\r\n    },\r\n    options: {\r\n        method: 'GET',\r\n        resource: '/resource?a=1&b=2',\r\n        host: 'example.com',\r\n        port: 8080,\r\n        ts: 1357718381034,\r\n        nonce: 'd3d345f',\r\n        hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\r\n        ext: 'app-specific-data',\r\n        app: 'hf48hd83qwkj',                        // Application id (Oz)\r\n        dlg: 'd8djwekds9cj'                         // Delegated by application id (Oz), requires options.app\r\n    }\r\n*/\r\n\r\nexports.calculateMac = function (type, credentials, options) {\r\n\r\n    var normalized = exports.generateNormalizedString(type, options);\r\n\r\n    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\r\n    var digest = hmac.digest('base64');\r\n    return digest;\r\n};\r\n\r\n\r\nexports.generateNormalizedString = function (type, options) {\r\n\r\n    var resource = options.resource || '';\r\n    if (resource &&\r\n        resource[0] !== '/') {\r\n\r\n        var url = Url.parse(resource, false);\r\n        resource = url.path;                        // Includes query\r\n    }\r\n\r\n    var normalized = 'hawk.' + exports.headerVersion + '.' + type + '\\n' +\r\n                     options.ts + '\\n' +\r\n                     options.nonce + '\\n' +\r\n                     (options.method || '').toUpperCase() + '\\n' +\r\n                     resource + '\\n' +\r\n                     options.host.toLowerCase() + '\\n' +\r\n                     options.port + '\\n' +\r\n                     (options.hash || '') + '\\n';\r\n\r\n    if (options.ext) {\r\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\r\n    }\r\n\r\n    normalized += '\\n';\r\n\r\n    if (options.app) {\r\n        normalized += options.app + '\\n' +\r\n                      (options.dlg || '') + '\\n';\r\n    }\r\n\r\n    return normalized;\r\n};\r\n\r\n\r\nexports.calculatePayloadHash = function (payload, algorithm, contentType) {\r\n\r\n    var hash = exports.initializePayloadHash(algorithm, contentType);\r\n    hash.update(payload || '');\r\n    return exports.finalizePayloadHash(hash);\r\n};\r\n\r\n\r\nexports.initializePayloadHash = function (algorithm, contentType) {\r\n\r\n    var hash = Crypto.createHash(algorithm);\r\n    hash.update('hawk.' + exports.headerVersion + '.payload\\n');\r\n    hash.update(Utils.parseContentType(contentType) + '\\n');\r\n    return hash;\r\n};\r\n\r\n\r\nexports.finalizePayloadHash = function (hash) {\r\n\r\n    hash.update('\\n');\r\n    return hash.digest('base64');\r\n};\r\n\r\n\r\nexports.calculateTsMac = function (ts, credentials) {\r\n\r\n    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);\r\n    hmac.update('hawk.' + exports.headerVersion + '.ts\\n' + ts + '\\n');\r\n    return hmac.digest('base64');\r\n};\r\n\r\n\r\nexports.timestampMessage = function (credentials, localtimeOffsetMsec) {\r\n\r\n    var now = Utils.nowSecs(localtimeOffsetMsec);\r\n    var tsm = exports.calculateTsMac(now, credentials);\r\n    return { ts: now, tsm: tsm };\r\n};\r\n"]}