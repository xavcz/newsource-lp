{"version":3,"sources":["uuid.js"],"names":[],"mappings":"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","file":"uuid-compiled.js","sourcesContent":["//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if ('function' === typeof require) {\n      try {\n        var _rb = require('crypto').randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define(function() {return uuid;});\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);\n"]}