{"version":3,"sources":["_stream_readable.js"],"names":[],"mappings":"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","file":"_stream_readable-compiled.js","sourcesContent":["'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events');\n\n/*<replacement>*/\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = undefined;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended) return 0;\n\n  if (state.objectMode) return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length) return state.buffer[0].length;else return state.length;\n  }\n\n  if (n <= 0) return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else {\n      return state.length;\n    }\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading) n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended) state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0) endReadable(this);\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      if (state.pipesCount === 1 && state.pipes[0] === dest && src.listenerCount('data') === 1 && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error) dest.on('error', onerror);else if (isArray(dest._events.error)) dest._events.error.unshift(onerror);else dest._events.error = [onerror, dest._events.error];\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && !this._readableState.endEmitted) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0) return null;\n\n  if (length === 0) ret = null;else if (objectMode) ret = list.shift();else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode) ret = list.join('');else if (list.length === 1) ret = list[0];else ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode) ret = '';else ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode) ret += buf.slice(0, cpy);else buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length) list[0] = buf.slice(cpy);else list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}"]}