{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict'\n\nvar net = require('net')\n  , tls = require('tls')\n  , http = require('http')\n  , https = require('https')\n  , events = require('events')\n  , assert = require('assert')\n  , util = require('util')\n  ;\n\nexports.httpOverHttp = httpOverHttp\nexports.httpsOverHttp = httpsOverHttp\nexports.httpOverHttps = httpOverHttps\nexports.httpsOverHttps = httpsOverHttps\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options)\n  agent.request = http.request\n  return agent\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options)\n  agent.request = http.request\n  agent.createSocket = createSecureSocket\n  agent.defaultPort = 443\n  return agent\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options)\n  agent.request = https.request\n  return agent\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options)\n  agent.request = https.request\n  agent.createSocket = createSecureSocket\n  agent.defaultPort = 443\n  return agent\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this\n  self.options = options || {}\n  self.proxyOptions = self.options.proxy || {}\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets\n  self.requests = []\n  self.sockets = []\n\n  self.on('free', function onFree(socket, host, port) {\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i]\n      if (pending.host === host && pending.port === port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1)\n        pending.request.onSocket(socket)\n        return\n      }\n    }\n    socket.destroy()\n    self.removeSocket(socket)\n  })\n}\nutil.inherits(TunnelingAgent, events.EventEmitter)\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, options) {\n  var self = this\n\n   // Legacy API: addRequest(req, host, port, path)\n  if (typeof options === 'string') {\n    options = {\n      host: options,\n      port: arguments[2],\n      path: arguments[3]\n    };\n  }\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push({host: options.host, port: options.port, request: req})\n    return\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createConnection({host: options.host, port: options.port, request: req})\n}\n\nTunnelingAgent.prototype.createConnection = function createConnection(pending) {\n  var self = this\n\n  self.createSocket(pending, function(socket) {\n    socket.on('free', onFree)\n    socket.on('close', onCloseOrRemove)\n    socket.on('agentRemove', onCloseOrRemove)\n    pending.request.onSocket(socket)\n\n    function onFree() {\n      self.emit('free', socket, pending.host, pending.port)\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket)\n      socket.removeListener('free', onFree)\n      socket.removeListener('close', onCloseOrRemove)\n      socket.removeListener('agentRemove', onCloseOrRemove)\n    }\n  })\n}\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this\n  var placeholder = {}\n  self.sockets.push(placeholder)\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, \n    { method: 'CONNECT'\n    , path: options.host + ':' + options.port\n    , agent: false\n    }\n  )\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {}\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64')\n  }\n\n  debug('making CONNECT request')\n  var connectReq = self.request(connectOptions)\n  connectReq.useChunkedEncodingByDefault = false // for v0.6\n  connectReq.once('response', onResponse) // for v0.6\n  connectReq.once('upgrade', onUpgrade)   // for v0.6\n  connectReq.once('connect', onConnect)   // for v0.7 or later\n  connectReq.once('error', onError)\n  connectReq.end()\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head)\n    })\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners()\n    socket.removeAllListeners()\n\n    if (res.statusCode === 200) {\n      assert.equal(head.length, 0)\n      debug('tunneling connection has established')\n      self.sockets[self.sockets.indexOf(placeholder)] = socket\n      cb(socket)\n    } else {\n      debug('tunneling socket could not be established, statusCode=%d', res.statusCode)\n      var error = new Error('tunneling socket could not be established, ' + 'statusCode=' + res.statusCode)\n      error.code = 'ECONNRESET'\n      options.request.emit('error', error)\n      self.removeSocket(placeholder)\n    }\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners()\n\n    debug('tunneling socket could not be established, cause=%s\\n', cause.message, cause.stack)\n    var error = new Error('tunneling socket could not be established, ' + 'cause=' + cause.message)\n    error.code = 'ECONNRESET'\n    options.request.emit('error', error)\n    self.removeSocket(placeholder)\n  }\n}\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) return\n  \n  this.sockets.splice(pos, 1)\n\n  var pending = this.requests.shift()\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createConnection(pending)\n  }\n}\n\nfunction createSecureSocket(options, cb) {\n  var self = this\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, mergeOptions({}, self.options, \n      { servername: options.host\n      , socket: socket\n      }\n    ))\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket\n    cb(secureSocket)\n  })\n}\n\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i]\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides)\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j]\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k]\n        }\n      }\n    }\n  }\n  return target\n}\n\n\nvar debug\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments)\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0]\n    } else {\n      args.unshift('TUNNEL:')\n    }\n    console.error.apply(console, args)\n  }\n} else {\n  debug = function() {}\n}\nexports.debug = debug // for test\n"]}