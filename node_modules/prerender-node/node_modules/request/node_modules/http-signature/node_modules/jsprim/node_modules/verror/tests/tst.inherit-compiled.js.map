{"version":3,"sources":["tst.inherit.js"],"names":[],"mappings":"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","file":"tst.inherit-compiled.js","sourcesContent":["/*\n * tst.inherit.js: test that inheriting from VError and WError work as expected.\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\nvar mod_verror = require('../lib/verror');\n\nvar VError = mod_verror.VError;\nvar WError = mod_verror.WError;\nvar err, suberr;\n\nfunction VErrorChild()\n{\n\tVError.apply(this, Array.prototype.slice.call(arguments));\n}\n\nmod_util.inherits(VErrorChild, VError);\nVErrorChild.prototype.name = 'VErrorChild';\n\n\nfunction WErrorChild()\n{\n\tWError.apply(this, Array.prototype.slice.call(arguments));\n}\n\nmod_util.inherits(WErrorChild, WError);\nWErrorChild.prototype.name = 'WErrorChild';\n\n\nsuberr = new Error('root cause');\nerr = new VErrorChild(suberr, 'top');\nmod_assert.ok(err instanceof Error);\nmod_assert.ok(err instanceof VError);\nmod_assert.ok(err instanceof VErrorChild);\nmod_assert.equal(err.cause(), suberr);\nmod_assert.equal(err.message, 'top: root cause');\nmod_assert.equal(err.toString(), 'VErrorChild: top: root cause');\nmod_assert.equal(err.stack.split('\\n')[0], 'VErrorChild: top: root cause');\n\nsuberr = new Error('root cause');\nerr = new WErrorChild(suberr, 'top');\nmod_assert.ok(err instanceof Error);\nmod_assert.ok(err instanceof WError);\nmod_assert.ok(err instanceof WErrorChild);\nmod_assert.equal(err.cause(), suberr);\nmod_assert.equal(err.message, 'top');\nmod_assert.equal(err.toString(),\n\t'WErrorChild: top; caused by Error: root cause');\nmod_assert.equal(err.stack.split('\\n')[0],\n\t'WErrorChild: top; caused by Error: root cause');\n\n\n// Test that `<Ctor>.toString()` uses the ctor name. I.e. setting\n// `<Ctor>.prototype.name` isn't necessary.\nfunction VErrorChildNoName() {\n\tVError.apply(this, Array.prototype.slice.call(arguments));\n}\nmod_util.inherits(VErrorChildNoName, VError);\nerr = new VErrorChildNoName('top');\nmod_assert.equal(err.toString(), 'VErrorChildNoName: top');\n\nfunction WErrorChildNoName() {\n\tWError.apply(this, Array.prototype.slice.call(arguments));\n}\nmod_util.inherits(WErrorChildNoName, WError);\nerr = new WErrorChildNoName('top');\nmod_assert.equal(err.toString(), 'WErrorChildNoName: top');\n\n\n// Test that `<Ctor>.prototype.name` can be used for the `.toString()`\n// when the ctor is anonymous.\nvar VErrorChildAnon = function () {\n\tVError.apply(this, Array.prototype.slice.call(arguments));\n};\nmod_util.inherits(VErrorChildAnon, VError);\nVErrorChildAnon.prototype.name = 'VErrorChildAnon';\nerr = new VErrorChildAnon('top');\nmod_assert.equal(err.toString(), 'VErrorChildAnon: top');\n\nvar WErrorChildAnon = function () {\n\tWError.apply(this, Array.prototype.slice.call(arguments));\n};\nmod_util.inherits(WErrorChildAnon, WError);\nWErrorChildAnon.prototype.name = 'WErrorChildAnon';\nerr = new WErrorChildAnon('top');\nmod_assert.equal(err.toString(), 'WErrorChildAnon: top');\n\n\n// Test get appropriate exception name in `.toString()` when reconstituting\n// an error instance a la:\n//    https://github.com/mcavage/node-fast/blob/master/lib/client.js#L215\nerr = new VError('top');\nerr.name = 'CustomNameError';\nmod_assert.equal(err.toString(), 'CustomNameError: top');\n\nerr = new WError('top');\nerr.name = 'CustomNameError';\nmod_assert.equal(err.toString(), 'CustomNameError: top');\n"]}