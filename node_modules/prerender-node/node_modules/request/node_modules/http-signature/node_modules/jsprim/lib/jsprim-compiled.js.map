{"version":3,"sources":["jsprim.js"],"names":[],"mappings":"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","file":"jsprim-compiled.js","sourcesContent":["/*\n * lib/jsprim.js: utilities for primitive JavaScript types\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\nvar mod_extsprintf = require('extsprintf');\nvar mod_verror = require('verror');\nvar mod_jsonschema = require('json-schema');\n\n/*\n * Public interface\n */\nexports.deepCopy = deepCopy;\nexports.deepEqual = deepEqual;\nexports.isEmpty = isEmpty;\nexports.forEachKey = forEachKey;\nexports.pluck = pluck;\nexports.flattenObject = flattenObject;\nexports.flattenIter = flattenIter;\nexports.validateJsonObject = validateJsonObjectJS;\nexports.validateJsonObjectJS = validateJsonObjectJS;\nexports.randElt = randElt;\nexports.extraProperties = extraProperties;\nexports.mergeObjects = mergeObjects;\n\nexports.startsWith = startsWith;\nexports.endsWith = endsWith;\n\nexports.iso8601 = iso8601;\nexports.rfc1123 = rfc1123;\nexports.parseDateTime = parseDateTime;\n\nexports.hrtimediff = hrtimeDiff;\nexports.hrtimeDiff = hrtimeDiff;\nexports.hrtimeAccum = hrtimeAccum;\nexports.hrtimeAdd = hrtimeAdd;\nexports.hrtimeNanosec = hrtimeNanosec;\nexports.hrtimeMicrosec = hrtimeMicrosec;\nexports.hrtimeMillisec = hrtimeMillisec;\n\n\n/*\n * Deep copy an acyclic *basic* Javascript object.  This only handles basic\n * scalars (strings, numbers, booleans) and arbitrarily deep arrays and objects\n * containing these.  This does *not* handle instances of other classes.\n */\nfunction deepCopy(obj)\n{\n\tvar ret, key;\n\tvar marker = '__deepCopy';\n\n\tif (obj && obj[marker])\n\t\tthrow (new Error('attempted deep copy of cyclic object'));\n\n\tif (obj && obj.constructor == Object) {\n\t\tret = {};\n\t\tobj[marker] = true;\n\n\t\tfor (key in obj) {\n\t\t\tif (key == marker)\n\t\t\t\tcontinue;\n\n\t\t\tret[key] = deepCopy(obj[key]);\n\t\t}\n\n\t\tdelete (obj[marker]);\n\t\treturn (ret);\n\t}\n\n\tif (obj && obj.constructor == Array) {\n\t\tret = [];\n\t\tobj[marker] = true;\n\n\t\tfor (key = 0; key < obj.length; key++)\n\t\t\tret.push(deepCopy(obj[key]));\n\n\t\tdelete (obj[marker]);\n\t\treturn (ret);\n\t}\n\n\t/*\n\t * It must be a primitive type -- just return it.\n\t */\n\treturn (obj);\n}\n\nfunction deepEqual(obj1, obj2)\n{\n\tif (typeof (obj1) != typeof (obj2))\n\t\treturn (false);\n\n\tif (obj1 === null || obj2 === null || typeof (obj1) != 'object')\n\t\treturn (obj1 === obj2);\n\n\tif (obj1.constructor != obj2.constructor)\n\t\treturn (false);\n\n\tvar k;\n\tfor (k in obj1) {\n\t\tif (!obj2.hasOwnProperty(k))\n\t\t\treturn (false);\n\n\t\tif (!deepEqual(obj1[k], obj2[k]))\n\t\t\treturn (false);\n\t}\n\n\tfor (k in obj2) {\n\t\tif (!obj1.hasOwnProperty(k))\n\t\t\treturn (false);\n\t}\n\n\treturn (true);\n}\n\nfunction isEmpty(obj)\n{\n\tvar key;\n\tfor (key in obj)\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction forEachKey(obj, callback)\n{\n\tfor (var key in obj)\n\t\tcallback(key, obj[key]);\n}\n\nfunction pluck(obj, key)\n{\n\tmod_assert.equal(typeof (key), 'string');\n\treturn (pluckv(obj, key));\n}\n\nfunction pluckv(obj, key)\n{\n\tif (obj === null || typeof (obj) !== 'object')\n\t\treturn (undefined);\n\n\tif (obj.hasOwnProperty(key))\n\t\treturn (obj[key]);\n\n\tvar i = key.indexOf('.');\n\tif (i == -1)\n\t\treturn (undefined);\n\n\tvar key1 = key.substr(0, i);\n\tif (!obj.hasOwnProperty(key1))\n\t\treturn (undefined);\n\n\treturn (pluckv(obj[key1], key.substr(i + 1)));\n}\n\n/*\n * Invoke callback(row) for each entry in the array that would be returned by\n * flattenObject(data, depth).  This is just like flattenObject(data,\n * depth).forEach(callback), except that the intermediate array is never\n * created.\n */\nfunction flattenIter(data, depth, callback)\n{\n\tdoFlattenIter(data, depth, [], callback);\n}\n\nfunction doFlattenIter(data, depth, accum, callback)\n{\n\tvar each;\n\tvar key;\n\n\tif (depth === 0) {\n\t\teach = accum.slice(0);\n\t\teach.push(data);\n\t\tcallback(each);\n\t\treturn;\n\t}\n\n\tmod_assert.ok(data !== null);\n\tmod_assert.equal(typeof (data), 'object');\n\tmod_assert.equal(typeof (depth), 'number');\n\tmod_assert.ok(depth >= 0);\n\n\tfor (key in data) {\n\t\teach = accum.slice(0);\n\t\teach.push(key);\n\t\tdoFlattenIter(data[key], depth - 1, each, callback);\n\t}\n}\n\nfunction flattenObject(data, depth)\n{\n\tif (depth === 0)\n\t\treturn ([ data ]);\n\n\tmod_assert.ok(data !== null);\n\tmod_assert.equal(typeof (data), 'object');\n\tmod_assert.equal(typeof (depth), 'number');\n\tmod_assert.ok(depth >= 0);\n\n\tvar rv = [];\n\tvar key;\n\n\tfor (key in data) {\n\t\tflattenObject(data[key], depth - 1).forEach(function (p) {\n\t\t\trv.push([ key ].concat(p));\n\t\t});\n\t}\n\n\treturn (rv);\n}\n\nfunction startsWith(str, prefix)\n{\n\treturn (str.substr(0, prefix.length) == prefix);\n}\n\nfunction endsWith(str, suffix)\n{\n\treturn (str.substr(\n\t    str.length - suffix.length, suffix.length) == suffix);\n}\n\nfunction iso8601(d)\n{\n\tif (typeof (d) == 'number')\n\t\td = new Date(d);\n\tmod_assert.ok(d.constructor === Date);\n\treturn (mod_extsprintf.sprintf('%4d-%02d-%02dT%02d:%02d:%02d.%03dZ',\n\t    d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(),\n\t    d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(),\n\t    d.getUTCMilliseconds()));\n}\n\nvar RFC1123_MONTHS = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar RFC1123_DAYS = [\n    'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction rfc1123(date) {\n\treturn (mod_extsprintf.sprintf('%s, %02d %s %04d %02d:%02d:%02d GMT',\n\t    RFC1123_DAYS[date.getUTCDay()], date.getUTCDate(),\n\t    RFC1123_MONTHS[date.getUTCMonth()], date.getUTCFullYear(),\n\t    date.getUTCHours(), date.getUTCMinutes(),\n\t    date.getUTCSeconds()));\n}\n\n/*\n * Parses a date expressed as a string, as either a number of milliseconds since\n * the epoch or any string format that Date accepts, giving preference to the\n * former where these two sets overlap (e.g., small numbers).\n */\nfunction parseDateTime(str)\n{\n\t/*\n\t * This is irritatingly implicit, but significantly more concise than\n\t * alternatives.  The \"+str\" will convert a string containing only a\n\t * number directly to a Number, or NaN for other strings.  Thus, if the\n\t * conversion succeeds, we use it (this is the milliseconds-since-epoch\n\t * case).  Otherwise, we pass the string directly to the Date\n\t * constructor to parse.\n\t */\n\tvar numeric = +str;\n\tif (!isNaN(numeric)) {\n\t\treturn (new Date(numeric));\n\t} else {\n\t\treturn (new Date(str));\n\t}\n}\n\nfunction validateJsonObjectJS(schema, input)\n{\n\tvar report = mod_jsonschema.validate(input, schema);\n\n\tif (report.errors.length === 0)\n\t\treturn (null);\n\n\t/* Currently, we only do anything useful with the first error. */\n\tvar error = report.errors[0];\n\n\t/* The failed property is given by a URI with an irrelevant prefix. */\n\tvar propname = error['property'];\n\tvar reason = error['message'].toLowerCase();\n\tvar i, j;\n\n\t/*\n\t * There's at least one case where the property error message is\n\t * confusing at best.  We work around this here.\n\t */\n\tif ((i = reason.indexOf('the property ')) != -1 &&\n\t    (j = reason.indexOf(' is not defined in the schema and the ' +\n\t    'schema does not allow additional properties')) != -1) {\n\t\ti += 'the property '.length;\n\t\tif (propname === '')\n\t\t\tpropname = reason.substr(i, j - i);\n\t\telse\n\t\t\tpropname = propname + '.' + reason.substr(i, j - i);\n\n\t\treason = 'unsupported property';\n\t}\n\n\tvar rv = new mod_verror.VError('property \"%s\": %s', propname, reason);\n\trv.jsv_details = error;\n\treturn (rv);\n}\n\nfunction randElt(arr)\n{\n\tmod_assert.ok(Array.isArray(arr) && arr.length > 0,\n\t    'randElt argument must be a non-empty array');\n\n\treturn (arr[Math.floor(Math.random() * arr.length)]);\n}\n\nfunction assertHrtime(a)\n{\n\tmod_assert.ok(a[0] >= 0 && a[1] >= 0,\n\t    'negative numbers not allowed in hrtimes');\n\tmod_assert.ok(a[1] < 1e9, 'nanoseconds column overflow');\n}\n\n/*\n * Compute the time elapsed between hrtime readings A and B, where A is later\n * than B.  hrtime readings come from Node's process.hrtime().  There is no\n * defined way to represent negative deltas, so it's illegal to diff B from A\n * where the time denoted by B is later than the time denoted by A.  If this\n * becomes valuable, we can define a representation and extend the\n * implementation to support it.\n */\nfunction hrtimeDiff(a, b)\n{\n\tassertHrtime(a);\n\tassertHrtime(b);\n\tmod_assert.ok(a[0] > b[0] || (a[0] == b[0] && a[1] >= b[1]),\n\t    'negative differences not allowed');\n\n\tvar rv = [ a[0] - b[0], 0 ];\n\n\tif (a[1] >= b[1]) {\n\t\trv[1] = a[1] - b[1];\n\t} else {\n\t\trv[0]--;\n\t\trv[1] = 1e9 - (b[1] - a[1]);\n\t}\n\n\treturn (rv);\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of nanoseconds.\n */\nfunction hrtimeNanosec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e9 + a[1]));\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of microseconds.\n */\nfunction hrtimeMicrosec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e6 + a[1] / 1e3));\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of milliseconds.\n */\nfunction hrtimeMillisec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e3 + a[1] / 1e6));\n}\n\n/*\n * Add two hrtime readings A and B, overwriting A with the result of the\n * addition.  This function is useful for accumulating several hrtime intervals\n * into a counter.  Returns A.\n */\nfunction hrtimeAccum(a, b)\n{\n\tassertHrtime(a);\n\tassertHrtime(b);\n\n\t/*\n\t * Accumulate the nanosecond component.\n\t */\n\ta[1] += b[1];\n\tif (a[1] >= 1e9) {\n\t\t/*\n\t\t * The nanosecond component overflowed, so carry to the seconds\n\t\t * field.\n\t\t */\n\t\ta[0]++;\n\t\ta[1] -= 1e9;\n\t}\n\n\t/*\n\t * Accumulate the seconds component.\n\t */\n\ta[0] += b[0];\n\n\treturn (a);\n}\n\n/*\n * Add two hrtime readings A and B, returning the result as a new hrtime array.\n * Does not modify either input argument.\n */\nfunction hrtimeAdd(a, b)\n{\n\tassertHrtime(a);\n\n\tvar rv = [ a[0], a[1] ];\n\n\treturn (hrtimeAccum(rv, b));\n}\n\n\n/*\n * Check an object for unexpected properties.  Accepts the object to check, and\n * an array of allowed property names (strings).  Returns an array of key names\n * that were found on the object, but did not appear in the list of allowed\n * properties.  If no properties were found, the returned array will be of\n * zero length.\n */\nfunction extraProperties(obj, allowed)\n{\n\tmod_assert.ok(typeof (obj) === 'object' && obj !== null,\n\t    'obj argument must be a non-null object');\n\tmod_assert.ok(Array.isArray(allowed),\n\t    'allowed argument must be an array of strings');\n\tfor (var i = 0; i < allowed.length; i++) {\n\t\tmod_assert.ok(typeof (allowed[i]) === 'string',\n\t\t    'allowed argument must be an array of strings');\n\t}\n\n\treturn (Object.keys(obj).filter(function (key) {\n\t\treturn (allowed.indexOf(key) === -1);\n\t}));\n}\n\n/*\n * Given three sets of properties \"provided\" (may be undefined), \"overrides\"\n * (required), and \"defaults\" (may be undefined), construct an object containing\n * the union of these sets with \"overrides\" overriding \"provided\", and\n * \"provided\" overriding \"defaults\".  None of the input objects are modified.\n */\nfunction mergeObjects(provided, overrides, defaults)\n{\n\tvar rv, k;\n\n\trv = {};\n\tif (defaults) {\n\t\tfor (k in defaults)\n\t\t\trv[k] = defaults[k];\n\t}\n\n\tif (provided) {\n\t\tfor (k in provided)\n\t\t\trv[k] = provided[k];\n\t}\n\n\tif (overrides) {\n\t\tfor (k in overrides)\n\t\t\trv[k] = overrides[k];\n\t}\n\n\treturn (rv);\n}\n"]}