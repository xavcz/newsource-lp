{"version":3,"sources":["tests.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEvB,IAAI,QAAQ,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC;;AAGnD,IAAI,QAAQ,GAAG,UAAU,CAAC;AAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACtD,IAAI,WAAW,GAAG,CAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,CAAE,CAAC;AACnE,IAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,WAAW,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AAC/B,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACvC,WAAO,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;CACpC,CAAC,CAAC;;AAEH,WAAW,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AAC/B,QAAI,CAAC;QAAE,CAAC,GAAG,IAAI,GAAC,MAAM;QAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACxD,WAAO,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC3B,KAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACf,WAAO,CAAC,CAAC,SAAS,CAAC,CAAC;CACvB,CAAC,CAAC;;AAEH,SAAS,UAAU,CAAC,IAAI,EAAE;AACtB,QAAI,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC1C,QAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC9B,WAAO,MAAM,CAAC;CACjB;;AAED,SAAS,aAAa,GAAG;AACrB,WAAO,UAAS,MAAM,EAAE;AACpB,cAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAExB,cAAM,CAAC,KAAK,CAAC,OAAO,MAAM,CAAC,KAAK,AAAC,EAAE,SAAS,CAAC,CAAC;AAC9C,cAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9B,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,kBAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,GAAC,CAAC,GAAC,WAAW,CAAC,CAAC;SACpE;KACJ,CAAA;CACJ;;AAED,SAAS,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE;AAClC,QAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,WAAO,CAAC,aAAa,GAAC,GAAG,GAAC,IAAI,GAAC,MAAM,GAAC,GAAG,CAAC,GAAG;AACzC,aAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9C,8BAAsB,EAAE,aAAa,EAAE;AACvC,yBAAiB,EAAE,uBAAS,MAAM,EAAE;AAAE,kBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAAE;AACzE,uBAAe,EAAI,qBAAS,MAAM,EAAE;;AAEhC,gBAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;AACpE,kBAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACnC;KACJ,CAAC;;AAEF,WAAO,OAAO,CAAC;CAClB;;AAED,SAAS,mBAAmB,CAAC,GAAG,EAAE;AAC9B,QAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,WAAO,CAAC,aAAa,GAAC,GAAG,GAAC,GAAG,CAAC,GAAG;AAC7B,aAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC7B,8BAAsB,EAAE,aAAa,EAAE;AACvC,yBAAiB,EAAE,uBAAS,MAAM,EAAE;AAAE,kBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAAE;AACzE,uBAAe,EAAI,qBAAS,MAAM,EAAE;AAAE,kBAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAAE;KAC3E,CAAC;;AAEF,WAAO,OAAO,CAAC;CAClB;;AAED,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC;AAC9C,6BAAyB,EAAE,mBAAmB,CAAC,YAAY,CAAC;AAC5D,uBAAmB,EAAE,eAAe,CAAC,YAAY,EAAE,YAAY,CAAC;AAChE,mBAAe,EAAE,eAAe,CAAC,YAAY,EAAE,QAAQ,CAAC;;AAExD,yBAAqB,EAAE,mBAAmB,CAAC,QAAQ,CAAC;AACpD,eAAW,EAAE,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC;;AAEhD,8BAA0B,EAAE,mBAAmB,CAAC,kBAAkB,CAAC;AACnE,0BAAsB,EAAE,mBAAmB,CAAC,cAAc,CAAC;AAC3D,iBAAa,EAAE,eAAe,CAAC,cAAc,EAAE,cAAc,CAAC;AAC9D,gBAAY,EAAE,eAAe,CAAC,cAAc,EAAE,QAAQ,CAAC;;AAEvD,8BAA0B,EAAE,mBAAmB,CAAC,WAAW,CAAC;AAC5D,0BAAsB,EAAE,mBAAmB,CAAC,OAAO,CAAC;AACpD,iBAAa,EAAE,eAAe,CAAC,OAAO,EAAE,cAAc,CAAC;AACvD,gBAAY,EAAE,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;;AAEhD,6BAAyB,EAAE,mBAAmB,CAAC,UAAU,CAAC;AAC1D,oBAAgB,EAAE,eAAe,CAAC,UAAU,EAAE,cAAc,CAAC;AAC7D,mBAAe,EAAE,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC;CACzD,CAAC,UAAO,CAAC,MAAM,CAAC,CAAC","file":"tests-compiled.js","sourcesContent":["var assert = require('assert');\r\nvar vows = require('vows');\r\nvar path = require('path');\r\nvar fs = require('fs');\r\n\r\nvar validate = require('../lib/validate').validate;\r\n\r\n\r\nvar revision = 'draft-03';\r\nvar schemaRoot = path.join(__dirname, '..', revision);\r\nvar schemaNames = ['schema', 'hyper-schema', 'links', 'json-ref' ];\r\nvar schemas = {};\r\n\r\nschemaNames.forEach(function(name) {\r\n    var file = path.join(schemaRoot, name);\r\n    schemas[name] = loadSchema(file);\r\n});\r\n\r\nschemaNames.forEach(function(name) {\r\n    var s, n = name+'-nsd', f = path.join(schemaRoot, name);\r\n    schemas[n] = loadSchema(f);\r\n    s = schemas[n];\r\n    delete s['$schema'];\r\n});\r\n\r\nfunction loadSchema(path) {\r\n    var data = fs.readFileSync(path, 'utf-8');\r\n    var schema = JSON.parse(data);\r\n    return schema;\r\n}\r\n\r\nfunction resultIsValid() {\r\n    return function(result) {\r\n        assert.isObject(result);\r\n        //assert.isBoolean(result.valid);\r\n        assert.equal(typeof(result.valid), 'boolean');\r\n        assert.isArray(result.errors);\r\n        for (var i = 0; i < result.errors.length; i++) {\r\n            assert.notEqual(result.errors[i], null, 'errors['+i+'] is null');\r\n        }\r\n    }\r\n}\r\n\r\nfunction assertValidates(doc, schema) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+', '+schema+')'] = {\r\n        topic: validate(schemas[doc], schemas[schema]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) {\r\n            // XXX work-around for bug in vows: [null] chokes it\r\n            if (result.errors[0] == null) assert.fail('(errors contains null)');\r\n            assert.length(result.errors, 0);\r\n        }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nfunction assertSelfValidates(doc) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+')'] = {\r\n        topic: validate(schemas[doc]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) { assert.length(result.errors, 0); }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nvar suite = vows.describe('JSON Schema').addBatch({\r\n    'Core-NSD self-validates': assertSelfValidates('schema-nsd'),\r\n    'Core-NSD/Core-NSD': assertValidates('schema-nsd', 'schema-nsd'),\r\n    'Core-NSD/Core': assertValidates('schema-nsd', 'schema'),\r\n\r\n    'Core self-validates': assertSelfValidates('schema'),\r\n    'Core/Core': assertValidates('schema', 'schema'),\r\n\r\n    'Hyper-NSD self-validates': assertSelfValidates('hyper-schema-nsd'),\r\n    'Hyper self-validates': assertSelfValidates('hyper-schema'),\r\n    'Hyper/Hyper': assertValidates('hyper-schema', 'hyper-schema'),\r\n    'Hyper/Core': assertValidates('hyper-schema', 'schema'),\r\n\r\n    'Links-NSD self-validates': assertSelfValidates('links-nsd'),\r\n    'Links self-validates': assertSelfValidates('links'),\r\n    'Links/Hyper': assertValidates('links', 'hyper-schema'),\r\n    'Links/Core': assertValidates('links', 'schema'),\r\n\r\n    'Json-Ref self-validates': assertSelfValidates('json-ref'),\r\n    'Json-Ref/Hyper': assertValidates('json-ref', 'hyper-schema'),\r\n    'Json-Ref/Core': assertValidates('json-ref', 'schema')\r\n}).export(module);\r\n"]}