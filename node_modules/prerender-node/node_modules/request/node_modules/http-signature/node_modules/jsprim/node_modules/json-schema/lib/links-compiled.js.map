{"version":3,"sources":["links.js"],"names":[],"mappings":";;;;;;;AAKA,CAAC,EAAC,MAAM,EAAC,OAAO,MAAM,IAAE,WAAW,GAAC,MAAM,GAAC,UAAS,IAAI,EAAE,OAAO,EAAC;AAAC,QAAM,CAAC,OAAO,GAAG,OAAO,EAAE,CAAC;EAAC,GAAC,CAChG,MAAM,CAAC,EAAE,EAAE,YAAU;AACrB,KAAI,OAAO,GAAG,EAAE,CAAC;AACjB,QAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,QAAO,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAC;;;;;;;;AAQrD,MAAI,KAAK,GAAG,MAAM,CAAC,eAAe,CAAC;AACnC,MAAG,CAAC,KAAK,EAAC;AACT,QAAK,GAAG,EAAE,CAAC;AACX,OAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;AAC/B,OAAG,WAAW,IAAI,WAAW,YAAY,KAAK,EAAC;AAC9C,eAAW,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC;;;;;;;AAOjC,UAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;KAC5B,CAAC,CAAC;IACH;AACD,OAAG,OAAO,CAAC,UAAU,EAAC;AACrB,UAAM,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B;GACD;AACD,MAAI,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;AACnC,SAAO,YAAY,IAAI,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;EAClE,CAAC;;AAEF,QAAO,CAAC,UAAU,GAAG,UAAS,YAAY,EAAE,QAAQ,EAAC;AACpD,SAAO,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,UAAS,CAAC,EAAE,QAAQ,EAAC;AAChE,OAAI,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,OAAG,KAAK,YAAY,KAAK,EAAC;;AAEzB,WAAO,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACnC;AACD,UAAO,KAAK,CAAC;GACb,CAAC,CAAC;EACJ,CAAC;AACF,QAAO,OAAO,CAAC;CACd,CAAC,CAAC","file":"links-compiled.js","sourcesContent":["/** \r\n * JSON Schema link handler\r\n * Copyright (c) 2007 Kris Zyp SitePen (www.sitepen.com)\r\n * Licensed under the MIT (MIT-LICENSE.txt) license.\r\n */\r\n({define:typeof define!=\"undefined\"?define:function(deps, factory){module.exports = factory();}}).\r\ndefine([], function(){\r\nvar exports = {};\r\nexports.cacheLinks = true;\r\nexports.getLink = function(relation, instance, schema){\r\n\t// gets the URI of the link for the given relation based on the instance and schema\r\n\t// for example:\r\n\t// getLink(\r\n\t// \t\t\"brother\", \r\n\t// \t\t{\"brother_id\":33}, \r\n\t// \t\t{links:[{rel:\"brother\", href:\"Brother/{brother_id}\"}]}) ->\r\n\t//\t\"Brother/33\"\r\n\tvar links = schema.__linkTemplates; \r\n\tif(!links){\r\n\t\tlinks = {};\r\n\t\tvar schemaLinks = schema.links;\r\n\t\tif(schemaLinks && schemaLinks instanceof Array){\r\n\t\t\tschemaLinks.forEach(function(link){\r\n\t/*\t\t\t// TODO: allow for multiple same-name relations\r\n\t\t\t\tif(links[link.rel]){\r\n\t\t\t\t\tif(!(links[link.rel] instanceof Array)){\r\n\t\t\t\t\t\tlinks[link.rel] = [links[link.rel]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tlinks[link.rel] = link.href;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(exports.cacheLinks){\r\n\t\t\tschema.__linkTemplates = links;\r\n\t\t}\r\n\t}\r\n\tvar linkTemplate = links[relation];\r\n\treturn linkTemplate && exports.substitute(linkTemplate, instance);\r\n};\r\n\r\nexports.substitute = function(linkTemplate, instance){\r\n\treturn linkTemplate.replace(/\\{([^\\}]*)\\}/g, function(t, property){\r\n\t\t\tvar value = instance[decodeURIComponent(property)];\r\n\t\t\tif(value instanceof Array){\r\n\t\t\t\t// the value is an array, it should produce a URI like /Table/(4,5,8) and store.get() should handle that as an array of values\r\n\t\t\t\treturn '(' + value.join(',') + ')';\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t});\r\n};\r\nreturn exports;\r\n});"]}