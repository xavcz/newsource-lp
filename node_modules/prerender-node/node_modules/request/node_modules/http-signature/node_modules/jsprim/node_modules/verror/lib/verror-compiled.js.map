{"version":3,"sources":["verror.js"],"names":[],"mappings":"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","file":"verror-compiled.js","sourcesContent":["/*\n * verror.js: richer JavaScript errors\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\nvar mod_extsprintf = require('extsprintf');\n\n/*\n * Public interface\n */\nexports.VError = VError;\nexports.WError = WError;\nexports.MultiError = MultiError;\n\n/*\n * Like JavaScript's built-in Error class, but supports a \"cause\" argument and a\n * printf-style message.  The cause argument can be null.\n */\nfunction VError(options)\n{\n\tvar args, causedBy, ctor, tailmsg;\n\n\tif (options instanceof Error || typeof (options) === 'object') {\n\t\targs = Array.prototype.slice.call(arguments, 1);\n\t} else {\n\t\targs = Array.prototype.slice.call(arguments, 0);\n\t\toptions = undefined;\n\t}\n\n\ttailmsg = args.length > 0 ?\n\t    mod_extsprintf.sprintf.apply(null, args) : '';\n\tthis.jse_shortmsg = tailmsg;\n\tthis.jse_summary = tailmsg;\n\n\tif (options) {\n\t\tcausedBy = options.cause;\n\n\t\tif (!causedBy || !(options.cause instanceof Error))\n\t\t\tcausedBy = options;\n\n\t\tif (causedBy && (causedBy instanceof Error)) {\n\t\t\tthis.jse_cause = causedBy;\n\t\t\tthis.jse_summary += ': ' + causedBy.message;\n\t\t}\n\t}\n\n\tthis.message = this.jse_summary;\n\tError.call(this, this.jse_summary);\n\n\tif (Error.captureStackTrace) {\n\t\tctor = options ? options.constructorOpt : undefined;\n\t\tctor = ctor || arguments.callee;\n\t\tError.captureStackTrace(this, ctor);\n\t}\n}\n\nmod_util.inherits(VError, Error);\nVError.prototype.name = 'VError';\n\nVError.prototype.toString = function ve_toString()\n{\n\tvar str = (this.hasOwnProperty('name') && this.name ||\n\t\tthis.constructor.name || this.constructor.prototype.name);\n\tif (this.message)\n\t\tstr += ': ' + this.message;\n\n\treturn (str);\n};\n\nVError.prototype.cause = function ve_cause()\n{\n\treturn (this.jse_cause);\n};\n\n\n/*\n * Represents a collection of errors for the purpose of consumers that generally\n * only deal with one error.  Callers can extract the individual errors\n * contained in this object, but may also just treat it as a normal single\n * error, in which case a summary message will be printed.\n */\nfunction MultiError(errors)\n{\n\tmod_assert.ok(errors.length > 0);\n\tthis.ase_errors = errors;\n\n\tVError.call(this, errors[0], 'first of %d error%s',\n\t    errors.length, errors.length == 1 ? '' : 's');\n}\n\nmod_util.inherits(MultiError, VError);\n\n\n\n/*\n * Like JavaScript's built-in Error class, but supports a \"cause\" argument which\n * is wrapped, not \"folded in\" as with VError.\tAccepts a printf-style message.\n * The cause argument can be null.\n */\nfunction WError(options)\n{\n\tError.call(this);\n\n\tvar args, cause, ctor;\n\tif (typeof (options) === 'object') {\n\t\targs = Array.prototype.slice.call(arguments, 1);\n\t} else {\n\t\targs = Array.prototype.slice.call(arguments, 0);\n\t\toptions = undefined;\n\t}\n\n\tif (args.length > 0) {\n\t\tthis.message = mod_extsprintf.sprintf.apply(null, args);\n\t} else {\n\t\tthis.message = '';\n\t}\n\n\tif (options) {\n\t\tif (options instanceof Error) {\n\t\t\tcause = options;\n\t\t} else {\n\t\t\tcause = options.cause;\n\t\t\tctor = options.constructorOpt;\n\t\t}\n\t}\n\n\tError.captureStackTrace(this, ctor || this.constructor);\n\tif (cause)\n\t\tthis.cause(cause);\n\n}\n\nmod_util.inherits(WError, Error);\nWError.prototype.name = 'WError';\n\n\nWError.prototype.toString = function we_toString()\n{\n\tvar str = (this.hasOwnProperty('name') && this.name ||\n\t\tthis.constructor.name || this.constructor.prototype.name);\n\tif (this.message)\n\t\tstr += ': ' + this.message;\n\tif (this.we_cause && this.we_cause.message)\n\t\tstr += '; caused by ' + this.we_cause.toString();\n\n\treturn (str);\n};\n\nWError.prototype.cause = function we_cause(c)\n{\n\tif (c instanceof Error)\n\t\tthis.we_cause = c;\n\n\treturn (this.we_cause);\n};\n"]}