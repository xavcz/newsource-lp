{"version":3,"sources":["werror.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAE1C,IAAI,QAAQ,GAAG,cAAc,CAAC;;AAE9B,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,IAAI,EAAE;AACrC,KAAI,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,qBAAqB,EAAE,QAAQ,CAAC,CAAC;;;AAGxE,KAAI,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,0BAA0B,CAAC,CAAC;AACnE,QAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1B,QAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7B,QAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACxB,CAAC,CAAC","file":"werror-compiled.js","sourcesContent":["var mod_fs = require('fs');\nvar mod_verror = require('../lib/verror');\n\nvar filename = '/nonexistent';\n\nmod_fs.stat(filename, function (err1) {\n\tvar err2 = new mod_verror.WError(err1, 'failed to stat \"%s\"', filename);\n\n\t/* The following would normally be higher up the stack. */\n\tvar err3 = new mod_verror.WError(err2, 'failed to handle request');\n\tconsole.log(err3.message);\n\tconsole.log(err3.toString());\n\tconsole.log(err3.stack);\n});\n"]}