{"version":3,"sources":["errors.js"],"names":[],"mappings":";;;;AAEA,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,SAAS,sBAAsB,CAAC,EAAE,EAAE,MAAM,EAAE;AAC3C,KAAI,KAAK,CAAC,iBAAiB,EAC1B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AACvD,KAAI,CAAC,IAAI,GAAG,wBAAwB,CAAC;AACrC,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,KAAI,CAAC,OAAO,GAAG,sDAAsD,CAAC;AACtE,KAAI,EAAE,KAAK,SAAS,EACnB,IAAI,CAAC,OAAO,IAAI,iBAAiB,GAAG,EAAE,CAAC;AACxC,KAAI,MAAM,KAAK,SAAS,EACvB,IAAI,CAAC,OAAO,IAAI,YAAY,GAAG,MAAM,CAAC;CACvC;AACD,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;;AAE7C,SAAS,qBAAqB,CAAC,GAAG,EAAE;AACnC,KAAI,KAAK,CAAC,iBAAiB,EAC1B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;AACtD,KAAI,CAAC,IAAI,GAAG,uBAAuB,CAAC;AACpC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACrB,KAAI,CAAC,OAAO,GAAG,aAAa,GAAG,GAAG,GAAG,oBAAoB,CAAC;CAC1D;AACD,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;;AAE5C,SAAS,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC9C,KAAI,KAAK,CAAC,iBAAiB,EAC1B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AAC9C,KAAI,CAAC,IAAI,GAAG,eAAe,CAAC;AAC5B,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,KAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,IAAI,GAAG,cAAc,GAAG,MAAM,GAC9D,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC;CACvC;AACD,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;;AAEpC,SAAS,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;AACpD,KAAI,KAAK,CAAC,iBAAiB,EAC1B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;AACpD,KAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;AAClC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,KAAI,CAAC,OAAO,GAAG,sCAAsC,GAAG,IAAI,GACxD,gBAAgB,GAAG,MAAM,GAAG,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;CAC/D;AACD,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;;AAE1C,MAAM,CAAC,OAAO,GAAG;AAChB,uBAAsB,EAAE,sBAAsB;AAC9C,sBAAqB,EAAE,qBAAqB;AAC5C,cAAa,EAAE,aAAa;AAC5B,oBAAmB,EAAE,mBAAmB;CACxC,CAAC","file":"errors-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert-plus');\nvar util = require('util');\n\nfunction FingerprintFormatError(fp, format) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, FingerprintFormatError);\n\tthis.name = 'FingerprintFormatError';\n\tthis.fingerprint = fp;\n\tthis.format = format;\n\tthis.message = 'Fingerprint format is not supported, or is invalid: ';\n\tif (fp !== undefined)\n\t\tthis.message += ' fingerprint = ' + fp;\n\tif (format !== undefined)\n\t\tthis.message += ' format = ' + format;\n}\nutil.inherits(FingerprintFormatError, Error);\n\nfunction InvalidAlgorithmError(alg) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, InvalidAlgorithmError);\n\tthis.name = 'InvalidAlgorithmError';\n\tthis.algorithm = alg;\n\tthis.message = 'Algorithm \"' + alg + '\" is not supported';\n}\nutil.inherits(InvalidAlgorithmError, Error);\n\nfunction KeyParseError(name, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, KeyParseError);\n\tthis.name = 'KeyParseError';\n\tthis.format = format;\n\tthis.keyName = name;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse ' + name + ' as a valid ' + format +\n\t    ' format key: ' + innerErr.message;\n}\nutil.inherits(KeyParseError, Error);\n\nfunction SignatureParseError(type, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, SignatureParseError);\n\tthis.name = 'SignatureParseError';\n\tthis.type = type;\n\tthis.format = format;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse the given data as a ' + type +\n\t    ' signature in ' + format + ' format: ' + innerErr.message;\n}\nutil.inherits(SignatureParseError, Error);\n\nmodule.exports = {\n\tFingerprintFormatError: FingerprintFormatError,\n\tInvalidAlgorithmError: InvalidAlgorithmError,\n\tKeyParseError: KeyParseError,\n\tSignatureParseError: SignatureParseError\n};\n"]}