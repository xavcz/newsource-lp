{"version":3,"sources":["signature.js"],"names":[],"mappings":"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","file":"signature-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Signature;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar asn1 = require('asn1');\nvar SSHBuffer = require('./ssh-buffer');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar SignatureParseError = errs.SignatureParseError;\n\nfunction Signature(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.hashAlgorithm = opts.hashAlgo;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n}\n\nSignature.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'asn1';\n\tassert.string(format, 'format');\n\n\tvar buf;\n\n\tswitch (this.type) {\n\tcase 'rsa':\n\tcase 'ed25519':\n\t\tif (format === 'ssh') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-' + this.type);\n\t\t\tbuf.writePart(this.part.sig);\n\t\t\treturn (buf.toBuffer());\n\t\t} else {\n\t\t\treturn (this.part.sig.data);\n\t\t}\n\n\tcase 'dsa':\n\tcase 'ecdsa':\n\t\tvar r, s;\n\t\tif (format === 'asn1') {\n\t\t\tvar der = new asn1.BerWriter();\n\t\t\tder.startSequence();\n\t\t\tr = utils.mpNormalize(this.part.r.data);\n\t\t\ts = utils.mpNormalize(this.part.s.data);\n\t\t\tder.writeBuffer(r, asn1.Ber.Integer);\n\t\t\tder.writeBuffer(s, asn1.Ber.Integer);\n\t\t\tder.endSequence();\n\t\t\treturn (der.buffer);\n\t\t} else if (format === 'ssh' && this.type === 'dsa') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-dss');\n\t\t\tr = this.part.r.data;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\ts = this.part.s.data;\n\t\t\tbuf.writeBuffer(Buffer.concat([r, s]));\n\t\t\treturn (buf.toBuffer());\n\t\t} else if (format === 'ssh' && this.type === 'ecdsa') {\n\t\t\tvar inner = new SSHBuffer({});\n\t\t\tr = this.part.r;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\tinner.writePart(r);\n\t\t\tinner.writePart(this.part.s);\n\n\t\t\tbuf = new SSHBuffer({});\n\t\t\t/* XXX: find a more proper way to do this? */\n\t\t\tvar curve;\n\t\t\tvar sz = this.part.r.data.length * 8;\n\t\t\tif (sz === 256)\n\t\t\t\tcurve = 'nistp256';\n\t\t\telse if (sz === 384)\n\t\t\t\tcurve = 'nistp384';\n\t\t\telse if (sz === 528)\n\t\t\t\tcurve = 'nistp521';\n\t\t\tbuf.writeString('ecdsa-sha2-' + curve);\n\t\t\tbuf.writeBuffer(inner.toBuffer());\n\t\t\treturn (buf.toBuffer());\n\t\t}\n\t\tthrow (new Error('Invalid signature format'));\n\tdefault:\n\t\tthrow (new Error('Invalid signature data'));\n\t}\n};\n\nSignature.prototype.toString = function (format) {\n\tassert.optionalString(format, 'format');\n\treturn (this.toBuffer(format).toString('base64'));\n};\n\nSignature.parse = function (data, type, format) {\n\tif (typeof (data) === 'string')\n\t\tdata = new Buffer(data, 'base64');\n\tassert.buffer(data, 'data');\n\tassert.string(format, 'format');\n\tassert.string(type, 'type');\n\n\tvar opts = {};\n\topts.type = type.toLowerCase();\n\topts.parts = [];\n\n\ttry {\n\t\tassert.ok(data.length > 0, 'signature must not be empty');\n\t\tswitch (opts.type) {\n\t\tcase 'rsa':\n\t\t\treturn (parseOneNum(data, type, format, opts,\n\t\t\t    'ssh-rsa'));\n\t\tcase 'ed25519':\n\t\t\treturn (parseOneNum(data, type, format, opts,\n\t\t\t    'ssh-ed25519'));\n\n\t\tcase 'dsa':\n\t\tcase 'ecdsa':\n\t\t\tif (format === 'asn1')\n\t\t\t\treturn (parseDSAasn1(data, type, format, opts));\n\t\t\telse if (opts.type === 'dsa')\n\t\t\t\treturn (parseDSA(data, type, format, opts));\n\t\t\telse\n\t\t\t\treturn (parseECDSA(data, type, format, opts));\n\n\t\tdefault:\n\t\t\tthrow (new InvalidAlgorithmError(type));\n\t\t}\n\n\t} catch (e) {\n\t\tif (e instanceof InvalidAlgorithmError)\n\t\t\tthrow (e);\n\t\tthrow (new SignatureParseError(type, format, e));\n\t}\n};\n\nfunction parseOneNum(data, type, format, opts, headType) {\n\tif (format === 'ssh') {\n\t\ttry {\n\t\t\tvar buf = new SSHBuffer({buffer: data});\n\t\t\tvar head = buf.readString();\n\t\t} catch (e) {\n\t\t\t/* fall through */\n\t\t}\n\t\tif (head === headType) {\n\t\t\tvar sig = buf.readPart();\n\t\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\t\tsig.name = 'sig';\n\t\t\topts.parts.push(sig);\n\t\t\treturn (new Signature(opts));\n\t\t}\n\t}\n\topts.parts.push({name: 'sig', data: data});\n\treturn (new Signature(opts));\n}\n\nfunction parseDSAasn1(data, type, format, opts) {\n\tvar der = new asn1.BerReader(data);\n\tder.readSequence();\n\tvar r = der.readString(asn1.Ber.Integer, true);\n\tvar s = der.readString(asn1.Ber.Integer, true);\n\n\topts.parts.push({name: 'r', data: utils.mpNormalize(r)});\n\topts.parts.push({name: 's', data: utils.mpNormalize(s)});\n\n\treturn (new Signature(opts));\n}\n\nfunction parseDSA(data, type, format, opts) {\n\tif (data.length != 40) {\n\t\tvar buf = new SSHBuffer({buffer: data});\n\t\tvar d = buf.readBuffer();\n\t\tif (d.toString('ascii') === 'ssh-dss')\n\t\t\td = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\tassert.strictEqual(d.length, 40, 'invalid inner length');\n\t\tdata = d;\n\t}\n\topts.parts.push({name: 'r', data: data.slice(0, 20)});\n\topts.parts.push({name: 's', data: data.slice(20, 40)});\n\treturn (new Signature(opts));\n}\n\nfunction parseECDSA(data, type, format, opts) {\n\tvar buf = new SSHBuffer({buffer: data});\n\n\tvar r, s;\n\tvar inner = buf.readBuffer();\n\tif (inner.toString('ascii').match(/^ecdsa-/)) {\n\t\tinner = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes on outer');\n\t\tbuf = new SSHBuffer({buffer: inner});\n\t\tr = buf.readPart();\n\t} else {\n\t\tr = {data: inner};\n\t}\n\n\ts = buf.readPart();\n\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\n\tr.name = 'r';\n\ts.name = 's';\n\n\topts.parts.push(r);\n\topts.parts.push(s);\n\treturn (new Signature(opts));\n}\n\nSignature.isSignature = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Signature, ver));\n};\n\n/*\n * API versions for Signature:\n * [1,0] -- initial ver\n * [2,0] -- support for rsa in full ssh format, compat with sshpk-agent\n *          hashAlgorithm property\n * [2,1] -- first tagged version\n */\nSignature.prototype._sshpkApiVersion = [2, 1];\n\nSignature._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tif (obj.hasOwnProperty('hashAlgorithm'))\n\t\treturn ([2, 0]);\n\treturn ([1, 0]);\n};\n"]}