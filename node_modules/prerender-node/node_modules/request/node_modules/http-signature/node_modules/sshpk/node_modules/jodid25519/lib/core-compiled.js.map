{"version":3,"sources":["core.js"],"names":[],"mappings":"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C,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC,GAAG,OAAO,CAAC,GAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACrD,aAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC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","file":"core-compiled.js","sourcesContent":["\"use strict\";\n/**\n * @fileOverview\n * Core operations on curve 25519 required for the higher level modules.\n */\n\n/*\n * Copyright (c) 2007, 2013, 2014 Michele Bini\n * Copyright (c) 2014 Mega Limited\n * under the MIT License.\n *\n * Authors: Guy K. Kloss, Michele Bini\n *\n * You should have received a copy of the license along with this program.\n */\n\nvar crypto = require('crypto');\n\n    /**\n     * @exports jodid25519/core\n     * Core operations on curve 25519 required for the higher level modules.\n     *\n     * @description\n     * Core operations on curve 25519 required for the higher level modules.\n     *\n     * <p>\n     * This core code is extracted from Michele Bini's curve255.js implementation,\n     * which is used as a base for Curve25519 ECDH and Ed25519 EdDSA operations.\n     * </p>\n     */\n    var ns = {};\n\n    function _setbit(n, c, v) {\n        var i = c >> 4;\n        var a = n[i];\n        a = a + (1 << (c & 0xf)) * v;\n        n[i] = a;\n    }\n\n    function _getbit(n, c) {\n        return (n[c >> 4] >> (c & 0xf)) & 1;\n    }\n\n    function _ZERO() {\n        return [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    function _ONE() {\n        return [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    // Basepoint.\n    function _BASE() {\n        return [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    // return -1, 0, +1 when a is less than, equal, or greater than b\n    function _bigintcmp(a, b) {\n        // The following code is a bit tricky to avoid code branching\n        var c, abs_r, mask;\n        var r = 0;\n        for (c = 15; c >= 0; c--) {\n            var x = a[c];\n            var y = b[c];\n            r = r + (x - y) * (1 - r * r);\n            // http://graphics.stanford.edu/~seander/bithacks.html#IntegerAbs\n            // correct for [-294967295, 294967295]\n            mask = r >> 31;\n            abs_r = (r + mask) ^ mask;\n            // http://stackoverflow.com/questions/596467/how-do-i-convert-a-number-to-an-integer-in-javascript\n            // this rounds towards zero\n            r = ~~((r << 1) / (abs_r + 1));\n        }\n        return r;\n    }\n\n    function _bigintadd(a, b) {\n        var r = [];\n        var v;\n        r[0] = (v = a[0] + b[0]) & 0xffff;\n        r[1] = (v = (v >>> 16) + a[1] + b[1]) & 0xffff;\n        r[2] = (v = (v >>> 16) + a[2] + b[2]) & 0xffff;\n        r[3] = (v = (v >>> 16) + a[3] + b[3]) & 0xffff;\n        r[4] = (v = (v >>> 16) + a[4] + b[4]) & 0xffff;\n        r[5] = (v = (v >>> 16) + a[5] + b[5]) & 0xffff;\n        r[6] = (v = (v >>> 16) + a[6] + b[6]) & 0xffff;\n        r[7] = (v = (v >>> 16) + a[7] + b[7]) & 0xffff;\n        r[8] = (v = (v >>> 16) + a[8] + b[8]) & 0xffff;\n        r[9] = (v = (v >>> 16) + a[9] + b[9]) & 0xffff;\n        r[10] = (v = (v >>> 16) + a[10] + b[10]) & 0xffff;\n        r[11] = (v = (v >>> 16) + a[11] + b[11]) & 0xffff;\n        r[12] = (v = (v >>> 16) + a[12] + b[12]) & 0xffff;\n        r[13] = (v = (v >>> 16) + a[13] + b[13]) & 0xffff;\n        r[14] = (v = (v >>> 16) + a[14] + b[14]) & 0xffff;\n        r[15] = (v >>> 16) + a[15] + b[15];\n        return r;\n    }\n\n    function _bigintsub(a, b) {\n        var r = [];\n        var v;\n        r[0] = (v = 0x80000 + a[0] - b[0]) & 0xffff;\n        r[1] = (v = (v >>> 16) + 0x7fff8 + a[1] - b[1]) & 0xffff;\n        r[2] = (v = (v >>> 16) + 0x7fff8 + a[2] - b[2]) & 0xffff;\n        r[3] = (v = (v >>> 16) + 0x7fff8 + a[3] - b[3]) & 0xffff;\n        r[4] = (v = (v >>> 16) + 0x7fff8 + a[4] - b[4]) & 0xffff;\n        r[5] = (v = (v >>> 16) + 0x7fff8 + a[5] - b[5]) & 0xffff;\n        r[6] = (v = (v >>> 16) + 0x7fff8 + a[6] - b[6]) & 0xffff;\n        r[7] = (v = (v >>> 16) + 0x7fff8 + a[7] - b[7]) & 0xffff;\n        r[8] = (v = (v >>> 16) + 0x7fff8 + a[8] - b[8]) & 0xffff;\n        r[9] = (v = (v >>> 16) + 0x7fff8 + a[9] - b[9]) & 0xffff;\n        r[10] = (v = (v >>> 16) + 0x7fff8 + a[10] - b[10]) & 0xffff;\n        r[11] = (v = (v >>> 16) + 0x7fff8 + a[11] - b[11]) & 0xffff;\n        r[12] = (v = (v >>> 16) + 0x7fff8 + a[12] - b[12]) & 0xffff;\n        r[13] = (v = (v >>> 16) + 0x7fff8 + a[13] - b[13]) & 0xffff;\n        r[14] = (v = (v >>> 16) + 0x7fff8 + a[14] - b[14]) & 0xffff;\n        r[15] = (v >>> 16) - 8 + a[15] - b[15];\n        return r;\n    }\n\n    function _sqr8h(a7, a6, a5, a4, a3, a2, a1, a0) {\n        // 'division by 0x10000' can not be replaced by '>> 16' because\n        // more than 32 bits of precision are needed similarly\n        // 'multiplication by 2' cannot be replaced by '<< 1'\n        var r = [];\n        var v;\n        r[0] = (v = a0 * a0) & 0xffff;\n        r[1] = (v = (0 | (v / 0x10000)) + 2 * a0 * a1) & 0xffff;\n        r[2] = (v = (0 | (v / 0x10000)) + 2 * a0 * a2 + a1 * a1) & 0xffff;\n        r[3] = (v = (0 | (v / 0x10000)) + 2 * a0 * a3 + 2 * a1 * a2) & 0xffff;\n        r[4] = (v = (0 | (v / 0x10000)) + 2 * a0 * a4 + 2 * a1 * a3 + a2\n                    * a2) & 0xffff;\n        r[5] = (v = (0 | (v / 0x10000)) + 2 * a0 * a5 + 2 * a1 * a4 + 2\n                    * a2 * a3) & 0xffff;\n        r[6] = (v = (0 | (v / 0x10000)) + 2 * a0 * a6 + 2 * a1 * a5 + 2\n                    * a2 * a4 + a3 * a3) & 0xffff;\n        r[7] = (v = (0 | (v / 0x10000)) + 2 * a0 * a7 + 2 * a1 * a6 + 2\n                    * a2 * a5 + 2 * a3 * a4) & 0xffff;\n        r[8] = (v = (0 | (v / 0x10000)) + 2 * a1 * a7 + 2 * a2 * a6 + 2\n                    * a3 * a5 + a4 * a4) & 0xffff;\n        r[9] = (v = (0 | (v / 0x10000)) + 2 * a2 * a7 + 2 * a3 * a6 + 2\n                    * a4 * a5) & 0xffff;\n        r[10] = (v = (0 | (v / 0x10000)) + 2 * a3 * a7 + 2 * a4 * a6\n                     + a5 * a5) & 0xffff;\n        r[11] = (v = (0 | (v / 0x10000)) + 2 * a4 * a7 + 2 * a5 * a6) & 0xffff;\n        r[12] = (v = (0 | (v / 0x10000)) + 2 * a5 * a7 + a6 * a6) & 0xffff;\n        r[13] = (v = (0 | (v / 0x10000)) + 2 * a6 * a7) & 0xffff;\n        r[14] = (v = (0 | (v / 0x10000)) + a7 * a7) & 0xffff;\n        r[15] = 0 | (v / 0x10000);\n        return r;\n    }\n\n    function _sqrmodp(a) {\n        var x = _sqr8h(a[15], a[14], a[13], a[12], a[11], a[10], a[9],\n                       a[8]);\n        var z = _sqr8h(a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]);\n        var y = _sqr8h(a[15] + a[7], a[14] + a[6], a[13] + a[5], a[12]\n                                                                 + a[4],\n                       a[11] + a[3], a[10] + a[2], a[9] + a[1], a[8]\n                                                                + a[0]);\n        var r = [];\n        var v;\n        r[0] = (v = 0x800000 + z[0] + (y[8] - x[8] - z[8] + x[0] - 0x80)\n                    * 38) & 0xffff;\n        r[1] = (v = 0x7fff80 + (v >>> 16) + z[1]\n                    + (y[9] - x[9] - z[9] + x[1]) * 38) & 0xffff;\n        r[2] = (v = 0x7fff80 + (v >>> 16) + z[2]\n                    + (y[10] - x[10] - z[10] + x[2]) * 38) & 0xffff;\n        r[3] = (v = 0x7fff80 + (v >>> 16) + z[3]\n                    + (y[11] - x[11] - z[11] + x[3]) * 38) & 0xffff;\n        r[4] = (v = 0x7fff80 + (v >>> 16) + z[4]\n                    + (y[12] - x[12] - z[12] + x[4]) * 38) & 0xffff;\n        r[5] = (v = 0x7fff80 + (v >>> 16) + z[5]\n                    + (y[13] - x[13] - z[13] + x[5]) * 38) & 0xffff;\n        r[6] = (v = 0x7fff80 + (v >>> 16) + z[6]\n                    + (y[14] - x[14] - z[14] + x[6]) * 38) & 0xffff;\n        r[7] = (v = 0x7fff80 + (v >>> 16) + z[7]\n                    + (y[15] - x[15] - z[15] + x[7]) * 38) & 0xffff;\n        r[8] = (v = 0x7fff80 + (v >>> 16) + z[8] + y[0] - x[0] - z[0]\n                    + x[8] * 38) & 0xffff;\n        r[9] = (v = 0x7fff80 + (v >>> 16) + z[9] + y[1] - x[1] - z[1]\n                    + x[9] * 38) & 0xffff;\n        r[10] = (v = 0x7fff80 + (v >>> 16) + z[10] + y[2] - x[2] - z[2]\n                     + x[10] * 38) & 0xffff;\n        r[11] = (v = 0x7fff80 + (v >>> 16) + z[11] + y[3] - x[3] - z[3]\n                     + x[11] * 38) & 0xffff;\n        r[12] = (v = 0x7fff80 + (v >>> 16) + z[12] + y[4] - x[4] - z[4]\n                     + x[12] * 38) & 0xffff;\n        r[13] = (v = 0x7fff80 + (v >>> 16) + z[13] + y[5] - x[5] - z[5]\n                     + x[13] * 38) & 0xffff;\n        r[14] = (v = 0x7fff80 + (v >>> 16) + z[14] + y[6] - x[6] - z[6]\n                     + x[14] * 38) & 0xffff;\n        r[15] = 0x7fff80 + (v >>> 16) + z[15] + y[7] - x[7] - z[7]\n                + x[15] * 38;\n        _reduce(r);\n        return r;\n    }\n\n    function _mul8h(a7, a6, a5, a4, a3, a2, a1, a0, b7, b6, b5, b4, b3,\n                    b2, b1, b0) {\n        // 'division by 0x10000' can not be replaced by '>> 16' because\n        // more than 32 bits of precision are needed\n        var r = [];\n        var v;\n        r[0] = (v = a0 * b0) & 0xffff;\n        r[1] = (v = (0 | (v / 0x10000)) + a0 * b1 + a1 * b0) & 0xffff;\n        r[2] = (v = (0 | (v / 0x10000)) + a0 * b2 + a1 * b1 + a2 * b0) & 0xffff;\n        r[3] = (v = (0 | (v / 0x10000)) + a0 * b3 + a1 * b2 + a2 * b1\n                    + a3 * b0) & 0xffff;\n        r[4] = (v = (0 | (v / 0x10000)) + a0 * b4 + a1 * b3 + a2 * b2\n                    + a3 * b1 + a4 * b0) & 0xffff;\n        r[5] = (v = (0 | (v / 0x10000)) + a0 * b5 + a1 * b4 + a2 * b3\n                    + a3 * b2 + a4 * b1 + a5 * b0) & 0xffff;\n        r[6] = (v = (0 | (v / 0x10000)) + a0 * b6 + a1 * b5 + a2 * b4\n                    + a3 * b3 + a4 * b2 + a5 * b1 + a6 * b0) & 0xffff;\n        r[7] = (v = (0 | (v / 0x10000)) + a0 * b7 + a1 * b6 + a2 * b5\n                    + a3 * b4 + a4 * b3 + a5 * b2 + a6 * b1 + a7 * b0) & 0xffff;\n        r[8] = (v = (0 | (v / 0x10000)) + a1 * b7 + a2 * b6 + a3 * b5\n                    + a4 * b4 + a5 * b3 + a6 * b2 + a7 * b1) & 0xffff;\n        r[9] = (v = (0 | (v / 0x10000)) + a2 * b7 + a3 * b6 + a4 * b5\n                    + a5 * b4 + a6 * b3 + a7 * b2) & 0xffff;\n        r[10] = (v = (0 | (v / 0x10000)) + a3 * b7 + a4 * b6 + a5 * b5\n                     + a6 * b4 + a7 * b3) & 0xffff;\n        r[11] = (v = (0 | (v / 0x10000)) + a4 * b7 + a5 * b6 + a6 * b5\n                     + a7 * b4) & 0xffff;\n        r[12] = (v = (0 | (v / 0x10000)) + a5 * b7 + a6 * b6 + a7 * b5) & 0xffff;\n        r[13] = (v = (0 | (v / 0x10000)) + a6 * b7 + a7 * b6) & 0xffff;\n        r[14] = (v = (0 | (v / 0x10000)) + a7 * b7) & 0xffff;\n        r[15] = (0 | (v / 0x10000));\n        return r;\n    }\n\n    function _mulmodp(a, b) {\n        // Karatsuba multiplication scheme: x*y = (b^2+b)*x1*y1 -\n        // b*(x1-x0)*(y1-y0) + (b+1)*x0*y0\n        var x = _mul8h(a[15], a[14], a[13], a[12], a[11], a[10], a[9],\n                       a[8], b[15], b[14], b[13], b[12], b[11], b[10],\n                       b[9], b[8]);\n        var z = _mul8h(a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0],\n                       b[7], b[6], b[5], b[4], b[3], b[2], b[1], b[0]);\n        var y = _mul8h(a[15] + a[7], a[14] + a[6], a[13] + a[5], a[12]\n                                                                 + a[4],\n                       a[11] + a[3], a[10] + a[2], a[9] + a[1], a[8]\n                                                                + a[0],\n                       b[15] + b[7], b[14] + b[6], b[13] + b[5], b[12]\n                                                                 + b[4],\n                       b[11] + b[3], b[10] + b[2], b[9] + b[1], b[8]\n                                                                + b[0]);\n        var r = [];\n        var v;\n        r[0] = (v = 0x800000 + z[0] + (y[8] - x[8] - z[8] + x[0] - 0x80)\n                    * 38) & 0xffff;\n        r[1] = (v = 0x7fff80 + (v >>> 16) + z[1]\n                    + (y[9] - x[9] - z[9] + x[1]) * 38) & 0xffff;\n        r[2] = (v = 0x7fff80 + (v >>> 16) + z[2]\n                    + (y[10] - x[10] - z[10] + x[2]) * 38) & 0xffff;\n        r[3] = (v = 0x7fff80 + (v >>> 16) + z[3]\n                    + (y[11] - x[11] - z[11] + x[3]) * 38) & 0xffff;\n        r[4] = (v = 0x7fff80 + (v >>> 16) + z[4]\n                    + (y[12] - x[12] - z[12] + x[4]) * 38) & 0xffff;\n        r[5] = (v = 0x7fff80 + (v >>> 16) + z[5]\n                    + (y[13] - x[13] - z[13] + x[5]) * 38) & 0xffff;\n        r[6] = (v = 0x7fff80 + (v >>> 16) + z[6]\n                    + (y[14] - x[14] - z[14] + x[6]) * 38) & 0xffff;\n        r[7] = (v = 0x7fff80 + (v >>> 16) + z[7]\n                    + (y[15] - x[15] - z[15] + x[7]) * 38) & 0xffff;\n        r[8] = (v = 0x7fff80 + (v >>> 16) + z[8] + y[0] - x[0] - z[0]\n                    + x[8] * 38) & 0xffff;\n        r[9] = (v = 0x7fff80 + (v >>> 16) + z[9] + y[1] - x[1] - z[1]\n                    + x[9] * 38) & 0xffff;\n        r[10] = (v = 0x7fff80 + (v >>> 16) + z[10] + y[2] - x[2] - z[2]\n                     + x[10] * 38) & 0xffff;\n        r[11] = (v = 0x7fff80 + (v >>> 16) + z[11] + y[3] - x[3] - z[3]\n                     + x[11] * 38) & 0xffff;\n        r[12] = (v = 0x7fff80 + (v >>> 16) + z[12] + y[4] - x[4] - z[4]\n                     + x[12] * 38) & 0xffff;\n        r[13] = (v = 0x7fff80 + (v >>> 16) + z[13] + y[5] - x[5] - z[5]\n                     + x[13] * 38) & 0xffff;\n        r[14] = (v = 0x7fff80 + (v >>> 16) + z[14] + y[6] - x[6] - z[6]\n                     + x[14] * 38) & 0xffff;\n        r[15] = 0x7fff80 + (v >>> 16) + z[15] + y[7] - x[7] - z[7]\n                + x[15] * 38;\n        _reduce(r);\n        return r;\n    }\n\n    function _reduce(arr) {\n        var aCopy = arr.slice(0);\n        var choice = [arr, aCopy];\n        var v = arr[15];\n        // Use the dummy copy instead of just returning to be more constant time.\n        var a = choice[(v < 0x8000) & 1];\n        a[15] = v & 0x7fff;\n        // >32-bits of precision are required here so '/ 0x8000' can not be\n        // replaced by the arithmetic equivalent '>>> 15'\n        v = (0 | (v / 0x8000)) * 19;\n        a[0] = (v += a[0]) & 0xffff;\n        v = v >>> 16;\n        a[1] = (v += a[1]) & 0xffff;\n        v = v >>> 16;\n        a[2] = (v += a[2]) & 0xffff;\n        v = v >>> 16;\n        a[3] = (v += a[3]) & 0xffff;\n        v = v >>> 16;\n        a[4] = (v += a[4]) & 0xffff;\n        v = v >>> 16;\n        a[5] = (v += a[5]) & 0xffff;\n        v = v >>> 16;\n        a[6] = (v += a[6]) & 0xffff;\n        v = v >>> 16;\n        a[7] = (v += a[7]) & 0xffff;\n        v = v >>> 16;\n        a[8] = (v += a[8]) & 0xffff;\n        v = v >>> 16;\n        a[9] = (v += a[9]) & 0xffff;\n        v = v >>> 16;\n        a[10] = (v += a[10]) & 0xffff;\n        v = v >>> 16;\n        a[11] = (v += a[11]) & 0xffff;\n        v = v >>> 16;\n        a[12] = (v += a[12]) & 0xffff;\n        v = v >>> 16;\n        a[13] = (v += a[13]) & 0xffff;\n        v = v >>> 16;\n        a[14] = (v += a[14]) & 0xffff;\n        v = v >>> 16;\n        a[15] += v;\n    }\n\n    function _addmodp(a, b) {\n        var r = [];\n        var v;\n        r[0] = (v = ((0 | (a[15] >>> 15)) + (0 | (b[15] >>> 15))) * 19\n                    + a[0] + b[0]) & 0xffff;\n        r[1] = (v = (v >>> 16) + a[1] + b[1]) & 0xffff;\n        r[2] = (v = (v >>> 16) + a[2] + b[2]) & 0xffff;\n        r[3] = (v = (v >>> 16) + a[3] + b[3]) & 0xffff;\n        r[4] = (v = (v >>> 16) + a[4] + b[4]) & 0xffff;\n        r[5] = (v = (v >>> 16) + a[5] + b[5]) & 0xffff;\n        r[6] = (v = (v >>> 16) + a[6] + b[6]) & 0xffff;\n        r[7] = (v = (v >>> 16) + a[7] + b[7]) & 0xffff;\n        r[8] = (v = (v >>> 16) + a[8] + b[8]) & 0xffff;\n        r[9] = (v = (v >>> 16) + a[9] + b[9]) & 0xffff;\n        r[10] = (v = (v >>> 16) + a[10] + b[10]) & 0xffff;\n        r[11] = (v = (v >>> 16) + a[11] + b[11]) & 0xffff;\n        r[12] = (v = (v >>> 16) + a[12] + b[12]) & 0xffff;\n        r[13] = (v = (v >>> 16) + a[13] + b[13]) & 0xffff;\n        r[14] = (v = (v >>> 16) + a[14] + b[14]) & 0xffff;\n        r[15] = (v >>> 16) + (a[15] & 0x7fff) + (b[15] & 0x7fff);\n        return r;\n    }\n\n    function _submodp(a, b) {\n        var r = [];\n        var v;\n        r[0] = (v = 0x80000\n                    + ((0 | (a[15] >>> 15)) - (0 | (b[15] >>> 15)) - 1)\n                    * 19 + a[0] - b[0]) & 0xffff;\n        r[1] = (v = (v >>> 16) + 0x7fff8 + a[1] - b[1]) & 0xffff;\n        r[2] = (v = (v >>> 16) + 0x7fff8 + a[2] - b[2]) & 0xffff;\n        r[3] = (v = (v >>> 16) + 0x7fff8 + a[3] - b[3]) & 0xffff;\n        r[4] = (v = (v >>> 16) + 0x7fff8 + a[4] - b[4]) & 0xffff;\n        r[5] = (v = (v >>> 16) + 0x7fff8 + a[5] - b[5]) & 0xffff;\n        r[6] = (v = (v >>> 16) + 0x7fff8 + a[6] - b[6]) & 0xffff;\n        r[7] = (v = (v >>> 16) + 0x7fff8 + a[7] - b[7]) & 0xffff;\n        r[8] = (v = (v >>> 16) + 0x7fff8 + a[8] - b[8]) & 0xffff;\n        r[9] = (v = (v >>> 16) + 0x7fff8 + a[9] - b[9]) & 0xffff;\n        r[10] = (v = (v >>> 16) + 0x7fff8 + a[10] - b[10]) & 0xffff;\n        r[11] = (v = (v >>> 16) + 0x7fff8 + a[11] - b[11]) & 0xffff;\n        r[12] = (v = (v >>> 16) + 0x7fff8 + a[12] - b[12]) & 0xffff;\n        r[13] = (v = (v >>> 16) + 0x7fff8 + a[13] - b[13]) & 0xffff;\n        r[14] = (v = (v >>> 16) + 0x7fff8 + a[14] - b[14]) & 0xffff;\n        r[15] = (v >>> 16) + 0x7ff8 + (a[15] & 0x7fff)\n                - (b[15] & 0x7fff);\n        return r;\n    }\n\n    function _invmodp(a) {\n        var c = a;\n        var i = 250;\n        while (--i) {\n            a = _sqrmodp(a);\n            a = _mulmodp(a, c);\n        }\n        a = _sqrmodp(a);\n        a = _sqrmodp(a);\n        a = _mulmodp(a, c);\n        a = _sqrmodp(a);\n        a = _sqrmodp(a);\n        a = _mulmodp(a, c);\n        a = _sqrmodp(a);\n        a = _mulmodp(a, c);\n        return a;\n    }\n\n    function _mulasmall(a) {\n        // 'division by 0x10000' can not be replaced by '>> 16' because\n        // more than 32 bits of precision are needed\n        var m = 121665;\n        var r = [];\n        var v;\n        r[0] = (v = a[0] * m) & 0xffff;\n        r[1] = (v = (0 | (v / 0x10000)) + a[1] * m) & 0xffff;\n        r[2] = (v = (0 | (v / 0x10000)) + a[2] * m) & 0xffff;\n        r[3] = (v = (0 | (v / 0x10000)) + a[3] * m) & 0xffff;\n        r[4] = (v = (0 | (v / 0x10000)) + a[4] * m) & 0xffff;\n        r[5] = (v = (0 | (v / 0x10000)) + a[5] * m) & 0xffff;\n        r[6] = (v = (0 | (v / 0x10000)) + a[6] * m) & 0xffff;\n        r[7] = (v = (0 | (v / 0x10000)) + a[7] * m) & 0xffff;\n        r[8] = (v = (0 | (v / 0x10000)) + a[8] * m) & 0xffff;\n        r[9] = (v = (0 | (v / 0x10000)) + a[9] * m) & 0xffff;\n        r[10] = (v = (0 | (v / 0x10000)) + a[10] * m) & 0xffff;\n        r[11] = (v = (0 | (v / 0x10000)) + a[11] * m) & 0xffff;\n        r[12] = (v = (0 | (v / 0x10000)) + a[12] * m) & 0xffff;\n        r[13] = (v = (0 | (v / 0x10000)) + a[13] * m) & 0xffff;\n        r[14] = (v = (0 | (v / 0x10000)) + a[14] * m) & 0xffff;\n        r[15] = (0 | (v / 0x10000)) + a[15] * m;\n        _reduce(r);\n        return r;\n    }\n\n    function _dbl(x, z) {\n        var x_2, z_2, m, n, o;\n        m = _sqrmodp(_addmodp(x, z));\n        n = _sqrmodp(_submodp(x, z));\n        o = _submodp(m, n);\n        x_2 = _mulmodp(n, m);\n        z_2 = _mulmodp(_addmodp(_mulasmall(o), m), o);\n        return [x_2, z_2];\n    }\n\n    function _sum(x, z, x_p, z_p, x_1) {\n        var x_3, z_3, p, q;\n        p = _mulmodp(_submodp(x, z), _addmodp(x_p, z_p));\n        q = _mulmodp(_addmodp(x, z), _submodp(x_p, z_p));\n        x_3 = _sqrmodp(_addmodp(p, q));\n        z_3 = _mulmodp(_sqrmodp(_submodp(p, q)), x_1);\n        return [x_3, z_3];\n    }\n\n    function _generateKey(curve25519) {\n        var buffer = crypto.randomBytes(32);\n\n        // For Curve25519 DH keys, we need to apply some bit mask on generated\n        // keys:\n        // * clear bit 0, 1, 2 of first byte\n        // * clear bit 7 of last byte\n        // * set bit 6 of last byte\n        if (curve25519 === true) {\n            buffer[0] &= 0xf8;\n            buffer[31] = (buffer[31] & 0x7f) | 0x40;\n        }\n        var result = [];\n        for (var i = 0; i < buffer.length; i++) {\n            result.push(String.fromCharCode(buffer[i]));\n        }\n        return result.join('');\n    }\n\n    // Expose some functions to the outside through this name space.\n    // Note: This is not part of the public API.\n    ns.getbit = _getbit;\n    ns.setbit = _setbit;\n    ns.addmodp = _addmodp;\n    ns.invmodp = _invmodp;\n    ns.mulmodp = _mulmodp;\n    ns.reduce = _reduce;\n    ns.dbl = _dbl;\n    ns.sum = _sum;\n    ns.ZERO = _ZERO;\n    ns.ONE = _ONE;\n    ns.BASE = _BASE;\n    ns.bigintadd = _bigintadd;\n    ns.bigintsub = _bigintsub;\n    ns.bigintcmp = _bigintcmp;\n    ns.mulmodp = _mulmodp;\n    ns.sqrmodp = _sqrmodp;\n    ns.generateKey = _generateKey;\n\n\nmodule.exports = ns;\n"]}