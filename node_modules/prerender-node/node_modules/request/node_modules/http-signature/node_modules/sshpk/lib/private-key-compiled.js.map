{"version":3,"sources":["private-key.js"],"names":[],"mappings":"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","file":"private-key-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = PrivateKey;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar errs = require('./errors');\nvar util = require('util');\nvar utils = require('./utils');\nvar edCompat;\nvar ed;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar Key = require('./key');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\nformats['ssh'] = formats['ssh-private'];\n\nfunction PrivateKey(opts) {\n\tassert.object(opts, 'options');\n\tKey.call(this, opts);\n\n\tthis._pubCache = undefined;\n}\nutil.inherits(PrivateKey, Key);\n\nPrivateKey.formats = formats;\n\nPrivateKey.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'pkcs1';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\n\treturn (formats[format].write(this));\n};\n\nPrivateKey.prototype.hash = function (algo) {\n\treturn (this.toPublic().hash(algo));\n};\n\nPrivateKey.prototype.toPublic = function () {\n\tif (this._pubCache)\n\t\treturn (this._pubCache);\n\n\tvar algInfo = algs.info[this.type];\n\tvar pubParts = [];\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tvar p = algInfo.parts[i];\n\t\tpubParts.push(this.part[p]);\n\t}\n\n\tthis._pubCache = new Key({\n\t\ttype: this.type,\n\t\tsource: this,\n\t\tparts: pubParts\n\t});\n\tif (this.comment)\n\t\tthis._pubCache.comment = this.comment;\n\treturn (this._pubCache);\n};\n\nPrivateKey.prototype.derive = function (newType, newSize) {\n\tassert.string(newType, 'type');\n\tassert.optionalNumber(newSize, 'size');\n\tvar priv, pub;\n\n\tif (this.type === 'ed25519' && newType === 'curve25519') {\n\t\tif (ed === undefined)\n\t\t\ted = require('jodid25519');\n\n\t\tpriv = this.part.r.data;\n\t\tif (priv[0] === 0x00)\n\t\t\tpriv = priv.slice(1);\n\t\tpriv = priv.slice(0, 32);\n\n\t\tpub = ed.dh.publicKey(priv);\n\t\tpriv = utils.mpNormalize(Buffer.concat([priv, pub]));\n\n\t\treturn (new PrivateKey({\n\t\t\ttype: 'curve25519',\n\t\t\tparts: [\n\t\t\t\t{ name: 'R', data: utils.mpNormalize(pub) },\n\t\t\t\t{ name: 'r', data: priv }\n\t\t\t]\n\t\t}));\n\t} else if (this.type === 'curve25519' && newType === 'ed25519') {\n\t\tif (ed === undefined)\n\t\t\ted = require('jodid25519');\n\n\t\tpriv = this.part.r.data;\n\t\tif (priv[0] === 0x00)\n\t\t\tpriv = priv.slice(1);\n\t\tpriv = priv.slice(0, 32);\n\n\t\tpub = ed.eddsa.publicKey(priv.toString('binary'));\n\t\tpub = new Buffer(pub, 'binary');\n\n\t\tpriv = utils.mpNormalize(Buffer.concat([priv, pub]));\n\n\t\treturn (new PrivateKey({\n\t\t\ttype: 'ed25519',\n\t\t\tparts: [\n\t\t\t\t{ name: 'R', data: utils.mpNormalize(pub) },\n\t\t\t\t{ name: 'r', data: priv }\n\t\t\t]\n\t\t}));\n\t}\n\tthrow (new Error('Key derivation not supported from ' + this.type +\n\t    ' to ' + newType));\n};\n\nPrivateKey.prototype.createVerify = function (hashAlgo) {\n\treturn (this.toPublic().createVerify(hashAlgo));\n};\n\nPrivateKey.prototype.createSign = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Signer(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = this.type.toUpperCase() + '-';\n\t\tif (this.type === 'ecdsa')\n\t\t\tnm = 'ecdsa-with-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createSign(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createSign(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldSign = v.sign.bind(v);\n\tvar key = this.toBuffer('pkcs1');\n\tvar type = this.type;\n\tv.sign = function () {\n\t\tvar sig = oldSign(key);\n\t\tif (typeof (sig) === 'string')\n\t\t\tsig = new Buffer(sig, 'binary');\n\t\tsig = Signature.parse(sig, type, 'asn1');\n\t\tsig.hashAlgorithm = hashAlgo;\n\t\treturn (sig);\n\t};\n\treturn (v);\n};\n\nPrivateKey.parse = function (data, format, name) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (name === undefined)\n\t\tname = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data);\n\t\tassert.ok(k instanceof PrivateKey, 'key is not a private key');\n\t\tif (!k.comment)\n\t\t\tk.comment = name;\n\t\treturn (k);\n\t} catch (e) {\n\t\tthrow (new KeyParseError(name, format, e));\n\t}\n};\n\nPrivateKey.isPrivateKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, PrivateKey, ver));\n};\n\n/*\n * API versions for PrivateKey:\n * [1,0] -- initial ver\n * [1,1] -- added auto, pkcs[18], openssh/ssh-private formats\n * [1,2] -- added defaultHashAlgorithm\n * [1,3] -- added derive, ed, createDH\n * [1,4] -- first tagged version\n */\nPrivateKey.prototype._sshpkApiVersion = [1, 4];\n\nPrivateKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toPublic);\n\tassert.func(obj.createSign);\n\tif (obj.derive)\n\t\treturn ([1, 3]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 2]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n"]}