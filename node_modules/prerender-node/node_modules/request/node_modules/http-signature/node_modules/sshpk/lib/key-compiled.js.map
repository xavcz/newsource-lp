{"version":3,"sources":["key.js"],"names":[],"mappings":"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","file":"key-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Key;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar DiffieHellman = require('./dhe');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar PrivateKey = require('./private-key');\nvar edCompat;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh'] = require('./formats/ssh');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\n\nfunction Key(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\tassert.optionalString(opts.comment, 'options.comment');\n\n\tvar algInfo = algs.info[opts.type];\n\tif (typeof (algInfo) !== 'object')\n\t\tthrow (new InvalidAlgorithmError(opts.type));\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n\tthis.comment = undefined;\n\tthis.source = opts.source;\n\n\t/* for speeding up hashing/fingerprint operations */\n\tthis._rfc4253Cache = opts._rfc4253Cache;\n\tthis._hashCache = {};\n\n\tvar sz;\n\tthis.curve = undefined;\n\tif (this.type === 'ecdsa') {\n\t\tvar curve = this.part.curve.data.toString();\n\t\tthis.curve = curve;\n\t\tsz = algs.curves[curve].size;\n\t} else if (this.type === 'ed25519') {\n\t\tsz = 256;\n\t\tthis.curve = 'curve25519';\n\t} else {\n\t\tvar szPart = this.part[algInfo.sizePart];\n\t\tsz = szPart.data.length;\n\t\tsz = sz * 8 - utils.countZeros(szPart.data);\n\t}\n\tthis.size = sz;\n}\n\nKey.formats = formats;\n\nKey.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'ssh';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\n\tif (format === 'rfc4253') {\n\t\tif (this._rfc4253Cache === undefined)\n\t\t\tthis._rfc4253Cache = formats['rfc4253'].write(this);\n\t\treturn (this._rfc4253Cache);\n\t}\n\n\treturn (formats[format].write(this));\n};\n\nKey.prototype.toString = function (format) {\n\treturn (this.toBuffer(format).toString());\n};\n\nKey.prototype.hash = function (algo) {\n\tassert.string(algo, 'algorithm');\n\talgo = algo.toLowerCase();\n\tif (algs.hashAlgs[algo] === undefined)\n\t\tthrow (new InvalidAlgorithmError(algo));\n\n\tif (this._hashCache[algo])\n\t\treturn (this._hashCache[algo]);\n\n\tvar hash = crypto.createHash(algo).\n\t    update(this.toBuffer('rfc4253')).digest();\n\t/* Workaround for node 0.8 */\n\tif (typeof (hash) === 'string')\n\t\thash = new Buffer(hash, 'binary');\n\tthis._hashCache[algo] = hash;\n\treturn (hash);\n};\n\nKey.prototype.fingerprint = function (algo) {\n\tif (algo === undefined)\n\t\talgo = 'sha256';\n\tassert.string(algo, 'algorithm');\n\tvar opts = {\n\t\thash: this.hash(algo),\n\t\talgorithm: algo\n\t};\n\treturn (new Fingerprint(opts));\n};\n\nKey.prototype.defaultHashAlgorithm = function () {\n\tvar hashAlgo = 'sha1';\n\tif (this.type === 'rsa')\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'dsa' && this.size > 1024)\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'ed25519')\n\t\thashAlgo = 'sha512';\n\tif (this.type === 'ecdsa') {\n\t\tif (this.size <= 256)\n\t\t\thashAlgo = 'sha256';\n\t\telse if (this.size <= 384)\n\t\t\thashAlgo = 'sha384';\n\t\telse\n\t\t\thashAlgo = 'sha512';\n\t}\n\treturn (hashAlgo);\n};\n\nKey.prototype.createVerify = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Verifier(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = this.type.toUpperCase() + '-';\n\t\tif (this.type === 'ecdsa')\n\t\t\tnm = 'ecdsa-with-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldVerify = v.verify.bind(v);\n\tvar key = this.toBuffer('pkcs8');\n\tvar self = this;\n\tv.verify = function (signature, fmt) {\n\t\tif (Signature.isSignature(signature, [2, 0])) {\n\t\t\tif (signature.type !== self.type)\n\t\t\t\treturn (false);\n\t\t\tif (signature.hashAlgorithm &&\n\t\t\t    signature.hashAlgorithm !== hashAlgo)\n\t\t\t\treturn (false);\n\t\t\treturn (oldVerify(key, signature.toBuffer('asn1')));\n\n\t\t} else if (typeof (signature) === 'string' ||\n\t\t    Buffer.isBuffer(signature)) {\n\t\t\treturn (oldVerify(key, signature, fmt));\n\n\t\t/*\n\t\t * Avoid doing this on valid arguments, walking the prototype\n\t\t * chain can be quite slow.\n\t\t */\n\t\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\t\tthrow (new Error('signature was created by too old ' +\n\t\t\t    'a version of sshpk and cannot be verified'));\n\n\t\t} else {\n\t\t\tthrow (new TypeError('signature must be a string, ' +\n\t\t\t    'Buffer, or Signature object'));\n\t\t}\n\t};\n\treturn (v);\n};\n\nKey.prototype.createDiffieHellman = function () {\n\tif (this.type === 'rsa')\n\t\tthrow (new Error('RSA keys do not support Diffie-Hellman'));\n\n\treturn (new DiffieHellman(this));\n};\nKey.prototype.createDH = Key.prototype.createDiffieHellman;\n\nKey.parse = function (data, format, name) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (name === undefined)\n\t\tname = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data);\n\t\tif (k instanceof PrivateKey)\n\t\t\tk = k.toPublic();\n\t\tif (!k.comment)\n\t\t\tk.comment = name;\n\t\treturn (k);\n\t} catch (e) {\n\t\tthrow (new KeyParseError(name, format, e));\n\t}\n};\n\nKey.isKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Key, ver));\n};\n\n/*\n * API versions for Key:\n * [1,0] -- initial ver, may take Signature for createVerify or may not\n * [1,1] -- added pkcs1, pkcs8 formats\n * [1,2] -- added auto, ssh-private, openssh formats\n * [1,3] -- added defaultHashAlgorithm\n * [1,4] -- added ed support, createDH\n * [1,5] -- first explicitly tagged version\n */\nKey.prototype._sshpkApiVersion = [1, 5];\n\nKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tassert.func(obj.fingerprint);\n\tif (obj.createDH)\n\t\treturn ([1, 4]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 3]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 2]);\n\tif (obj.formats['pkcs1'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n"]}