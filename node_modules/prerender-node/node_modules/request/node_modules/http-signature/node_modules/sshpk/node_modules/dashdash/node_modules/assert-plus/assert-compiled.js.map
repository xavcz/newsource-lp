{"version":3,"sources":["assert.js"],"names":[],"mappings":"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","file":"assert-compiled.js","sourcesContent":["// Copyright (c) 2012, Mark Cavage. All rights reserved.\n// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert');\nvar Stream = require('stream').Stream;\nvar util = require('util');\n\n\n///--- Globals\n\n/* JSSTYLED */\nvar UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;\n\n\n///--- Internal\n\nfunction _capitalize(str) {\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n\nfunction _toss(name, expected, oper, arg, actual) {\n    throw new assert.AssertionError({\n        message: util.format('%s (%s) is required', name, expected),\n        actual: (actual === undefined) ? typeof (arg) : actual(arg),\n        expected: expected,\n        operator: oper || '===',\n        stackStartFunction: _toss.caller\n    });\n}\n\nfunction _getClass(arg) {\n    return (Object.prototype.toString.call(arg).slice(8, -1));\n}\n\nfunction noop() {\n    // Why even bother with asserts?\n}\n\n\n///--- Exports\n\nvar types = {\n    bool: {\n        check: function (arg) { return typeof (arg) === 'boolean'; }\n    },\n    func: {\n        check: function (arg) { return typeof (arg) === 'function'; }\n    },\n    string: {\n        check: function (arg) { return typeof (arg) === 'string'; }\n    },\n    object: {\n        check: function (arg) {\n            return typeof (arg) === 'object' && arg !== null;\n        }\n    },\n    number: {\n        check: function (arg) {\n            return typeof (arg) === 'number' && !isNaN(arg);\n        }\n    },\n    finite: {\n        check: function (arg) {\n            return typeof (arg) === 'number' && !isNaN(arg) && isFinite(arg);\n        }\n    },\n    buffer: {\n        check: function (arg) { return Buffer.isBuffer(arg); },\n        operator: 'Buffer.isBuffer'\n    },\n    array: {\n        check: function (arg) { return Array.isArray(arg); },\n        operator: 'Array.isArray'\n    },\n    stream: {\n        check: function (arg) { return arg instanceof Stream; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    date: {\n        check: function (arg) { return arg instanceof Date; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    regexp: {\n        check: function (arg) { return arg instanceof RegExp; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    uuid: {\n        check: function (arg) {\n            return typeof (arg) === 'string' && UUID_REGEXP.test(arg);\n        },\n        operator: 'isUUID'\n    }\n};\n\nfunction _setExports(ndebug) {\n    var keys = Object.keys(types);\n    var out;\n\n    /* re-export standard assert */\n    if (process.env.NODE_NDEBUG) {\n        out = noop;\n    } else {\n        out = function (arg, msg) {\n            if (!arg) {\n                _toss(msg, 'true', arg);\n            }\n        };\n    }\n\n    /* standard checks */\n    keys.forEach(function (k) {\n        if (ndebug) {\n            out[k] = noop;\n            return;\n        }\n        var type = types[k];\n        out[k] = function (arg, msg) {\n            if (!type.check(arg)) {\n                _toss(msg, k, type.operator, arg, type.actual);\n            }\n        };\n    });\n\n    /* optional checks */\n    keys.forEach(function (k) {\n        var name = 'optional' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        out[name] = function (arg, msg) {\n            if (arg === undefined || arg === null) {\n                return;\n            }\n            if (!type.check(arg)) {\n                _toss(msg, k, type.operator, arg, type.actual);\n            }\n        };\n    });\n\n    /* arrayOf checks */\n    keys.forEach(function (k) {\n        var name = 'arrayOf' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        var expected = '[' + k + ']';\n        out[name] = function (arg, msg) {\n            if (!Array.isArray(arg)) {\n                _toss(msg, expected, type.operator, arg, type.actual);\n            }\n            var i;\n            for (i = 0; i < arg.length; i++) {\n                if (!type.check(arg[i])) {\n                    _toss(msg, expected, type.operator, arg, type.actual);\n                }\n            }\n        };\n    });\n\n    /* optionalArrayOf checks */\n    keys.forEach(function (k) {\n        var name = 'optionalArrayOf' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        var expected = '[' + k + ']';\n        out[name] = function (arg, msg) {\n            if (arg === undefined || arg === null) {\n                return;\n            }\n            if (!Array.isArray(arg)) {\n                _toss(msg, expected, type.operator, arg, type.actual);\n            }\n            var i;\n            for (i = 0; i < arg.length; i++) {\n                if (!type.check(arg[i])) {\n                    _toss(msg, expected, type.operator, arg, type.actual);\n                }\n            }\n        };\n    });\n\n    /* re-export built-in assertions */\n    Object.keys(assert).forEach(function (k) {\n        if (k === 'AssertionError') {\n            out[k] = assert[k];\n            return;\n        }\n        if (ndebug) {\n            out[k] = noop;\n            return;\n        }\n        out[k] = assert[k];\n    });\n\n    /* export ourselves (for unit tests _only_) */\n    out._setExports = _setExports;\n\n    return out;\n}\n\nmodule.exports = _setExports(process.env.NODE_NDEBUG);\n"]}