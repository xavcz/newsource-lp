{"version":3,"sources":["sshpk-conv"],"names":[],"mappings":"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","file":"sshpk-conv-compiled.js","sourcesContent":["#!/usr/bin/env node\n// -*- mode: js -*-\n// vim: set filetype=javascript :\n// Copyright 2015 Joyent, Inc.  All rights reserved.\n\nvar dashdash = require('dashdash');\nvar sshpk = require('../lib/index');\nvar fs = require('fs');\nvar path = require('path');\n\nvar options = [\n\t{\n\t\tnames: ['outformat', 't'],\n\t\ttype: 'string',\n\t\thelp: 'Output format'\n\t},\n\t{\n\t\tnames: ['informat', 'T'],\n\t\ttype: 'string',\n\t\thelp: 'Input format'\n\t},\n\t{\n\t\tnames: ['file', 'f'],\n\t\ttype: 'string',\n\t\thelp: 'Input file name (default stdin)'\n\t},\n\t{\n\t\tnames: ['out', 'o'],\n\t\ttype: 'string',\n\t\thelp: 'Output file name (default stdout)'\n\t},\n\t{\n\t\tnames: ['private', 'p'],\n\t\ttype: 'bool',\n\t\thelp: 'Produce a private key as output'\n\t},\n\t{\n\t\tnames: ['derive', 'd'],\n\t\ttype: 'string',\n\t\thelp: 'Output a new key derived from this one, with given algo'\n\t},\n\t{\n\t\tnames: ['identify', 'i'],\n\t\ttype: 'bool',\n\t\thelp: 'Print key metadata instead of converting'\n\t},\n\t{\n\t\tnames: ['comment', 'c'],\n\t\ttype: 'string',\n\t\thelp: 'Set key comment, if output format supports'\n\t},\n\t{\n\t\tnames: ['help', 'h'],\n\t\ttype: 'bool',\n\t\thelp: 'Shows this help text'\n\t}\n];\n\nif (require.main === module) {\n\tvar parser = dashdash.createParser({\n\t\toptions: options\n\t});\n\n\ttry {\n\t\tvar opts = parser.parse(process.argv);\n\t} catch (e) {\n\t\tconsole.error('sshpk-conv: error: %s', e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.help || opts._args.length > 1) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-conv: converts between SSH key formats\\n');\n\t\tconsole.error(help);\n\t\tconsole.error('\\navailable formats:');\n\t\tconsole.error('  - pem, pkcs1     eg id_rsa');\n\t\tconsole.error('  - ssh            eg id_rsa.pub');\n\t\tconsole.error('  - pkcs8          format you want for openssl');\n\t\tconsole.error('  - openssh        like output of ssh-keygen -o');\n\t\tconsole.error('  - rfc4253        raw OpenSSH wire format');\n\t\tprocess.exit(1);\n\t}\n\n\t/*\n\t * Key derivation can only be done on private keys, so use of the -d\n\t * option necessarily implies -p.\n\t */\n\tif (opts.derive)\n\t\topts.private = true;\n\n\tvar inFile = process.stdin;\n\tvar inFileName = 'stdin';\n\n\tvar inFilePath;\n\tif (opts.file) {\n\t\tinFilePath = opts.file;\n\t} else if (opts._args.length === 1) {\n\t\tinFilePath = opts._args[0];\n\t}\n\n\tif (inFilePath)\n\t\tinFileName = path.basename(inFilePath);\n\n\ttry {\n\t\tif (inFilePath) {\n\t\t\tfs.accessSync(inFilePath, fs.R_OK);\n\t\t\tinFile = fs.createReadStream(inFilePath);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-conv: error opening input file' +\n\t\t     ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar outFile = process.stdout;\n\n\ttry {\n\t\tif (opts.out && !opts.identify) {\n\t\t\tfs.accessSync(path.dirname(opts.out), fs.W_OK);\n\t\t\toutFile = fs.createWriteStream(opts.out);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-conv: error opening output file' +\n\t\t    ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar bufs = [];\n\tinFile.on('readable', function () {\n\t\tvar data;\n\t\twhile ((data = inFile.read()))\n\t\t\tbufs.push(data);\n\t});\n\tinFile.on('end', function () {\n\t\tvar buf = Buffer.concat(bufs);\n\t\tvar fmt = 'auto';\n\t\tif (opts.informat)\n\t\t\tfmt = opts.informat;\n\t\tvar f = sshpk.parseKey;\n\t\tif (opts.private)\n\t\t\tf = sshpk.parsePrivateKey;\n\t\ttry {\n\t\t\tvar key = f(buf, fmt, inFileName);\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-conv: ' +\n\t\t\t    e.name + ': ' + e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tif (opts.derive)\n\t\t\tkey = key.derive(opts.derive);\n\n\t\tif (opts.comment)\n\t\t\tkey.comment = opts.comment;\n\n\t\tif (!opts.identify) {\n\t\t\tfmt = undefined;\n\t\t\tif (opts.outformat)\n\t\t\t\tfmt = opts.outformat;\n\t\t\toutFile.write(key.toBuffer(fmt));\n\t\t\tif (fmt === 'ssh' ||\n\t\t\t    (!opts.private && fmt === undefined))\n\t\t\t\toutFile.write('\\n');\n\t\t\toutFile.once('drain', function () {\n\t\t\t\tprocess.exit(0);\n\t\t\t});\n\t\t} else {\n\t\t\tvar kind = 'public';\n\t\t\tif (sshpk.PrivateKey.isPrivateKey(key))\n\t\t\t\tkind = 'private';\n\t\t\tconsole.log('%s: a %d bit %s %s key', inFileName,\n\t\t\t    key.size, key.type.toUpperCase(), kind);\n\t\t\tif (key.type === 'ecdsa')\n\t\t\t\tconsole.log('ECDSA curve: %s', key.curve);\n\t\t\tif (key.comment)\n\t\t\t\tconsole.log('Comment: %s', key.comment);\n\t\t\tconsole.log('Fingerprint:');\n\t\t\tconsole.log('  ' + key.fingerprint().toString());\n\t\t\tconsole.log('  ' + key.fingerprint('md5').toString());\n\t\t\tprocess.exit(0);\n\t\t}\n\t});\n}\n"]}