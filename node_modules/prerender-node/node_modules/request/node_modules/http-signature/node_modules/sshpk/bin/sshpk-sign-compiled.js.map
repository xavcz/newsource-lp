{"version":3,"sources":["sshpk-sign"],"names":[],"mappings":"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","file":"sshpk-sign-compiled.js","sourcesContent":["#!/usr/bin/env node\n// -*- mode: js -*-\n// vim: set filetype=javascript :\n// Copyright 2015 Joyent, Inc.  All rights reserved.\n\nvar dashdash = require('dashdash');\nvar sshpk = require('../lib/index');\nvar fs = require('fs');\nvar path = require('path');\n\nvar options = [\n\t{\n\t\tnames: ['hash', 'H'],\n\t\ttype: 'string',\n\t\thelp: 'Hash algorithm (sha1, sha256, sha384, sha512)'\n\t},\n\t{\n\t\tnames: ['verbose', 'v'],\n\t\ttype: 'bool',\n\t\thelp: 'Display verbose info about key and hash used'\n\t},\n\t{\n\t\tnames: ['identity', 'i'],\n\t\ttype: 'string',\n\t\thelp: 'Path to key to use'\n\t},\n\t{\n\t\tnames: ['file', 'f'],\n\t\ttype: 'string',\n\t\thelp: 'Input filename'\n\t},\n\t{\n\t\tnames: ['out', 'o'],\n\t\ttype: 'string',\n\t\thelp: 'Output filename'\n\t},\n\t{\n\t\tnames: ['format', 't'],\n\t\ttype: 'string',\n\t\thelp: 'Signature format (asn1, ssh, raw)'\n\t},\n\t{\n\t\tnames: ['binary', 'b'],\n\t\ttype: 'bool',\n\t\thelp: 'Output raw binary instead of base64'\n\t},\n\t{\n\t\tnames: ['help', 'h'],\n\t\ttype: 'bool',\n\t\thelp: 'Shows this help text'\n\t}\n];\n\nif (require.main === module) {\n\tvar parser = dashdash.createParser({\n\t\toptions: options\n\t});\n\n\ttry {\n\t\tvar opts = parser.parse(process.argv);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error: %s', e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.help || opts._args.length > 1) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-sign: sign data using an SSH key\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(1);\n\t}\n\n\tif (!opts.identity) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-sign: the -i or --identity option ' +\n\t\t    'is required\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(1);\n\t}\n\n\tvar keyData = fs.readFileSync(opts.identity);\n\n\tvar key;\n\ttry {\n\t\tkey = sshpk.parsePrivateKey(keyData);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error loading private key \"' +\n\t\t    opts.identity + '\": ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar hash = opts.hash || key.defaultHashAlgorithm();\n\n\tvar signer;\n\ttry {\n\t\tsigner = key.createSign(hash);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error creating signer: ' +\n\t\t    e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.verbose) {\n\t\tconsole.error('sshpk-sign: using %s-%s with a %d bit key',\n\t\t    key.type, hash, key.size);\n\t}\n\n\tvar inFile = process.stdin;\n\tvar inFileName = 'stdin';\n\n\tvar inFilePath;\n\tif (opts.file) {\n\t\tinFilePath = opts.file;\n\t} else if (opts._args.length === 1) {\n\t\tinFilePath = opts._args[0];\n\t}\n\n\tif (inFilePath)\n\t\tinFileName = path.basename(inFilePath);\n\n\ttry {\n\t\tif (inFilePath) {\n\t\t\tfs.accessSync(inFilePath, fs.R_OK);\n\t\t\tinFile = fs.createReadStream(inFilePath);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error opening input file' +\n\t\t     ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar outFile = process.stdout;\n\n\ttry {\n\t\tif (opts.out && !opts.identify) {\n\t\t\tfs.accessSync(path.dirname(opts.out), fs.W_OK);\n\t\t\toutFile = fs.createWriteStream(opts.out);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error opening output file' +\n\t\t    ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tinFile.pipe(signer);\n\tinFile.on('end', function () {\n\t\tvar sig;\n\t\ttry {\n\t\t\tsig = signer.sign();\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-sign: error signing data: ' +\n\t\t\t    e.name + ': ' + e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar fmt = opts.format || 'asn1';\n\t\tvar output;\n\t\ttry {\n\t\t\toutput = sig.toBuffer(fmt);\n\t\t\tif (!opts.binary)\n\t\t\t\toutput = output.toString('base64');\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-sign: error converting signature' +\n\t\t\t    ' to ' + fmt + ' format: ' + e.name + ': ' +\n\t\t\t    e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\toutFile.write(output);\n\t\tif (!opts.binary)\n\t\t\toutFile.write('\\n');\n\t\toutFile.once('drain', function () {\n\t\t\tprocess.exit(0);\n\t\t});\n\t});\n}\n"]}