{"version":3,"sources":["fingerprint.js"],"names":[],"mappings":"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","file":"fingerprint-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Fingerprint;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar errs = require('./errors');\nvar Key = require('./key');\nvar utils = require('./utils');\n\nvar FingerprintFormatError = errs.FingerprintFormatError;\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\n\nfunction Fingerprint(opts) {\n\tassert.object(opts, 'options');\n\tassert.buffer(opts.hash, 'options.hash');\n\tassert.string(opts.algorithm, 'options.algorithm');\n\n\tthis.algorithm = opts.algorithm.toLowerCase();\n\tif (algs.hashAlgs[this.algorithm] !== true)\n\t\tthrow (new InvalidAlgorithmError(this.algorithm));\n\n\tthis.hash = opts.hash;\n}\n\nFingerprint.prototype.toString = function (format) {\n\tif (format === undefined) {\n\t\tif (this.algorithm === 'md5')\n\t\t\tformat = 'hex';\n\t\telse\n\t\t\tformat = 'base64';\n\t}\n\tassert.string(format);\n\n\tswitch (format) {\n\tcase 'hex':\n\t\treturn (addColons(this.hash.toString('hex')));\n\tcase 'base64':\n\t\treturn (sshBase64Format(this.algorithm,\n\t\t    this.hash.toString('base64')));\n\tdefault:\n\t\tthrow (new FingerprintFormatError(undefined, format));\n\t}\n};\n\nFingerprint.prototype.matches = function (key) {\n\tassert.object(key, 'key');\n\tutils.assertCompatible(key, Key, [1, 0], 'key');\n\n\tvar theirHash = key.hash(this.algorithm);\n\tvar theirHash2 = crypto.createHash(this.algorithm).\n\t    update(theirHash).digest('base64');\n\n\tif (this.hash2 === undefined)\n\t\tthis.hash2 = crypto.createHash(this.algorithm).\n\t\t    update(this.hash).digest('base64');\n\n\treturn (this.hash2 === theirHash2);\n};\n\nFingerprint.parse = function (fp, enAlgs) {\n\tassert.string(fp, 'fingerprint');\n\n\tvar alg, hash;\n\tassert.optionalArrayOfString(enAlgs, 'algorithms');\n\n\tvar parts = fp.split(':');\n\tif (parts.length == 2) {\n\t\talg = parts[0].toLowerCase();\n\t\t/*JSSTYLED*/\n\t\tvar base64RE = /^[A-Za-z0-9+\\/=]+$/;\n\t\tif (!base64RE.test(parts[1]))\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\ttry {\n\t\t\thash = new Buffer(parts[1], 'base64');\n\t\t} catch (e) {\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t}\n\t} else if (parts.length > 2) {\n\t\talg = 'md5';\n\t\tif (parts[0].toLowerCase() === 'md5')\n\t\t\tparts = parts.slice(1);\n\t\tparts = parts.join('');\n\t\t/*JSSTYLED*/\n\t\tvar md5RE = /^[a-fA-F0-9]+$/;\n\t\tif (!md5RE.test(parts))\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\ttry {\n\t\t\thash = new Buffer(parts, 'hex');\n\t\t} catch (e) {\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t}\n\t}\n\n\tif (alg === undefined)\n\t\tthrow (new FingerprintFormatError(fp));\n\n\tif (algs.hashAlgs[alg] === undefined)\n\t\tthrow (new InvalidAlgorithmError(alg));\n\n\tif (enAlgs !== undefined) {\n\t\tenAlgs = enAlgs.map(function (a) { return a.toLowerCase(); });\n\t\tif (enAlgs.indexOf(alg) === -1)\n\t\t\tthrow (new InvalidAlgorithmError(alg));\n\t}\n\n\treturn (new Fingerprint({algorithm: alg, hash: hash}));\n};\n\nfunction addColons(s) {\n\t/*JSSTYLED*/\n\treturn (s.replace(/(.{2})(?=.)/g, '$1:'));\n}\n\nfunction base64Strip(s) {\n\t/*JSSTYLED*/\n\treturn (s.replace(/=*$/, ''));\n}\n\nfunction sshBase64Format(alg, h) {\n\treturn (alg.toUpperCase() + ':' + base64Strip(h));\n}\n\nFingerprint.isFingerprint = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Fingerprint, ver));\n};\n\n/*\n * API versions for Fingerprint:\n * [1,0] -- initial ver\n * [1,1] -- first tagged ver\n */\nFingerprint.prototype._sshpkApiVersion = [1, 1];\n\nFingerprint._oldVersionDetect = function (obj) {\n\tassert.func(obj.toString);\n\tassert.func(obj.matches);\n\treturn ([1, 0]);\n};\n"]}