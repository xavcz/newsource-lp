{"version":3,"sources":["sshpk-verify"],"names":[],"mappings":"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","file":"sshpk-verify-compiled.js","sourcesContent":["#!/usr/bin/env node\n// -*- mode: js -*-\n// vim: set filetype=javascript :\n// Copyright 2015 Joyent, Inc.  All rights reserved.\n\nvar dashdash = require('dashdash');\nvar sshpk = require('../lib/index');\nvar fs = require('fs');\nvar path = require('path');\n\nvar options = [\n\t{\n\t\tnames: ['hash', 'H'],\n\t\ttype: 'string',\n\t\thelp: 'Hash algorithm (sha1, sha256, sha384, sha512)'\n\t},\n\t{\n\t\tnames: ['verbose', 'v'],\n\t\ttype: 'bool',\n\t\thelp: 'Display verbose info about key and hash used'\n\t},\n\t{\n\t\tnames: ['identity', 'i'],\n\t\ttype: 'string',\n\t\thelp: 'Path to (public) key to use'\n\t},\n\t{\n\t\tnames: ['file', 'f'],\n\t\ttype: 'string',\n\t\thelp: 'Input filename'\n\t},\n\t{\n\t\tnames: ['format', 't'],\n\t\ttype: 'string',\n\t\thelp: 'Signature format (asn1, ssh, raw)'\n\t},\n\t{\n\t\tnames: ['signature', 's'],\n\t\ttype: 'string',\n\t\thelp: 'base64-encoded signature data'\n\t},\n\t{\n\t\tnames: ['help', 'h'],\n\t\ttype: 'bool',\n\t\thelp: 'Shows this help text'\n\t}\n];\n\nif (require.main === module) {\n\tvar parser = dashdash.createParser({\n\t\toptions: options\n\t});\n\n\ttry {\n\t\tvar opts = parser.parse(process.argv);\n\t} catch (e) {\n\t\tconsole.error('sshpk-verify: error: %s', e.message);\n\t\tprocess.exit(3);\n\t}\n\n\tif (opts.help || opts._args.length > 1) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-verify: sign data using an SSH key\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(3);\n\t}\n\n\tif (!opts.identity) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-verify: the -i or --identity option ' +\n\t\t    'is required\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(3);\n\t}\n\n\tif (!opts.signature) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-verify: the -s or --signature option ' +\n\t\t    'is required\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(3);\n\t}\n\n\tvar keyData = fs.readFileSync(opts.identity);\n\n\tvar key;\n\ttry {\n\t\tkey = sshpk.parseKey(keyData);\n\t} catch (e) {\n\t\tconsole.error('sshpk-verify: error loading key \"' +\n\t\t    opts.identity + '\": ' + e.name + ': ' + e.message);\n\t\tprocess.exit(2);\n\t}\n\n\tvar fmt = opts.format || 'asn1';\n\tvar sigData = new Buffer(opts.signature, 'base64');\n\n\tvar sig;\n\ttry {\n\t\tsig = sshpk.parseSignature(sigData, key.type, fmt);\n\t} catch (e) {\n\t\tconsole.error('sshpk-verify: error parsing signature: ' +\n\t\t    e.name + ': ' + e.message);\n\t\tprocess.exit(2);\n\t}\n\n\tvar hash = opts.hash || key.defaultHashAlgorithm();\n\n\tvar verifier;\n\ttry {\n\t\tverifier = key.createVerify(hash);\n\t} catch (e) {\n\t\tconsole.error('sshpk-verify: error creating verifier: ' +\n\t\t    e.name + ': ' + e.message);\n\t\tprocess.exit(2);\n\t}\n\n\tif (opts.verbose) {\n\t\tconsole.error('sshpk-verify: using %s-%s with a %d bit key',\n\t\t    key.type, hash, key.size);\n\t}\n\n\tvar inFile = process.stdin;\n\tvar inFileName = 'stdin';\n\n\tvar inFilePath;\n\tif (opts.file) {\n\t\tinFilePath = opts.file;\n\t} else if (opts._args.length === 1) {\n\t\tinFilePath = opts._args[0];\n\t}\n\n\tif (inFilePath)\n\t\tinFileName = path.basename(inFilePath);\n\n\ttry {\n\t\tif (inFilePath) {\n\t\t\tfs.accessSync(inFilePath, fs.R_OK);\n\t\t\tinFile = fs.createReadStream(inFilePath);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-verify: error opening input file' +\n\t\t     ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(2);\n\t}\n\n\tinFile.pipe(verifier);\n\tinFile.on('end', function () {\n\t\tvar ret;\n\t\ttry {\n\t\t\tret = verifier.verify(sig);\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-verify: error verifying data: ' +\n\t\t\t    e.name + ': ' + e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tif (ret) {\n\t\t\tconsole.error('OK');\n\t\t\tprocess.exit(0);\n\t\t}\n\n\t\tconsole.error('NOT OK');\n\t\tprocess.exit(1);\n\t});\n}\n"]}