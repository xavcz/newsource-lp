{"version":3,"sources":["ssh-private.js"],"names":[],"mappings":"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","file":"ssh-private-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadSSHPrivate: readSSHPrivate,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar crypto = require('crypto');\n\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar rfc4253 = require('./rfc4253');\nvar SSHBuffer = require('../ssh-buffer');\n\nfunction read(buf) {\n\treturn (pem.read(buf));\n}\n\nvar MAGIC = 'openssh-key-v1';\n\nfunction readSSHPrivate(type, buf) {\n\tbuf = new SSHBuffer({buffer: buf});\n\n\tvar magic = buf.readCString();\n\tassert.strictEqual(magic, MAGIC, 'bad magic string');\n\n\tvar cipher = buf.readString();\n\tvar kdf = buf.readString();\n\n\t/* We only support unencrypted keys. */\n\tif (cipher !== 'none' || kdf !== 'none') {\n\t\tthrow (new Error('OpenSSH-format key is encrypted ' +\n\t\t     '(password-protected). Please use the SSH agent ' +\n\t\t     'or decrypt the key.'));\n\t}\n\n\t/* Skip over kdfoptions. */\n\tbuf.readString();\n\n\tvar nkeys = buf.readInt();\n\tif (nkeys !== 1) {\n\t\tthrow (new Error('OpenSSH-format key file contains ' +\n\t\t    'multiple keys: this is unsupported.'));\n\t}\n\n\tvar pubKey = buf.readBuffer();\n\n\tif (type === 'public') {\n\t\tassert.ok(buf.atEnd(), 'excess bytes left after key');\n\t\treturn (rfc4253.read(pubKey));\n\t}\n\n\tvar privKeyBlob = buf.readBuffer();\n\tassert.ok(buf.atEnd(), 'excess bytes left after key');\n\n\tbuf = new SSHBuffer({buffer: privKeyBlob});\n\n\tvar checkInt1 = buf.readInt();\n\tvar checkInt2 = buf.readInt();\n\tassert.strictEqual(checkInt1, checkInt2, 'checkints do not match');\n\n\tvar ret = {};\n\tvar key = rfc4253.readInternal(ret, 'private', buf.remainder());\n\n\tbuf.skip(ret.consumed);\n\n\tvar comment = buf.readString();\n\tkey.comment = comment;\n\n\treturn (key);\n}\n\nfunction write(key) {\n\tvar pubKey;\n\tif (PrivateKey.isPrivateKey(key))\n\t\tpubKey = key.toPublic();\n\telse\n\t\tpubKey = key;\n\n\tvar privBuf;\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tprivBuf = new SSHBuffer({});\n\t\tvar checkInt = crypto.randomBytes(4).readUInt32BE(0);\n\t\tprivBuf.writeInt(checkInt);\n\t\tprivBuf.writeInt(checkInt);\n\t\tprivBuf.write(key.toBuffer('rfc4253'));\n\t\tprivBuf.writeString(key.comment || '');\n\n\t\tvar n = 1;\n\t\twhile (privBuf._offset % 8 !== 0)\n\t\t\tprivBuf.writeChar(n++);\n\t}\n\n\tvar buf = new SSHBuffer({});\n\n\tbuf.writeCString(MAGIC);\n\tbuf.writeString('none');\t/* cipher */\n\tbuf.writeString('none');\t/* kdf */\n\tbuf.writeBuffer(new Buffer(0));\t/* kdfoptions */\n\n\tbuf.writeInt(1);\t\t/* nkeys */\n\tbuf.writeBuffer(pubKey.toBuffer('rfc4253'));\n\n\tif (privBuf)\n\t\tbuf.writeBuffer(privBuf.toBuffer());\n\n\tbuf = buf.toBuffer();\n\n\tvar header;\n\tif (PrivateKey.isPrivateKey(key))\n\t\theader = 'OPENSSH PRIVATE KEY';\n\telse\n\t\theader = 'OPENSSH PUBLIC KEY';\n\n\tvar tmp = buf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 70) +\n\t    18 + 16 + header.length*2 + 10;\n\tbuf = new Buffer(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 70;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n"]}