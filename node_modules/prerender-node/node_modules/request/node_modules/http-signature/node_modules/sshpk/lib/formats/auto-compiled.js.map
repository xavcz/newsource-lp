{"version":3,"sources":["auto.js"],"names":[],"mappings":"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","file":"auto-compiled.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\n\nfunction read(buf) {\n\tif (typeof (buf) === 'string') {\n\t\tif (buf.trim().match(/^[-]+[ ]*BEGIN/))\n\t\t\treturn (pem.read(buf));\n\t\tif (buf.match(/^\\s*ssh-[a-z]/))\n\t\t\treturn (ssh.read(buf));\n\t\tif (buf.match(/^\\s*ecdsa-/))\n\t\t\treturn (ssh.read(buf));\n\t\tbuf = new Buffer(buf, 'binary');\n\t} else {\n\t\tassert.buffer(buf);\n\t\tif (findPEMHeader(buf))\n\t\t\treturn (pem.read(buf));\n\t\tif (findSSHHeader(buf))\n\t\t\treturn (ssh.read(buf));\n\t}\n\tif (buf.readUInt32BE(0) < buf.length)\n\t\treturn (rfc4253.read(buf));\n\tthrow (new Error('Failed to auto-detect format of key'));\n}\n\nfunction findSSHHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 4 <= buf.length &&\n\t    buf.slice(offset, offset + 4).toString('ascii') === 'ssh-')\n\t\treturn (true);\n\tif (offset + 6 <= buf.length &&\n\t    buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findPEMHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10))\n\t\t++offset;\n\tif (buf[offset] !== 45)\n\t\treturn (false);\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 45))\n\t\t++offset;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32))\n\t\t++offset;\n\tif (offset + 5 > buf.length ||\n\t    buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN')\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction write(key) {\n\tthrow (new Error('\"auto\" format cannot be used for writing'));\n}\n"]}