{"version":3,"sources":["parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["// Copyright 2012 Joyent, Inc.  All rights reserved.\n\nvar assert = require('assert-plus');\nvar util = require('util');\nvar utils = require('./utils');\n\n\n\n///--- Globals\n\nvar HASH_ALGOS = utils.HASH_ALGOS;\nvar PK_ALGOS = utils.PK_ALGOS;\nvar HttpSignatureError = utils.HttpSignatureError;\nvar InvalidAlgorithmError = utils.InvalidAlgorithmError;\nvar validateAlgorithm = utils.validateAlgorithm;\n\nvar State = {\n  New: 0,\n  Params: 1\n};\n\nvar ParamsState = {\n  Name: 0,\n  Quote: 1,\n  Value: 2,\n  Comma: 3\n};\n\n\n///--- Specific Errors\n\n\nfunction ExpiredRequestError(message) {\n  HttpSignatureError.call(this, message, ExpiredRequestError);\n}\nutil.inherits(ExpiredRequestError, HttpSignatureError);\n\n\nfunction InvalidHeaderError(message) {\n  HttpSignatureError.call(this, message, InvalidHeaderError);\n}\nutil.inherits(InvalidHeaderError, HttpSignatureError);\n\n\nfunction InvalidParamsError(message) {\n  HttpSignatureError.call(this, message, InvalidParamsError);\n}\nutil.inherits(InvalidParamsError, HttpSignatureError);\n\n\nfunction MissingHeaderError(message) {\n  HttpSignatureError.call(this, message, MissingHeaderError);\n}\nutil.inherits(MissingHeaderError, HttpSignatureError);\n\nfunction StrictParsingError(message) {\n  HttpSignatureError.call(this, message, StrictParsingError);\n}\nutil.inherits(StrictParsingError, HttpSignatureError);\n\n///--- Exported API\n\nmodule.exports = {\n\n  /**\n   * Parses the 'Authorization' header out of an http.ServerRequest object.\n   *\n   * Note that this API will fully validate the Authorization header, and throw\n   * on any error.  It will not however check the signature, or the keyId format\n   * as those are specific to your environment.  You can use the options object\n   * to pass in extra constraints.\n   *\n   * As a response object you can expect this:\n   *\n   *     {\n   *       \"scheme\": \"Signature\",\n   *       \"params\": {\n   *         \"keyId\": \"foo\",\n   *         \"algorithm\": \"rsa-sha256\",\n   *         \"headers\": [\n   *           \"date\" or \"x-date\",\n   *           \"digest\"\n   *         ],\n   *         \"signature\": \"base64\"\n   *       },\n   *       \"signingString\": \"ready to be passed to crypto.verify()\"\n   *     }\n   *\n   * @param {Object} request an http.ServerRequest.\n   * @param {Object} options an optional options object with:\n   *                   - clockSkew: allowed clock skew in seconds (default 300).\n   *                   - headers: required header names (def: date or x-date)\n   *                   - algorithms: algorithms to support (default: all).\n   *                   - strict: should enforce latest spec parsing\n   *                             (default: false).\n   * @return {Object} parsed out object (see above).\n   * @throws {TypeError} on invalid input.\n   * @throws {InvalidHeaderError} on an invalid Authorization header error.\n   * @throws {InvalidParamsError} if the params in the scheme are invalid.\n   * @throws {MissingHeaderError} if the params indicate a header not present,\n   *                              either in the request headers from the params,\n   *                              or not in the params from a required header\n   *                              in options.\n   * @throws {StrictParsingError} if old attributes are used in strict parsing\n   *                              mode.\n   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.\n   */\n  parseRequest: function parseRequest(request, options) {\n    assert.object(request, 'request');\n    assert.object(request.headers, 'request.headers');\n    if (options === undefined) {\n      options = {};\n    }\n    if (options.headers === undefined) {\n      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];\n    }\n    assert.object(options, 'options');\n    assert.arrayOfString(options.headers, 'options.headers');\n    assert.optionalNumber(options.clockSkew, 'options.clockSkew');\n\n    if (!request.headers.authorization)\n      throw new MissingHeaderError('no authorization header present in ' +\n                                   'the request');\n\n    options.clockSkew = options.clockSkew || 300;\n\n\n    var i = 0;\n    var state = State.New;\n    var substate = ParamsState.Name;\n    var tmpName = '';\n    var tmpValue = '';\n\n    var parsed = {\n      scheme: '',\n      params: {},\n      signingString: '',\n\n      get algorithm() {\n        return this.params.algorithm.toUpperCase();\n      },\n\n      get keyId() {\n        return this.params.keyId;\n      }\n    };\n\n    var authz = request.headers.authorization;\n    for (i = 0; i < authz.length; i++) {\n      var c = authz.charAt(i);\n\n      switch (Number(state)) {\n\n      case State.New:\n        if (c !== ' ') parsed.scheme += c;\n        else state = State.Params;\n        break;\n\n      case State.Params:\n        switch (Number(substate)) {\n\n        case ParamsState.Name:\n          var code = c.charCodeAt(0);\n          // restricted name of A-Z / a-z\n          if ((code >= 0x41 && code <= 0x5a) || // A-Z\n              (code >= 0x61 && code <= 0x7a)) { // a-z\n            tmpName += c;\n          } else if (c === '=') {\n            if (tmpName.length === 0)\n              throw new InvalidHeaderError('bad param format');\n            substate = ParamsState.Quote;\n          } else {\n            throw new InvalidHeaderError('bad param format');\n          }\n          break;\n\n        case ParamsState.Quote:\n          if (c === '\"') {\n            tmpValue = '';\n            substate = ParamsState.Value;\n          } else {\n            throw new InvalidHeaderError('bad param format');\n          }\n          break;\n\n        case ParamsState.Value:\n          if (c === '\"') {\n            parsed.params[tmpName] = tmpValue;\n            substate = ParamsState.Comma;\n          } else {\n            tmpValue += c;\n          }\n          break;\n\n        case ParamsState.Comma:\n          if (c === ',') {\n            tmpName = '';\n            substate = ParamsState.Name;\n          } else {\n            throw new InvalidHeaderError('bad param format');\n          }\n          break;\n\n        default:\n          throw new Error('Invalid substate');\n        }\n        break;\n\n      default:\n        throw new Error('Invalid substate');\n      }\n\n    }\n\n    if (!parsed.params.headers || parsed.params.headers === '') {\n      if (request.headers['x-date']) {\n        parsed.params.headers = ['x-date'];\n      } else {\n        parsed.params.headers = ['date'];\n      }\n    } else {\n      parsed.params.headers = parsed.params.headers.split(' ');\n    }\n\n    // Minimally validate the parsed object\n    if (!parsed.scheme || parsed.scheme !== 'Signature')\n      throw new InvalidHeaderError('scheme was not \"Signature\"');\n\n    if (!parsed.params.keyId)\n      throw new InvalidHeaderError('keyId was not specified');\n\n    if (!parsed.params.algorithm)\n      throw new InvalidHeaderError('algorithm was not specified');\n\n    if (!parsed.params.signature)\n      throw new InvalidHeaderError('signature was not specified');\n\n    // Check the algorithm against the official list\n    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();\n    try {\n      validateAlgorithm(parsed.params.algorithm);\n    } catch (e) {\n      if (e instanceof InvalidAlgorithmError)\n        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +\n          'supported'));\n      else\n        throw (e);\n    }\n\n    // Build the signingString\n    for (i = 0; i < parsed.params.headers.length; i++) {\n      var h = parsed.params.headers[i].toLowerCase();\n      parsed.params.headers[i] = h;\n\n      if (h === 'request-line') {\n        if (!options.strict) {\n          /*\n           * We allow headers from the older spec drafts if strict parsing isn't\n           * specified in options.\n           */\n          parsed.signingString +=\n            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;\n        } else {\n          /* Strict parsing doesn't allow older draft headers. */\n          throw (new StrictParsingError('request-line is not a valid header ' +\n            'with strict parsing enabled.'));\n        }\n      } else if (h === '(request-target)') {\n        parsed.signingString +=\n          '(request-target): ' + request.method.toLowerCase() + ' ' +\n          request.url;\n      } else {\n        var value = request.headers[h];\n        if (value === undefined)\n          throw new MissingHeaderError(h + ' was not in the request');\n        parsed.signingString += h + ': ' + value;\n      }\n\n      if ((i + 1) < parsed.params.headers.length)\n        parsed.signingString += '\\n';\n    }\n\n    // Check against the constraints\n    var date;\n    if (request.headers.date || request.headers['x-date']) {\n        if (request.headers['x-date']) {\n          date = new Date(request.headers['x-date']);\n        } else {\n          date = new Date(request.headers.date);\n        }\n      var now = new Date();\n      var skew = Math.abs(now.getTime() - date.getTime());\n\n      if (skew > options.clockSkew * 1000) {\n        throw new ExpiredRequestError('clock skew of ' +\n                                      (skew / 1000) +\n                                      's was greater than ' +\n                                      options.clockSkew + 's');\n      }\n    }\n\n    options.headers.forEach(function (hdr) {\n      // Remember that we already checked any headers in the params\n      // were in the request, so if this passes we're good.\n      if (parsed.params.headers.indexOf(hdr) < 0)\n        throw new MissingHeaderError(hdr + ' was not a signed header');\n    });\n\n    if (options.algorithms) {\n      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)\n        throw new InvalidParamsError(parsed.params.algorithm +\n                                     ' is not a supported algorithm');\n    }\n\n    return parsed;\n  }\n\n};\n"]}