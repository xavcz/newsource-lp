{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var tape             = require('tape')\n  , EE               = require('events').EventEmitter\n  , util             = require('util')\n\n\n  , isStream         = require('./')\n  , isReadable       = require('./').isReadable\n  , isWritable       = require('./').isWritable\n  , isDuplex         = require('./').isDuplex\n\n  , CoreStreams      = require('stream')\n  , ReadableStream10 = require('./readable-stream-1.0/')\n  , ReadableStream11 = require('./readable-stream-1.1/')\n\n\nfunction test (pass, type, stream) {\n  tape('isStream('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isStream(stream), type)\n  })\n}\n\n\nfunction testReadable (pass, type, stream) {\n  tape('isReadable('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isReadable(stream), type)\n  })\n}\n\n\nfunction testWritable (pass, type, stream) {\n  tape('isWritable('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isWritable(stream), type)\n  })\n}\n\n\nfunction testDuplex (pass, type, stream) {\n  tape('isDuplex('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isDuplex(stream), type)\n  })\n}\n\n\n[ undefined, null, '', true, false, 0, 1, 1.0, 'string', {}, function foo () {} ].forEach(function (o) {\n  test(false, 'non-stream / primitive: ' + (JSON.stringify(o) || (o && o.toString()) || o), o)\n})\n\n\ntest(false, 'fake stream obj', { pipe: function () {} })\n\n\n;(function () {\n\n  // looks like a stream!\n\n  function Stream () {\n    EE.call(this)\n  }\n  util.inherits(Stream, EE)\n  Stream.prototype.pipe = function () {}\n  Stream.Stream = Stream\n\n  test(false, 'fake stream \"new Stream()\"', new Stream())\n\n}())\n\n\ntest(true, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntest(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntest(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntest(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntest(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntest(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntest(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntest(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntest(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntest(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntest(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntest(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntest(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntest(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntest(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntest(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\ntestReadable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntestReadable(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntestReadable(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntestReadable(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntestReadable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntestReadable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntestReadable(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntestReadable(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntestReadable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntestReadable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntestReadable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntestReadable(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntestReadable(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntestReadable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntestReadable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntestReadable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\ntestWritable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntestWritable(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntestWritable(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntestWritable(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntestWritable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntestWritable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntestWritable(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntestWritable(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntestWritable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntestWritable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntestWritable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntestWritable(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntestWritable(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntestWritable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntestWritable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntestWritable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\ntestDuplex(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntestDuplex(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntestDuplex(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntestDuplex(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntestDuplex(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntestDuplex(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntestDuplex(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntestDuplex(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntestDuplex(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntestDuplex(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntestDuplex(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntestDuplex(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntestDuplex(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntestDuplex(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntestDuplex(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntestDuplex(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\n;[ CoreStreams, ReadableStream10, ReadableStream11 ].forEach(function (p) {\n  [ 'Stream', 'Readable', 'Writable', 'Duplex', 'Transform', 'PassThrough' ].forEach(function (k) {\n    if (!p[k])\n      return\n\n    function SubStream () {\n      p[k].call(this)\n    }\n    util.inherits(SubStream, p[k])\n\n    test(true, 'Stream subclass: ' + p.name + '.' + k, new SubStream())\n\n  })\n})\n\n\n\n"]}