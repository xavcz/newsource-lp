{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["var oauth = require('./index')\n  , hmacsign = oauth.hmacsign\n  , assert = require('assert')\n  , qs = require('querystring')\n  ;\n\n// Tests from Twitter documentation https://dev.twitter.com/docs/auth/oauth\n\nvar reqsign = hmacsign('POST', 'https://api.twitter.com/oauth/request_token', \n  { oauth_callback: 'http://localhost:3005/the_dance/process_callback?service_provider_id=11'\n  , oauth_consumer_key: 'GDdmIQH6jhtmLUypg82g'\n  , oauth_nonce: 'QP70eNmVz8jvdPevU3oJD2AfF7R7odC2XJcn4XlZJqk'\n  , oauth_signature_method: 'HMAC-SHA1'\n  , oauth_timestamp: '1272323042'\n  , oauth_version: '1.0'\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\")\n\nconsole.log(reqsign)\nconsole.log('8wUi7m5HFQy76nowoCThusfgB+Q=')\nassert.equal(reqsign, '8wUi7m5HFQy76nowoCThusfgB+Q=')\n\nvar accsign = hmacsign('POST', 'https://api.twitter.com/oauth/access_token',\n  { oauth_consumer_key: 'GDdmIQH6jhtmLUypg82g'\n  , oauth_nonce: '9zWH6qe0qG7Lc1telCn7FhUbLyVdjEaL3MO5uHxn8'\n  , oauth_signature_method: 'HMAC-SHA1'\n  , oauth_token: '8ldIZyxQeVrFZXFOZH5tAwj6vzJYuLQpl0WUEYtWc'\n  , oauth_timestamp: '1272323047'\n  , oauth_verifier: 'pDNg57prOHapMbhv25RNf75lVRd6JDsni1AJJIDYoTY'\n  , oauth_version: '1.0'\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\", \"x6qpRnlEmW9JbQn4PQVVeVG8ZLPEx6A0TOebgwcuA\")\n  \nconsole.log(accsign)\nconsole.log('PUw/dHA4fnlJYM6RhXk5IU/0fCc=')\nassert.equal(accsign, 'PUw/dHA4fnlJYM6RhXk5IU/0fCc=')\n\nvar upsign = hmacsign('POST', 'http://api.twitter.com/1/statuses/update.json', \n  { oauth_consumer_key: \"GDdmIQH6jhtmLUypg82g\"\n  , oauth_nonce: \"oElnnMTQIZvqvlfXM56aBLAf5noGD0AQR3Fmi7Q6Y\"\n  , oauth_signature_method: \"HMAC-SHA1\"\n  , oauth_token: \"819797-Jxq8aYUDRmykzVKrgoLhXSq67TEa5ruc4GJC2rWimw\"\n  , oauth_timestamp: \"1272325550\"\n  , oauth_version: \"1.0\"\n  , status: 'setting up my twitter 私のさえずりを設定する'\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\", \"J6zix3FfA9LofH0awS24M3HcBYXO5nI1iYe8EfBA\")\n\nconsole.log(upsign)\nconsole.log('yOahq5m0YjDDjfjxHaXEsW9D+X0=')\nassert.equal(upsign, 'yOahq5m0YjDDjfjxHaXEsW9D+X0=')\n\n// handle objects in params (useful for Wordpress REST API)\nvar upsign = hmacsign('POST', 'http://wordpress.com/wp-json',\n  { oauth_consumer_key: \"GDdmIQH6jhtmLUypg82g\"\n  , oauth_nonce: \"oElnnMTQIZvqvlfXM56aBLAf5noGD0AQR3Fmi7Q6Y\"\n  , oauth_signature_method: \"HMAC-SHA1\"\n  , oauth_token: \"819797-Jxq8aYUDRmykzVKrgoLhXSq67TEa5ruc4GJC2rWimw\"\n  , oauth_timestamp: \"1272325550\"\n  , oauth_version: \"1.0\"\n  , filter: { number: \"-1\" }\n  }, \"MCD8BKwGdgPHvAuvgvz4EQpqDAtx89grbuNMRd7Eh98\", \"J6zix3FfA9LofH0awS24M3HcBYXO5nI1iYe8EfBA\")\n\nconsole.log(upsign)\nconsole.log('YrJFBdwnjuIitGpKrxLUplcuuUQ=')\nassert.equal(upsign, 'YrJFBdwnjuIitGpKrxLUplcuuUQ=')\n\n// example in rfc5849\nvar params = qs.parse('b5=%3D%253D&a3=a&c%40=&a2=r%20b' + '&' + 'c2&a3=2+q')\nparams.oauth_consumer_key = '9djdj82h48djs9d2'\nparams.oauth_token = 'kkk9d7dh3k39sjv7'\nparams.oauth_nonce = '7d8f3e4a'\nparams.oauth_signature_method = 'HMAC-SHA1'\nparams.oauth_timestamp = '137131201'\n\nvar rfc5849sign = hmacsign('POST', 'http://example.com/request',\n  params, \"j49sk3j29djd\", \"dh893hdasih9\")\n\nconsole.log(rfc5849sign)\nconsole.log('r6/TJjbCOr97/+UU0NsvSne7s5g=')\nassert.equal(rfc5849sign, 'r6/TJjbCOr97/+UU0NsvSne7s5g=')\n\n\n// PLAINTEXT\n\nvar plainSign = oauth.sign('PLAINTEXT', 'GET', 'http://dummy.com', {}, 'consumer_secret', 'token_secret')\nconsole.log(plainSign)\nassert.equal(plainSign, 'consumer_secret&token_secret')\n\nplainSign = oauth.plaintext('consumer_secret', 'token_secret')\nconsole.log(plainSign)\nassert.equal(plainSign, 'consumer_secret&token_secret')\n"]}